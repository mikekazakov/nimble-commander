// https://github.com/ScintillaOrg/lexilla/blob/master/lexers/LexAsm.cxx
{
    "lexer": "asm",
    "wordlists": [
        // CPU instructions
        "aaa aad aam aas adc adcx add adox and andn bextr blsi blsmsk blsr bound bsf bsr bswap bt btc btr bts bzhi call cbw cdq cdqe clc cld cmc cmov cmp cmps cmpxchg cmpxchg16b cmpxchg8b cpuid cqo crc32 cwd cwde daa das dec div enter fxrstor fxsave idiv imul inc int into ja jae jb jbe jc jcxz je jecxz jg jge jl jle jmp jna jnae jnb jnbe jnc jne jng jnge jnl jnle jno jnp jns jnz jo jp jpe jpo jrcxz js jz lahf lddqu ldmxcsr lds lea leave les lfence lfs lgs lock lods lodsb lodsd lodsq lodsw loop lss lzcnt maskmovdqu maskmovq mfence mov movbe movd movdq2q movdqa movdqu movntdq movntdqa movnti movntq movq movq2dq movs movsx movsxd movzx mul mulx neg nop not or packsswb packusdw packuswb palignr pause pblendvb pblendw pdep pext pextrb pextrd pextrq pextrw pinsrb pinsrd pinsrq pinsrw pmovmskb pmovsx pmovzx pop popa popcnt popf prefetchnta prefetchw pshufb pshufd pshufl pshufw push pusha pushf rcr rdpmc rdrand rdseed rdtsc rdtscp rep ret rol ror rorx sahf salc sar sarx sbb scas sete sfence shl shld shlx shr shrd shrx stc std stmxcsr stos sub test tzcnt valignd valignq vextracti128 vinserti128 vinserti32x4 vinserti64x4 vmovd vmovdqa vmovdqa32 vmovdqa64 vmovdqu vmovntdq vpblendd vpblendmb vpblendmd vpblendmq vpblendmw vpblendvb vperm2i128 vpermd vpermi2d vpermi2q vpermi2w vpermq vpermt2d vpermt2q vpermt2w vpermw vpmaskmovd vpmaskmovq vpshufb vpshufbitqmb vshufi32x4 vshufi64x2 vzeroall vzeroupper xadd xchg xgetbv xlat xor xrstor xsave xsavec xsaveopt",
        // FPU instructions
        "addpd addps addsd addss addsubpd addsubps andnpd andnps andpd andps blendpd blendps blendvpd blendvps comisd comiss cvtdq2pd cvtdq2ps cvtpd2ps cvtpi2pd cvtpi2ps cvtps2pd cvtsd2ss cvtss2sd cvtusi2ss divpd divps divsd divss dppd dpps extractps f2xm1 fabs fadd faddp fbld fbstp fchs fcmov fcom fcomi fcomip fcomp fcompp fcos fdecstp fdiv fdivp fdivr ffree ffreep fiadd ficom ficomp fidiv fidivr fild fimul fincstp fist fistp fisttp fisub fisubr fld fld1 fldcw fldl2e fldpi fldz fmul fmulp fnclex fninit fnop fnsave fnstcw fnstsw fpatan fprem fprem1 fptan frndint frstor fscale fsin fsincos fsqrt fst fstp fsub fsubp fsubr ftst fucom fucomi fucomip fucompp fxam fxch fxtract fyl2x fyl2xp1 haddpd haddps hsubpd hsubps insertps ldup maxpd maxps maxsd maxss movapd movaps movddup movhlps movhpd movhps movmskpd movmskps movntpd movntps movsd movsh movss mulpd mulps mulsd mulss orpd orps rcpps rcpss roundpd roundps roundsd roundss rsqrtps rsqrtss shufpd shufps sqrtps sqrtsd sqrtss subpd subps subsd subss ucomisd ucomiss vaddpd vaddps vblendmpd vblendmps vblendvpd vblendvps vbroadcastf128 vbroadcastsd vbroadcastss vcompresspd vcompressps vcvtdq2pd vcvtdq2ps vcvtpd2ps vcvtph2ps vcvtps2pd vcvtps2ph vcvtqq2pd vcvtqq2ps vcvtudq2pd vcvtuqq2ps vdbpsadbw vdivpd vdivps vextractf128 vextractf32x4 vextractf64x2 vfixupimmsd vfixupimmss vfpclasssd vfpclassss vgatherdpd vgatherdps vgatherqpd vgatherqps vgetexpsd vgetexpss vgetmantpd vgetmantps vinsertf128 vmaskmovpd vmaskmovps vmovapd vmovaps vmovmskpd vmovmskps vmovntpd vmovntps vmovupd vmovups vmulpd vmulps vperm2f128 vpermi2pd vpermi2ps vpermilpd vpermilps vpermpd vpermps vrangepd vrangeps vrangesd vrangess vrcp14ps vrcp14ss vreducepd vreduceps vreducesd vreducess vrndscalepd vrndscaleps vrndscalesd vrndscaless vrsqrt14ps vrsqrt14ss vrsqrtps vscalefpd vscalefps vscalefsd vscalefss vscatterdpd vscatterdps vscatterqpd vscatterqps vshuff32x4 vshuff64x2 vsqrtpd vsqrtps vsubpd vsubps vtestpd vtestps wait xorpd xorps",
        // Registers
        "ah al ax bh bl bp bx ch cl cx dh di dl ds dx eax ebp ebx ecx edi edx es esi esp r10 r10b r10d r10w r11 r11b r11d r11w r12 r12b r12d r12w r13 r13b r13d r13w r14 r14b r14d r14w r15 r15b r15d r15w r8 r8b r8d r8w r9 r9b r9d r9w rax rbp rbx rcx rdi rdx rip rsi rsp si sp xmm0 xmm1 xmm10 xmm11 xmm12 xmm13 xmm14 xmm15 xmm16 xmm17 xmm18 xmm19 xmm2 xmm20 xmm21 xmm22 xmm23 xmm24 xmm25 xmm26 xmm27 xmm28 xmm29 xmm3 xmm30 xmm31 xmm4 xmm5 xmm6 xmm7 xmm8 xmm9 ymm0 ymm1 ymm10 ymm11 ymm12 ymm13 ymm14 ymm15 ymm16 ymm17 ymm18 ymm19 ymm2 ymm20 ymm21 ymm22 ymm23 ymm24 ymm25 ymm26 ymm27 ymm28 ymm29 ymm3 ymm30 ymm31 ymm4 ymm5 ymm6 ymm7 ymm8 ymm9 zmm0 zmm1 zmm10 zmm11 zmm12 zmm13 zmm14 zmm15 zmm16 zmm17 zmm18 zmm19 zmm2 zmm20 zmm21 zmm22 zmm23 zmm24 zmm25 zmm26 zmm27 zmm28 zmm29 zmm3 zmm30 zmm31 zmm4 zmm5 zmm6 zmm7 zmm8 zmm9"
    ],
    "properties": {
    },
    "mapping": {
        "SCE_ASM_DEFAULT": "default",
        "SCE_ASM_COMMENT": "comment",
        "SCE_ASM_NUMBER": "number",
        "SCE_ASM_STRING": "string",
        "SCE_ASM_OPERATOR": "operator",
        "SCE_ASM_IDENTIFIER": "identifier",
        "SCE_ASM_CPUINSTRUCTION": "keyword",
        "SCE_ASM_MATHINSTRUCTION": "keyword",
        "SCE_ASM_REGISTER": "keyword",
        "SCE_ASM_DIRECTIVE": "preprocessor",
        "SCE_ASM_DIRECTIVEOPERAND": "preprocessor",
        "SCE_ASM_COMMENTBLOCK": "comment",
        "SCE_ASM_CHARACTER": "string",
        "SCE_ASM_STRINGEOL": "string",
        "SCE_ASM_EXTINSTRUCTION": "keyword",
        "SCE_ASM_COMMENTDIRECTIVE": "comment"
    }
}
