// https://github.com/ScintillaOrg/lexilla/blob/master/lexers/LexCPP.cxx
{
    "lexer": "cpp",
    "wordlists": [
        "alignas alignof and and_eq asm auto bitand bitor bool break case catch char char8_t char16_t char32_t class compl concept const consteval constexpr constinit const_cast continue co_await co_return co_yield decltype default delete do double dynamic_cast else enum explicit export extern false final float for friend goto if import inline int long module mutable namespace new noexcept not not_eq nullptr operator or or_eq override private protected public register reinterpret_cast requires return short signed sizeof static static_assert static_cast struct switch template this thread_local throw true try typedef typeid typename union unsigned using virtual void volatile wchar_t while xor xor_eq",
        "BOOL Class NO SEL YES id nil self super @class @end @implementation @interface @optional @property @protocol @selector @synthesize @YES @NO __weak __strong"
    ],
    "properties": {
        "styling.within.preprocessor": "1",
        "lexer.cpp.allow.dollars": "0",
        "lexer.cpp.track.preprocessor": "0"
    },
    "mapping": {
        "SCE_C_DEFAULT": "default",
        "SCE_C_COMMENT": "comment",
        "SCE_C_COMMENTLINE": "comment",
        "SCE_C_COMMENTDOC": "comment",
        "SCE_C_NUMBER": "number",
        "SCE_C_WORD": "keyword",
        "SCE_C_STRING": "string",
        "SCE_C_CHARACTER": "string",
        "SCE_C_UUID": "string",
        "SCE_C_PREPROCESSOR": "preprocessor",
        "SCE_C_OPERATOR": "operator",
        "SCE_C_IDENTIFIER": "identifier",
        "SCE_C_STRINGEOL": "string",
        "SCE_C_VERBATIM": "string",
        "SCE_C_REGEX": "string",
        "SCE_C_REGEX": "string",
        "SCE_C_COMMENTLINEDOC": "comment",
        "SCE_C_WORD2": "keyword",
        "SCE_C_COMMENTDOCKEYWORD": "comment",
        "SCE_C_COMMENTDOCKEYWORDERROR": "comment",
        "SCE_C_GLOBALCLASS": "identifier",
        "SCE_C_STRINGRAW": "string",
        "SCE_C_TRIPLEVERBATIM": "string",
        "SCE_C_HASHQUOTEDSTRING": "string",
        "SCE_C_PREPROCESSORCOMMENT": "comment",
        "SCE_C_PREPROCESSORCOMMENTDOC": "comment",
        "SCE_C_USERLITERAL": "identifier",
        "SCE_C_TASKMARKER": "comment",
        "SCE_C_ESCAPESEQUENCE": "string"
    }
}
