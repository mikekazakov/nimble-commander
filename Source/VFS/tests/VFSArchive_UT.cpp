// Copyright (C) 2022-2025 Michael Kazakov. Subject to GNU General Public License version 3.
#include "Tests.h"
#include "TestEnv.h"
#include <VFS/VFS.h>
#include <VFS/ArcLA.h>
#include "../source/ArcLA/Internal.h" // FIXME!
#include <VFS/VFSGenericMemReadOnlyFile.h>
#include <Base/WriteAtomically.h>
#include <Base/algo.h>

using namespace nc::vfs;

#define PREFIX "VFSArchive "

static void CheckFileIs(VFSHost &_host, const std::string_view _path, const std::string_view _content)
{
    const VFSFilePtr file = _host.CreateFile(_path).value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto data = file->ReadFile();
    REQUIRE(data != std::nullopt);
    CHECK(std::string_view{reinterpret_cast<const char *>(data->data()), data->size()} == _content);
}

TEST_CASE(PREFIX "Can unzip an archive with Chinese symbols")
{
    // These two archives have a single file named "中文测试", which is 4byte long: "123\x0A"

    // This one was compressed via Keka 1.2.55
    static const unsigned char __chineese_name_zip_a[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x50, 0x04, 0xf8, 0x54, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x20, 0x00, 0xe4, 0xb8, 0xad, 0xe6, 0x96, 0x87,
        0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x18, 0x23, 0xdc, 0x62, 0x19, 0x23, 0xdc,
        0x62, 0x18, 0x23, 0xdc, 0x62, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00,
        0x00, 0x00, 0x33, 0x34, 0x32, 0xe6, 0x02, 0x00, 0x50, 0x4b, 0x07, 0x08, 0x08, 0xfd, 0x82, 0x5a, 0x06, 0x00,
        0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x50, 0x04, 0xf8, 0x54, 0x08, 0xfd, 0x82, 0x5a, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00,
        0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0xe4, 0xb8,
        0xad, 0xe6, 0x96, 0x87, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x18, 0x23, 0xdc,
        0x62, 0x19, 0x23, 0xdc, 0x62, 0x18, 0x23, 0xdc, 0x62, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00,
        0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x5a, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00};
    static const unsigned int __chineese_name_zip_a_len = 208;

    // This one was compressed via NC v1.4(?)
    static const unsigned char __chineese_name_zip_b[] = {
        0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x08, 0x00, 0x00, 0x51, 0x04, 0xf8, 0x54, 0x08, 0xfd, 0x82, 0x5a,
        0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xe4, 0xb8, 0xad, 0xe6, 0x96, 0x87,
        0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0x31, 0x32, 0x33, 0x0a, 0x50, 0x4b, 0x01, 0x02, 0x3f, 0x03, 0x0a, 0x00,
        0x00, 0x08, 0x00, 0x00, 0x51, 0x04, 0xf8, 0x54, 0x08, 0xfd, 0x82, 0x5a, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
        0x00, 0x00, 0x0c, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x80, 0xa4, 0x81, 0x00, 0x00,
        0x00, 0x00, 0xe4, 0xb8, 0xad, 0xe6, 0x96, 0x87, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0x0a, 0x00, 0x20, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x18, 0x00, 0x29, 0xf5, 0x28, 0x16, 0xb2, 0x9e, 0xd8, 0x01, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x5e, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00};
    static const unsigned int __chineese_name_zip_b_len = 162;

    // This one is compressed via MacOS 13.0.1
    static const unsigned char __3_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x51, 0x04, 0xf8, 0x54, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x20, 0x00, 0xe4, 0xb8, 0xad, 0xe6, 0x96, 0x87,
        0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x8a, 0x85, 0xdc, 0x62, 0xe4, 0xd1, 0x99,
        0x63, 0xdf, 0xd1, 0x99, 0x63, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00,
        0x00, 0x00, 0x33, 0x34, 0x32, 0xe6, 0x02, 0x00, 0x50, 0x4b, 0x07, 0x08, 0x08, 0xfd, 0x82, 0x5a, 0x06, 0x00,
        0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x51, 0x04, 0xf8, 0x54, 0x08, 0xfd, 0x82, 0x5a, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00,
        0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0xe4, 0xb8,
        0xad, 0xe6, 0x96, 0x87, 0xe6, 0xb5, 0x8b, 0xe8, 0xaf, 0x95, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x8a, 0x85, 0xdc,
        0x62, 0xe4, 0xd1, 0x99, 0x63, 0xdf, 0xd1, 0x99, 0x63, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00,
        0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x5a, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00};
    static const unsigned int __3_zip_len = 208;

    auto check = [](std::span<const std::byte> _bytes) {
        const TestDir dir;
        const auto path = std::filesystem::path(dir.directory) / "tmp.zip";
        REQUIRE(nc::base::WriteAtomically(path, _bytes));

        std::shared_ptr<ArchiveHost> host;
        REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

        CHECK(host->StatTotalFiles() == 1);
        CHECK(host->StatTotalDirs() == 0);
        CHECK(host->StatTotalRegs() == 1);

        const VFSFilePtr file = host->CreateFile("/中文测试").value();
        REQUIRE(file->Open(VFSFlags::OF_Read) == 0);

        auto bytes = file->ReadFile();
        REQUIRE(bytes);
        REQUIRE(bytes->size() == 4);
        CHECK(std::memcmp(bytes->data(), "123\x0A", 4) == 0);
    };
    check({reinterpret_cast<const std::byte *>(__chineese_name_zip_a), __chineese_name_zip_a_len});
    check({reinterpret_cast<const std::byte *>(__chineese_name_zip_b), __chineese_name_zip_b_len});
    check({reinterpret_cast<const std::byte *>(__3_zip), __3_zip_len});
}

TEST_CASE(PREFIX "Can unzip an archive with Cyrillic symbols")
{
    // These two archives have a single file named "Привет, Мир!.txt", which is byte long: "123"

    // This one is compressed via MacOS 13.0.1
    static const unsigned char __1_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0xb3, 0x69, 0x8e, 0x55, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x19, 0x00, 0x20, 0x00, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8,
        0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c, 0x20, 0xd0, 0x9c, 0xd0, 0xb8, 0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78,
        0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x02, 0xcc, 0x99, 0x63, 0x04, 0xcc, 0x99, 0x63, 0x02, 0xcc, 0x99, 0x63,
        0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x33, 0x34, 0x32,
        0x06, 0x00, 0x50, 0x4b, 0x07, 0x08, 0xd2, 0x63, 0x48, 0x88, 0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0xb3, 0x69, 0x8e, 0x55, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x24, 0x00, 0x20, 0x00, 0x5f, 0x5f, 0x4d, 0x41, 0x43, 0x4f,
        0x53, 0x58, 0x2f, 0x2e, 0x5f, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c,
        0x20, 0xd0, 0x9c, 0xd0, 0xb8, 0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x02,
        0xcc, 0x99, 0x63, 0x04, 0xcc, 0x99, 0x63, 0x11, 0xcc, 0x99, 0x63, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5,
        0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x63, 0x60, 0x15, 0x63, 0x67, 0x60, 0x62, 0x60, 0xf0, 0x4d,
        0x4c, 0x56, 0xf0, 0x0f, 0x56, 0x88, 0x50, 0x80, 0x02, 0x90, 0x18, 0x03, 0x27, 0x10, 0x1b, 0x01, 0xf1, 0x46,
        0x20, 0x06, 0xf1, 0x1f, 0x33, 0x10, 0x05, 0x1c, 0x43, 0x42, 0x82, 0xa0, 0x4c, 0x90, 0x8e, 0x23, 0x40, 0x2c,
        0x8f, 0xa6, 0x84, 0x09, 0x2a, 0xce, 0xcf, 0xc0, 0x20, 0x9e, 0x9c, 0x9f, 0xab, 0x97, 0x58, 0x50, 0x90, 0x93,
        0xaa, 0x17, 0x92, 0x5a, 0x51, 0xe2, 0x9a, 0x97, 0x9c, 0x9f, 0x92, 0x99, 0x97, 0x0e, 0x51, 0x77, 0x19, 0x88,
        0x05, 0x18, 0x18, 0xa4, 0x10, 0x6a, 0x72, 0x12, 0x8b, 0x4b, 0x4a, 0x8b, 0x53, 0x53, 0x52, 0x12, 0x4b, 0x52,
        0x95, 0x03, 0x82, 0x41, 0x8a, 0x4a, 0x4b, 0xd2, 0x74, 0x2d, 0xac, 0x0d, 0x8d, 0x4d, 0x8c, 0x0c, 0xcd, 0x2d,
        0x2d, 0x4c, 0x18, 0xce, 0xcc, 0x4c, 0x06, 0x09, 0x3f, 0x73, 0x11, 0x31, 0x04, 0xd1, 0x00, 0x50, 0x4b, 0x07,
        0x08, 0x99, 0x83, 0x0e, 0xe6, 0x85, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14,
        0x03, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0xb3, 0x69, 0x8e, 0x55, 0xd2, 0x63, 0x48, 0x88, 0x05, 0x00, 0x00,
        0x00, 0x03, 0x00, 0x00, 0x00, 0x19, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4,
        0x81, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c,
        0x20, 0xd0, 0x9c, 0xd0, 0xb8, 0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x02,
        0xcc, 0x99, 0x63, 0x04, 0xcc, 0x99, 0x63, 0x02, 0xcc, 0x99, 0x63, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5,
        0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00,
        0x08, 0x00, 0xb3, 0x69, 0x8e, 0x55, 0x99, 0x83, 0x0e, 0xe6, 0x85, 0x00, 0x00, 0x00, 0xe3, 0x00, 0x00, 0x00,
        0x24, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x6c, 0x00, 0x00, 0x00,
        0x5f, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x58, 0x2f, 0x2e, 0x5f, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0,
        0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c, 0x20, 0xd0, 0x9c, 0xd0, 0xb8, 0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78, 0x74,
        0x55, 0x54, 0x0d, 0x00, 0x07, 0x02, 0xcc, 0x99, 0x63, 0x04, 0xcc, 0x99, 0x63, 0x11, 0xcc, 0x99, 0x63, 0x75,
        0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06,
        0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0xd9, 0x00, 0x00, 0x00, 0x63, 0x01, 0x00, 0x00, 0x00, 0x00};
    static const unsigned int __1_zip_len = 594;

    // This one is compressed via NC 1.4
    const unsigned char __2_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x08, 0x08, 0x00, 0xb3, 0x69, 0x8e, 0x55, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x19, 0x00, 0x20, 0x00, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8,
        0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c, 0x20, 0xd0, 0x9c, 0xd0, 0xb8, 0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78,
        0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x02, 0xcc, 0x99, 0x63, 0x04, 0xcc, 0x99, 0x63, 0x02, 0xcc, 0x99, 0x63,
        0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x33, 0x34, 0x32,
        0x06, 0x00, 0x50, 0x4b, 0x07, 0x08, 0xd2, 0x63, 0x48, 0x88, 0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x24, 0x00, 0x14, 0x00, 0x5f, 0x5f, 0x4d, 0x41, 0x43, 0x4f,
        0x53, 0x58, 0x2f, 0x2e, 0x5f, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c,
        0x20, 0xd0, 0x9c, 0xd0, 0xb8, 0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x01, 0x00, 0x00, 0x75,
        0x78, 0x0b, 0x00, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x63, 0x60, 0x15, 0x63,
        0x67, 0x60, 0x62, 0x60, 0xf0, 0x4d, 0x4c, 0x56, 0xf0, 0x0f, 0x56, 0x88, 0x50, 0x80, 0x02, 0x90, 0x18, 0x03,
        0x27, 0x10, 0x1b, 0x01, 0xf1, 0x26, 0x20, 0x06, 0xf1, 0x9f, 0x30, 0x10, 0x05, 0x1c, 0x43, 0x42, 0x82, 0xa0,
        0x4c, 0x90, 0x8e, 0x23, 0x40, 0xac, 0x80, 0xa6, 0x84, 0x09, 0x2a, 0xce, 0xcf, 0xc0, 0x20, 0x9e, 0x9c, 0x9f,
        0xab, 0x97, 0x58, 0x50, 0x90, 0x93, 0xaa, 0x17, 0x92, 0x5a, 0x51, 0xe2, 0x9a, 0x97, 0x9c, 0x9f, 0x92, 0x99,
        0x97, 0x0e, 0x51, 0x77, 0x05, 0x88, 0x05, 0x18, 0x18, 0xa4, 0x10, 0x6a, 0x72, 0x12, 0x8b, 0x4b, 0x4a, 0x8b,
        0x53, 0x53, 0x52, 0x12, 0x4b, 0x52, 0x95, 0x03, 0x82, 0x41, 0x8a, 0x4a, 0x4b, 0xd2, 0x74, 0x2d, 0xac, 0x0d,
        0x8d, 0x4d, 0x8c, 0x0c, 0xcd, 0x2d, 0x2d, 0x4c, 0x18, 0x18, 0xce, 0xcc, 0x4c, 0x06, 0x89, 0x3f, 0x73, 0x11,
        0x31, 0x04, 0xd1, 0x00, 0x50, 0x4b, 0x07, 0x08, 0x1b, 0x54, 0x58, 0x7a, 0x86, 0x00, 0x00, 0x00, 0xe4, 0x00,
        0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x08, 0x08, 0x00, 0xb3, 0x69, 0x8e, 0x55,
        0xd2, 0x63, 0x48, 0x88, 0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x19, 0x00, 0x20, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8,
        0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c, 0x20, 0xd0, 0x9c, 0xd0, 0xb8, 0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78,
        0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0x02, 0xcc, 0x99, 0x63, 0x04, 0xcc, 0x99, 0x63, 0x02, 0xcc, 0x99, 0x63,
        0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01,
        0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x21, 0x00, 0x1b, 0x54, 0x58, 0x7a, 0x86,
        0x00, 0x00, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x24, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0xa4, 0x81, 0x6c, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x58, 0x2f, 0x2e, 0x5f,
        0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x2c, 0x20, 0xd0, 0x9c, 0xd0, 0xb8,
        0xd1, 0x80, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x01, 0x00, 0x00, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04,
        0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x02, 0x00, 0xcd, 0x00, 0x00, 0x00, 0x58, 0x01, 0x00, 0x00, 0x00, 0x00};
    const unsigned int __2_zip_len = 571;

#if 0
    // Compressed with Windows 7 - it managed to use Cyrillic DOS encoding :-/
    // Currently unsupported
    static const unsigned char __3_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x6b, 0x8e, 0x55, 0xd2, 0x63, 0x48,
        0x88, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x8f, 0xe0, 0xa8, 0xa2,
        0xa5, 0xe2, 0x2c, 0x20, 0x8c, 0xa8, 0xe0, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x31, 0x32, 0x33, 0x50, 0x4b,
        0x01, 0x02, 0x14, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x6b, 0x8e, 0x55, 0xd2, 0x63, 0x48,
        0x88, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8f, 0xe0, 0xa8, 0xa2, 0xa5, 0xe2, 0x2c,
        0x20, 0x8c, 0xa8, 0xe0, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00};
    static const unsigned int __3_zip_len = 133;
#endif

#if 0
    // Compressed with FAR on Windows - it also uses Cyrillic DOS encoding :-/
    // Currently unsupported
    static const unsigned char __4_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x6b, 0x8e, 0x55, 0xd2, 0x63, 0x48,
        0x88, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x8f, 0xe0, 0xa8, 0xa2,
        0xa5, 0xe2, 0x2c, 0x20, 0x8c, 0xa8, 0xe0, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x31, 0x32, 0x33, 0x50, 0x4b,
        0x01, 0x02, 0x3f, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x6b, 0x8e, 0x55, 0xd2, 0x63, 0x48,
        0x88, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8f, 0xe0, 0xa8, 0xa2, 0xa5, 0xe2, 0x2c,
        0x20, 0x8c, 0xa8, 0xe0, 0x21, 0x2e, 0x74, 0x78, 0x74, 0x0a, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x18, 0x00, 0x9b, 0x2d, 0x24, 0x57, 0xbf, 0x0f, 0xd9, 0x01, 0x9b, 0x2d, 0x24, 0x57, 0xbf,
        0x0f, 0xd9, 0x01, 0xb0, 0x8e, 0x51, 0x49, 0xbf, 0x0f, 0xd9, 0x01, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x62, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00};
    static const unsigned int __4_zip_len = 169;
#endif

    auto check = [](std::span<const std::byte> _bytes) {
        const TestDir dir;
        const auto path = std::filesystem::path(dir.directory) / "tmp.zip";
        REQUIRE(nc::base::WriteAtomically(path, _bytes));

        std::shared_ptr<ArchiveHost> host;
        REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

        CHECK(host->StatTotalFiles() == 1);
        CHECK(host->StatTotalDirs() == 0);
        CHECK(host->StatTotalRegs() == 1);

        const VFSFilePtr file = host->CreateFile("/Привет, Мир!.txt").value();
        REQUIRE(file->Open(VFSFlags::OF_Read) == 0);

        auto bytes = file->ReadFile();
        REQUIRE(bytes);
        REQUIRE(bytes->size() == 3);
        CHECK(std::memcmp(bytes->data(), "123", 3) == 0);
    };
    check({reinterpret_cast<const std::byte *>(__1_zip), __1_zip_len});
    check({reinterpret_cast<const std::byte *>(__2_zip), __2_zip_len});
}

// https://github.com/libarchive/libarchive/issues/151#issuecomment-91876716
// TODO: these don't work (normalization...)
// 表だよ\新しいフォルダ\新規テキスト ドキュメント.txt
TEST_CASE(PREFIX "Can unrar a file with japanese filenames")
{
    const unsigned char __longname_jp_rar[] = {
        0x52, 0x61, 0x72, 0x21, 0x1a, 0x07, 0x00, 0xcf, 0x90, 0x73, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xa8, 0x29, 0x74, 0x20, 0x92, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x22, 0x69, 0xe1, 0x3e, 0x14, 0x30, 0x6f, 0x00, 0x20, 0x00, 0x00, 0x00, 0x95, 0x5c,
        0x82, 0xbe, 0x82, 0xe6, 0x5c, 0x90, 0x56, 0x82, 0xb5, 0x82, 0xa2, 0x83, 0x74, 0x83, 0x48, 0x83, 0x8b, 0x83,
        0x5f, 0x5c, 0x90, 0x56, 0x8b, 0x4b, 0x83, 0x65, 0x83, 0x4c, 0x83, 0x58, 0x83, 0x67, 0x20, 0x83, 0x68, 0x83,
        0x4c, 0x83, 0x85, 0x83, 0x81, 0x83, 0x93, 0x83, 0x67, 0x2e, 0x74, 0x78, 0x74, 0x00, 0x88, 0x68, 0x68, 0x60,
        0x30, 0x88, 0x30, 0x5c, 0xaa, 0xb0, 0x65, 0x57, 0x30, 0x44, 0x30, 0xd5, 0x30, 0xa8, 0xa9, 0x30, 0xeb, 0x30,
        0xc0, 0x30, 0x5c, 0xaa, 0xb0, 0x65, 0x8f, 0x89, 0xc6, 0x30, 0xad, 0x30, 0xa2, 0xb9, 0x30, 0xc8, 0x30, 0x20,
        0xc9, 0x30, 0xaa, 0xad, 0x30, 0xe5, 0x30, 0xe1, 0x30, 0xf3, 0x30, 0x80, 0xc8, 0x30, 0x2e, 0x74, 0x78, 0x00,
        0x74, 0x00, 0xf0, 0x26, 0x39, 0x84, 0xe4, 0x98, 0x74, 0x20, 0x92, 0x93, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
        0x00, 0x00, 0x00, 0x02, 0xdc, 0x9d, 0x6f, 0x42, 0xb6, 0x54, 0x74, 0x3e, 0x14, 0x30, 0x6e, 0x00, 0x20, 0x00,
        0x00, 0x00, 0x95, 0x5c, 0x82, 0xbe, 0x82, 0xe6, 0x5c, 0x8a, 0xbf, 0x8e, 0x9a, 0x92, 0xb7, 0x82, 0xa2, 0x83,
        0x74, 0x83, 0x40, 0x83, 0x43, 0x83, 0x8b, 0x96, 0xbc, 0x6c, 0x6f, 0x6e, 0x67, 0x2d, 0x66, 0x69, 0x6c, 0x65,
        0x6e, 0x61, 0x6d, 0x65, 0x2d, 0x69, 0x6e, 0x2d, 0x8a, 0xbf, 0x8e, 0x9a, 0x2e, 0x74, 0x78, 0x74, 0x00, 0x88,
        0x68, 0x68, 0x60, 0x30, 0x88, 0x30, 0x5c, 0xaa, 0x22, 0x6f, 0x57, 0x5b, 0x77, 0x95, 0x44, 0x30, 0xaa, 0xd5,
        0x30, 0xa1, 0x30, 0xa4, 0x30, 0xeb, 0x30, 0x80, 0x0d, 0x54, 0x6c, 0x6f, 0x6e, 0x00, 0x67, 0x2d, 0x66, 0x69,
        0x00, 0x6c, 0x65, 0x6e, 0x61, 0x00, 0x6d, 0x65, 0x2d, 0x69, 0x0a, 0x6e, 0x2d, 0x22, 0x6f, 0x57, 0x5b, 0x00,
        0x2e, 0x74, 0x78, 0x74, 0x00, 0xb0, 0x76, 0x7a, 0x68, 0x6b, 0x61, 0x6e, 0x6a, 0x69, 0x94, 0x2c, 0x74, 0xe0,
        0x92, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x22, 0x69,
        0xe1, 0x3e, 0x14, 0x30, 0x2e, 0x00, 0x10, 0x00, 0x00, 0x00, 0x95, 0x5c, 0x82, 0xbe, 0x82, 0xe6, 0x5c, 0x90,
        0x56, 0x82, 0xb5, 0x82, 0xa2, 0x83, 0x74, 0x83, 0x48, 0x83, 0x8b, 0x83, 0x5f, 0x00, 0x88, 0x68, 0x68, 0x60,
        0x30, 0x88, 0x30, 0x5c, 0xaa, 0xb0, 0x65, 0x57, 0x30, 0x44, 0x30, 0xd5, 0x30, 0xa8, 0xa9, 0x30, 0xeb, 0x30,
        0xc0, 0x30, 0x00, 0xf0, 0x26, 0x39, 0x84, 0x6d, 0x78, 0x74, 0xe0, 0x92, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x69, 0xe1, 0x3e, 0x14, 0x30, 0x0e, 0x00, 0x10,
        0x00, 0x00, 0x00, 0x95, 0x5c, 0x82, 0xbe, 0x82, 0xe6, 0x00, 0x88, 0x68, 0x68, 0x60, 0x30, 0x88, 0x30, 0x00,
        0xf0, 0xea, 0x09, 0x7e, 0xc4, 0x3d, 0x7b, 0x00, 0x40, 0x07, 0x00};

    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "tmp.zip";
    REQUIRE(nc::base::WriteAtomically(
        path, {reinterpret_cast<const std::byte *>(__longname_jp_rar), std::size(__longname_jp_rar)}));

    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    CHECK(host->StatTotalFiles() == 4);
    CHECK(host->StatTotalDirs() == 2);
    CHECK(host->StatTotalRegs() == 2);

    VFSFilePtr file = host->CreateFile("/表だよ/新しいフォルダ/新規テキスト ドキュメント.txt").value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto bytes = file->ReadFile();
    REQUIRE(bytes);
    REQUIRE(bytes->empty());

    file = host->CreateFile("/表だよ/漢字長いファイル名long-filename-in-漢字.txt").value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    bytes = file->ReadFile();
    REQUIRE(bytes);
    REQUIRE(bytes->size() == 5);
    CHECK(std::memcmp(bytes->data(), "kanji", 5) == 0);
}

// https://github.com/libarchive/libarchive/issues/151#issuecomment-91876705
TEST_CASE(PREFIX "Can unrar a file with cyrilic filenames")
{
    const unsigned char __test_ru_rar[] = {
        0x52, 0x61, 0x72, 0x21, 0x1a, 0x07, 0x00, 0xcf, 0x90, 0x73, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x2d, 0x29, 0x74, 0x20, 0x82, 0x36, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
        0x00, 0x03, 0xcc, 0xe1, 0x81, 0x14, 0xcb, 0xa3, 0x3f, 0x3e, 0x14, 0x30, 0x16, 0x00, 0xed, 0x81, 0x00,
        0x00, 0xd0, 0x9f, 0xd0, 0xa0, 0xd0, 0x98, 0xd0, 0x92, 0xd0, 0x95, 0xd0, 0xa2, 0x00, 0x04, 0x55, 0x1f,
        0x20, 0x18, 0x12, 0x50, 0x15, 0x22, 0xf0, 0xf2, 0xe9, 0xf7, 0xe5, 0xf4, 0xbd, 0xac, 0x74, 0x20, 0x82,
        0x36, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0xcc, 0xe1, 0x81, 0x14, 0x6b, 0xa5,
        0x3f, 0x3e, 0x14, 0x30, 0x16, 0x00, 0xed, 0x81, 0x00, 0x00, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8, 0xd0,
        0xb2, 0xd0, 0xb5, 0xd1, 0x82, 0x00, 0x04, 0x55, 0x3f, 0x40, 0x38, 0x32, 0x50, 0x35, 0x42, 0xf0, 0xf2,
        0xe9, 0xf7, 0xe5, 0xf4, 0xc4, 0x3d, 0x7b, 0x00, 0x40, 0x07, 0x00};

    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "tmp.zip";
    REQUIRE(nc::base::WriteAtomically(path,
                                      {reinterpret_cast<const std::byte *>(__test_ru_rar), std::size(__test_ru_rar)}));

    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    CHECK(host->StatTotalFiles() == 2);
    CHECK(host->StatTotalDirs() == 0);
    CHECK(host->StatTotalRegs() == 2);

    VFSFilePtr file = host->CreateFile("/ПРИВЕТ").value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto bytes = file->ReadFile();
    REQUIRE(bytes);
    REQUIRE(bytes->size() == 6);
    CHECK(std::memcmp(bytes->data(), "\xf0\xf2\xe9\xf7\xe5\xf4", 6) == 0);

    file = host->CreateFile("/привет").value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    bytes = file->ReadFile();
    REQUIRE(bytes);
    REQUIRE(bytes->size() == 6);
    CHECK(std::memcmp(bytes->data(), "\xf0\xf2\xe9\xf7\xe5\xf4", 6) == 0);
}

TEST_CASE(PREFIX "Symlinks handling")
{
    // dir r/d
    // reg r/f
    // sym r/l0 -> f
    // sym r/l1 -> ./f
    // sym r/l2 -> l1
    // sym r/l3 -> ./l2
    // sym r/l4 -> ./l5 (cycle)
    // sym r/l5 -> ./l4 (cycle)
    // sym r/l6 -> d/l0
    // sym r/l7 -> ./d/l0
    // sym r/l8 -> ./d/../f
    // sym r/l9 -> l9
    // sym r/l10 -> ./././././l10
    // sym r/d/l0 -> ../f
    // sym r/d/l1 -> ./../f
    // sym r/d/l2 -> ././../f
    // sym r/d/l3 -> ./.././d/./../f
    // sym r/d/l4 -> ../d/../d/../d/../f
    // sym r/d/l5 -> ./../l3
    const unsigned char arc_tar_gz[] = {
        0x1f, 0x8b, 0x08, 0x00, 0xa9, 0xfb, 0x6c, 0x65, 0x00, 0x03, 0xed, 0x9a, 0x4d, 0x6c, 0x1b, 0x45, 0x14, 0xc7,
        0x37, 0x44, 0x88, 0xd4, 0x02, 0xc1, 0x29, 0x95, 0x22, 0x0e, 0x8b, 0x90, 0xe0, 0x00, 0x78, 0xe7, 0x73, 0x27,
        0x2e, 0x8a, 0x54, 0xa7, 0x4e, 0x62, 0x93, 0xd8, 0xf1, 0x57, 0x12, 0x27, 0x97, 0x68, 0x6d, 0xaf, 0x4d, 0x92,
        0xf5, 0x47, 0xbd, 0xeb, 0xc4, 0x8d, 0x04, 0x37, 0xa8, 0xc4, 0x95, 0xf2, 0x71, 0x04, 0x81, 0x90, 0x38, 0x70,
        0xa8, 0x90, 0x90, 0x38, 0xa1, 0x4a, 0xa4, 0xbd, 0x20, 0x48, 0x25, 0x54, 0xa1, 0x70, 0x41, 0x2a, 0xa2, 0xf7,
        0xaa, 0x95, 0x4a, 0x25, 0x24, 0x66, 0x77, 0x9d, 0x84, 0x1a, 0x25, 0xcd, 0x96, 0x8e, 0x4b, 0x95, 0xf9, 0x47,
        0xde, 0xb1, 0x9d, 0xd9, 0x7d, 0xb3, 0xfb, 0xdb, 0xf7, 0xf6, 0xcd, 0xf3, 0xb4, 0x34, 0x45, 0xb8, 0x00, 0x00,
        0x8c, 0x52, 0xd5, 0x6b, 0x75, 0xbf, 0x05, 0x88, 0xf8, 0x6d, 0x57, 0x2a, 0x24, 0x14, 0x63, 0xc8, 0xa8, 0x4e,
        0xa0, 0x0a, 0x20, 0xd4, 0x21, 0x52, 0x54, 0x2a, 0x7e, 0x68, 0x8a, 0xd2, 0xb6, 0x1d, 0xa3, 0xc5, 0x87, 0x52,
        0x5b, 0xa9, 0xb6, 0xeb, 0x87, 0xf4, 0xe3, 0xdd, 0x2a, 0x95, 0x43, 0xfe, 0xdf, 0x3d, 0x8f, 0xbd, 0xf6, 0x31,
        0x51, 0x4b, 0xb3, 0x20, 0x14, 0x6c, 0x23, 0x38, 0x7f, 0x44, 0x11, 0x56, 0x54, 0x14, 0xd6, 0x2c, 0xe1, 0xf7,
        0x80, 0xe4, 0x0f, 0x81, 0x60, 0x1b, 0x41, 0xf8, 0x03, 0x48, 0x39, 0x7f, 0x8c, 0x29, 0xf5, 0xf8, 0xef, 0xfe,
        0x89, 0x1b, 0xa4, 0xe4, 0x8f, 0x45, 0xdb, 0x38, 0x3a, 0x7f, 0x88, 0x79, 0xeb, 0xfa, 0x3f, 0xc1, 0xc0, 0xf7,
        0x7f, 0x24, 0x7a, 0x70, 0x92, 0x3f, 0x11, 0x6d, 0x23, 0x08, 0x7f, 0x46, 0x99, 0xc7, 0x9f, 0x50, 0x19, 0xff,
        0xfb, 0xa1, 0x56, 0x1f, 0x2e, 0x71, 0x00, 0xfe, 0x04, 0x50, 0xe4, 0xfb, 0x3f, 0xf2, 0xf9, 0x0b, 0xbf, 0x39,
        0x25, 0x7f, 0xe1, 0x21, 0x36, 0x50, 0xfc, 0x07, 0xba, 0xcb, 0x1f, 0xe9, 0x3a, 0xe7, 0x6f, 0x89, 0xce, 0x4c,
        0x15, 0xc9, 0x5f, 0x0b, 0x2f, 0x1f, 0x76, 0x5a, 0x0f, 0x43, 0xfc, 0x7a, 0xe8, 0x84, 0x1c, 0xcc, 0x5f, 0x27,
        0x7b, 0xfc, 0x11, 0x83, 0x5e, 0xfe, 0x0f, 0x75, 0xa2, 0xa8, 0xa2, 0xf3, 0x52, 0x4f, 0xc7, 0x9c, 0xbf, 0xf2,
        0xe4, 0xf0, 0x53, 0xca, 0x13, 0x8a, 0x92, 0x34, 0x4a, 0xea, 0x6c, 0x4e, 0x2d, 0xa8, 0x5d, 0xb9, 0xdf, 0x29,
        0x27, 0xf8, 0x8b, 0x47, 0x87, 0x01, 0xf7, 0xba, 0xf0, 0xcf, 0x03, 0x9f, 0x1c, 0xed, 0x90, 0xd1, 0x7c, 0x3e,
        0xeb, 0xbf, 0x73, 0xf7, 0x18, 0x18, 0xe2, 0x6f, 0x3e, 0xee, 0xe9, 0x32, 0xd8, 0xfd, 0xfe, 0x59, 0x45, 0x39,
        0x59, 0x6a, 0xd4, 0xc2, 0x46, 0xb3, 0x69, 0x99, 0xe1, 0xbc, 0xd9, 0x71, 0x26, 0xea, 0xa5, 0x46, 0x79, 0xa5,
        0x5e, 0xf5, 0xf7, 0x3f, 0xc9, 0x37, 0xcf, 0x29, 0xca, 0xc8, 0x7e, 0x1f, 0xcb, 0xb0, 0x9d, 0xb6, 0x6d, 0x96,
        0xcb, 0x86, 0x63, 0xbe, 0x98, 0xce, 0x75, 0xed, 0xbc, 0xcc, 0x37, 0xe7, 0x14, 0x85, 0xed, 0xf7, 0xab, 0x99,
        0x8e, 0xc1, 0xfb, 0x18, 0xa7, 0xd6, 0x92, 0xb1, 0x19, 0xa3, 0x68, 0x5a, 0xcb, 0xc4, 0x68, 0x33, 0x7b, 0xcd,
        0x2e, 0xda, 0x9d, 0xfa, 0xea, 0x9a, 0x5d, 0xe9, 0x54, 0xd8, 0x86, 0x55, 0xae, 0x17, 0xcf, 0x12, 0xf7, 0x19,
        0xd3, 0x76, 0x2a, 0xaf, 0x8d, 0xbe, 0x0e, 0x31, 0x41, 0x90, 0x45, 0x46, 0xc9, 0xd6, 0x07, 0x96, 0xe9, 0x1e,
        0x38, 0xd1, 0x34, 0x5e, 0x72, 0xdb, 0x9b, 0x37, 0xbe, 0xb9, 0xf3, 0xeb, 0x20, 0xfa, 0x63, 0x5b, 0x5f, 0xfe,
        0x81, 0x7e, 0xfd, 0x9b, 0x3d, 0xb7, 0xf3, 0xe9, 0x9f, 0xda, 0xc5, 0xf7, 0x4f, 0x9f, 0xfe, 0xf2, 0xad, 0xdb,
        0x2f, 0x7c, 0x71, 0x79, 0xeb, 0xda, 0x64, 0xf6, 0x79, 0x76, 0xe7, 0xee, 0xd5, 0x4b, 0xf1, 0xbf, 0xe6, 0xae,
        0xc7, 0x7f, 0xde, 0x3e, 0xf1, 0xf4, 0x50, 0x6d, 0xe4, 0xa3, 0xe5, 0x1f, 0x0b, 0xdf, 0x7f, 0x36, 0x7f, 0x0e,
        0x5c, 0xfe, 0xee, 0xc2, 0xb7, 0x99, 0x1b, 0x57, 0x9a, 0xf0, 0x0a, 0xb9, 0x79, 0x49, 0xbd, 0x3b, 0x71, 0xcd,
        0xb1, 0x87, 0xdf, 0xf9, 0x7c, 0xcb, 0xba, 0xfe, 0x4c, 0xf3, 0x6a, 0x6d, 0x78, 0xa7, 0xfe, 0xee, 0xab, 0x3f,
        0x9d, 0x72, 0x94, 0xaf, 0x2e, 0xbc, 0xfd, 0xe1, 0xce, 0xfa, 0x7b, 0xe6, 0xce, 0xd0, 0xf9, 0x8d, 0x5b, 0x23,
        0xe9, 0xdf, 0x07, 0xcf, 0x5f, 0xdc, 0xfe, 0xe5, 0x41, 0xb1, 0x1e, 0x55, 0x2d, 0x2d, 0x6d, 0x74, 0xe2, 0xa6,
        0x51, 0x36, 0x5b, 0x9a, 0xa8, 0x38, 0x70, 0x1f, 0xff, 0x87, 0x18, 0xe0, 0x1e, 0xff, 0xc7, 0x0c, 0xf2, 0xfc,
        0xaf, 0x23, 0x68, 0x3c, 0xf7, 0xe8, 0x98, 0xfb, 0x3f, 0x62, 0x6a, 0xcd, 0x59, 0xa9, 0x99, 0x63, 0x90, 0x01,
        0xa8, 0x43, 0x0a, 0x48, 0x24, 0xac, 0x47, 0x74, 0x04, 0x48, 0x08, 0xe1, 0x88, 0x3a, 0x93, 0x18, 0x8f, 0x66,
        0xcf, 0xc4, 0x13, 0xf3, 0x13, 0xe1, 0x8e, 0xe1, 0x38, 0xad, 0xf0, 0x83, 0x39, 0xd8, 0xd8, 0x68, 0xdb, 0x44,
        0xaf, 0xa4, 0xec, 0x58, 0xb2, 0x5d, 0xcc, 0xa4, 0x2c, 0x2d, 0x99, 0x2a, 0xa6, 0xab, 0x25, 0x58, 0x30, 0x1a,
        0x95, 0xb5, 0x75, 0x7b, 0x29, 0x15, 0xcd, 0x4c, 0x5b, 0x91, 0x48, 0x6e, 0xaa, 0xd6, 0xb1, 0x0b, 0x0b, 0x59,
        0x2b, 0x51, 0x4a, 0x69, 0xab, 0x3a, 0x28, 0x4d, 0x26, 0xb4, 0xf9, 0xc2, 0x6a, 0x2e, 0x95, 0xcf, 0x9c, 0xc9,
        0x6c, 0x24, 0x8a, 0xd9, 0xb3, 0x85, 0xc2, 0x28, 0x5d, 0xec, 0x4c, 0xa7, 0x16, 0xcc, 0x7c, 0x6c, 0x6a, 0x9d,
        0xe6, 0xe8, 0x9c, 0x59, 0x89, 0x97, 0x62, 0xf1, 0x78, 0x2a, 0x3d, 0x33, 0x9e, 0x48, 0x37, 0x27, 0x61, 0x3d,
        0xbb, 0x39, 0xd9, 0x58, 0x58, 0xeb, 0x2c, 0x6c, 0xae, 0xc6, 0x0a, 0xb1, 0x6c, 0x31, 0x5b, 0x34, 0x8a, 0x8d,
        0x45, 0x7b, 0x73, 0xb3, 0x09, 0xa2, 0xd3, 0x68, 0xae, 0xd2, 0x2c, 0x1a, 0xe5, 0x46, 0xd3, 0x42, 0xd5, 0x95,
        0x78, 0x59, 0xcb, 0x18, 0x73, 0xb3, 0x99, 0xd8, 0x9b, 0x2c, 0x9e, 0x41, 0xd1, 0x10, 0x8c, 0x10, 0x35, 0xc7,
        0x4f, 0x75, 0x66, 0xf1, 0xbf, 0x9d, 0xea, 0x23, 0x0b, 0x15, 0x21, 0xfd, 0x50, 0x5e, 0x3d, 0x81, 0x73, 0xac,
        0xb3, 0x34, 0x6f, 0x2f, 0x65, 0xa2, 0x5c, 0xe3, 0x6f, 0x94, 0xa6, 0x26, 0x6a, 0x51, 0x4f, 0x21, 0x1a, 0x39,
        0xe8, 0x2a, 0xf4, 0x1e, 0xa0, 0x37, 0x46, 0x86, 0x74, 0x72, 0x98, 0xfd, 0x7f, 0x06, 0xf7, 0xb1, 0x72, 0x21,
        0x5b, 0x9b, 0xc9, 0x57, 0x59, 0x32, 0x9f, 0x04, 0xc9, 0xd5, 0x09, 0x3c, 0x9b, 0xaf, 0x82, 0x10, 0xcf, 0x11,
        0x0f, 0x30, 0x7d, 0xcf, 0xbe, 0x3d, 0xa1, 0x3a, 0xf4, 0x68, 0x1d, 0xe8, 0x31, 0x97, 0xb8, 0xa8, 0xbf, 0xaf,
        0xfb, 0xe5, 0x7f, 0xe0, 0x5f, 0xf1, 0x1f, 0x32, 0x02, 0x64, 0xfe, 0xd7, 0x0f, 0x41, 0x24, 0xbc, 0xfc, 0x27,
        0xf5, 0x3f, 0x16, 0x9f, 0xff, 0x33, 0xd1, 0x36, 0x82, 0xd4, 0x7f, 0x10, 0xf1, 0xe6, 0xff, 0xba, 0xee, 0xd7,
        0x7f, 0xcb, 0x9a, 0x25, 0x38, 0x0a, 0x1c, 0x73, 0xff, 0x6f, 0x09, 0xbf, 0xc0, 0xc1, 0xea, 0x3f, 0x00, 0xf9,
        0xf3, 0x7f, 0x06, 0x39, 0x7f, 0xf1, 0x8f, 0x26, 0xc9, 0x5f, 0xb3, 0x22, 0xa2, 0x6d, 0x1c, 0x9d, 0x3f, 0x23,
        0xcc, 0xaf, 0xff, 0x62, 0xef, 0xf7, 0x5f, 0xf1, 0x43, 0x93, 0xfc, 0x35, 0x6b, 0x54, 0xb4, 0x8d, 0x20, 0xf1,
        0x1f, 0x7b, 0xf5, 0x5f, 0xcc, 0x53, 0xc2, 0x6e, 0xfc, 0x0f, 0x87, 0xc5, 0x66, 0xa8, 0x92, 0xbf, 0xf0, 0x22,
        0x7b, 0xa0, 0xf8, 0x4f, 0xb0, 0xe7, 0xff, 0xd8, 0xe7, 0x2f, 0xfe, 0x09, 0x20, 0xf9, 0xeb, 0xa2, 0x6d, 0x04,
        0xf1, 0x7f, 0x48, 0x3d, 0xfe, 0x14, 0x32, 0xce, 0x5f, 0x7c, 0xf6, 0x27, 0xf9, 0xf3, 0x10, 0x2b, 0xda, 0x46,
        0x10, 0xff, 0xd7, 0xfd, 0xdf, 0xff, 0x01, 0x26, 0x72, 0xfd, 0x5f, 0x3f, 0xe4, 0xf2, 0x17, 0xbd, 0x02, 0x28,
        0x08, 0x7f, 0x4a, 0xfc, 0xfa, 0x3f, 0xd2, 0xfd, 0xf5, 0x5f, 0xee, 0xe2, 0xaf, 0xb2, 0x16, 0x16, 0x97, 0x06,
        0x48, 0xfe, 0xc2, 0x17, 0x59, 0x04, 0xf2, 0x7f, 0xe4, 0xe6, 0x7f, 0x84, 0x00, 0x6f, 0xfe, 0xdf, 0x4d, 0x00,
        0xf7, 0x37, 0x0f, 0xff, 0x1e, 0x90, 0xfc, 0x85, 0xaf, 0x00, 0x0a, 0x1e, 0xff, 0x31, 0x04, 0x70, 0xd7, 0xff,
        0x05, 0x47, 0x27, 0xc9, 0x5f, 0xf8, 0x0a, 0xa0, 0x20, 0xfc, 0x09, 0x43, 0x1e, 0x7f, 0xbc, 0xb7, 0xfe, 0x57,
        0xce, 0xff, 0x44, 0xaa, 0xd5, 0x87, 0x12, 0x6b, 0x10, 0xfe, 0x88, 0x02, 0xaf, 0xfe, 0xeb, 0xcf, 0xff, 0xfa,
        0x30, 0x01, 0x94, 0xfc, 0x85, 0x57, 0x00, 0x02, 0xf9, 0x3f, 0xf0, 0xd6, 0x7f, 0x33, 0x86, 0x77, 0xe3, 0xbf,
        0xe0, 0x3b, 0xe0, 0x98, 0xf3, 0x97, 0x92, 0x92, 0x3a, 0xbe, 0xfa, 0x1b, 0xf7, 0x37, 0x65, 0xfb, 0x00, 0x3a,
        0x00, 0x00

    };

    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "tmp_tar_gz";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_tar_gz), std::size(arc_tar_gz)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));
    CHECK(host->StatTotalFiles() == 21);
    CHECK(host->StatTotalDirs() == 2);
    CHECK(host->StatTotalRegs() == 1);

    auto readsym = [&](const char *_path) -> std::string { return host->ReadSymlink(_path).value(); };
    CHECK(readsym("/r/l0") == "f");
    CHECK(readsym("/r/l1") == "./f");
    CHECK(readsym("/r/l2") == "l1");
    CHECK(readsym("/r/l3") == "./l2");
    CHECK(readsym("/r/l4") == "./l5");
    CHECK(readsym("/r/l5") == "./l4");
    CHECK(readsym("/r/l6") == "d/l0");
    CHECK(readsym("/r/l7") == "./d/l0");
    CHECK(readsym("/r/l8") == "./d/../f");
    CHECK(readsym("/r/l9") == "l9");
    CHECK(readsym("/r/l10") == "./././././l10");
    CHECK(readsym("/r/l11") == "./l5");
    CHECK(readsym("/r/d/l0") == "../f");
    CHECK(readsym("/r/d/l1") == "./../f");
    CHECK(readsym("/r/d/l2") == "././../f");
    CHECK(readsym("/r/d/l3") == "./.././d/./../f");
    CHECK(readsym("/r/d/l4") == "../d/../d/../d/../f");
    CHECK(readsym("/r/d/l5") == "./../l3");

    auto symlink = [&](const char *_path) -> const ArchiveHost::Symlink & {
        const arc::DirEntry *entry = host->FindEntry(_path);
        REQUIRE(entry);
        const ArchiveHost::Symlink *symlink = host->ResolvedSymlink(entry->aruid);
        REQUIRE(symlink);
        return *symlink;
    };
    CHECK(symlink("/r/l0").target_path == "/r/f");
    CHECK(symlink("/r/l1").target_path == "/r/f");
    CHECK(symlink("/r/l2").target_path == "/r/f");
    CHECK(symlink("/r/l3").target_path == "/r/f");
    CHECK(symlink("/r/l4").state == ArchiveHost::SymlinkState::Loop);
    CHECK(symlink("/r/l5").state == ArchiveHost::SymlinkState::Loop);
    CHECK(symlink("/r/l6").target_path == "/r/f");
    CHECK(symlink("/r/l7").target_path == "/r/f");
    CHECK(symlink("/r/l8").target_path == "/r/f");
    CHECK(symlink("/r/l9").state == ArchiveHost::SymlinkState::Loop);
    CHECK(symlink("/r/l10").state == ArchiveHost::SymlinkState::Loop);
    CHECK(symlink("/r/l11").state == ArchiveHost::SymlinkState::Loop);
    CHECK(symlink("/r/d/l0").target_path == "/r/f");
    CHECK(symlink("/r/d/l1").target_path == "/r/f");
    CHECK(symlink("/r/d/l2").target_path == "/r/f");
    CHECK(symlink("/r/d/l3").target_path == "/r/f");
    CHECK(symlink("/r/d/l4").target_path == "/r/f");
    CHECK(symlink("/r/d/l5").target_path == "/r/f");
}

TEST_CASE(PREFIX "Symlinks handling - invalid values")
{
    // dir r/d
    // sym r/l0 -> nada
    // sym r/l1 -> ../nada
    // sym r/r2 -> ../.././../../././../nada
    // sym r/r3 -> nada/nada/nada
    // sym r/r4 -> ../nada
    // sym r/r5 -> .././r/./nada
    const unsigned char arc_tar_gz[] = {
        0x1f, 0x8b, 0x08, 0x00, 0x3f, 0xaa, 0x75, 0x65, 0x00, 0x03, 0xed, 0x95, 0xc1, 0x0a, 0xc3, 0x20, 0x0c, 0x86,
        0x7d, 0x14, 0x9f, 0xa0, 0x26, 0x9a, 0xe8, 0xf3, 0x14, 0x46, 0xc7, 0x60, 0xeb, 0xc1, 0xad, 0xef, 0xbf, 0xd4,
        0x4a, 0x8f, 0x05, 0x61, 0x39, 0x0c, 0xf2, 0x1f, 0xfa, 0x1f, 0x1a, 0xf8, 0x23, 0x9f, 0x26, 0x35, 0x38, 0x75,
        0x01, 0x40, 0x61, 0xf6, 0xcd, 0xf3, 0xe1, 0x10, 0xe9, 0xf0, 0x2e, 0x8f, 0xc4, 0x89, 0x53, 0x64, 0x28, 0xe0,
        0x01, 0x31, 0x03, 0x3b, 0xcf, 0xfa, 0xad, 0x39, 0xb7, 0xbd, 0x3f, 0x73, 0x95, 0x56, 0x5e, 0x8f, 0xfb, 0xb6,
        0x5e, 0xd4, 0x49, 0xd9, 0xb2, 0x5c, 0xfc, 0xef, 0xe7, 0x38, 0xfd, 0x4f, 0x54, 0xc3, 0x33, 0x69, 0x67, 0x0c,
        0xf0, 0xa7, 0x98, 0x50, 0xf8, 0x13, 0x15, 0x74, 0x3e, 0xae, 0xf3, 0x6d, 0x0e, 0xe7, 0x47, 0xa7, 0x39, 0xe3,
        0x4f, 0xda, 0x19, 0x43, 0xfc, 0x39, 0x0b, 0xff, 0x84, 0x90, 0x85, 0xff, 0x34, 0x29, 0x82, 0xef, 0x32, 0xfe,
        0xea, 0x63, 0x76, 0x84, 0x7f, 0xc2, 0xb2, 0xf3, 0xcf, 0x04, 0x07, 0xff, 0x29, 0xd4, 0xa0, 0x7a, 0x0b, 0x8c,
        0x7f, 0xd4, 0xce, 0x18, 0x7a, 0xff, 0xd0, 0xe6, 0x3f, 0x17, 0xee, 0xfc, 0xf7, 0x2b, 0x70, 0x7a, 0xf8, 0xfd,
        0x44, 0x30, 0xfe, 0xa0, 0x9d, 0x31, 0xc2, 0x5f, 0x9e, 0xbe, 0xf0, 0x8f, 0x39, 0x53, 0xdf, 0xff, 0xda, 0xcd,
        0x19, 0x7f, 0xd4, 0xce, 0x18, 0xe2, 0x2f, 0x85, 0x6d, 0xff, 0xa3, 0xed, 0x7f, 0x93, 0xc9, 0x64, 0xd2, 0xd4,
        0x17, 0xa4, 0xe6, 0x84, 0x17, 0x00, 0x12, 0x00, 0x00};

    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "tmp_tar_gz";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_tar_gz), std::size(arc_tar_gz)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));
    CHECK(host->StatTotalFiles() == 7);
    CHECK(host->StatTotalDirs() == 1);
    CHECK(host->StatTotalRegs() == 0);

    auto readsym = [&](const char *_path) -> std::string { return host->ReadSymlink(_path).value(); };
    CHECK(readsym("/r/l0") == "nada");
    CHECK(readsym("/r/l1") == "../nada");
    CHECK(readsym("/r/l2") == "../.././../../././../nada");
    CHECK(readsym("/r/l3") == "nada/nada/nada");
    CHECK(readsym("/r/l4") == "../nada");
    CHECK(readsym("/r/l5") == ".././r/./nada");

    auto symlink = [&](const char *_path) -> const ArchiveHost::Symlink & {
        const arc::DirEntry *entry = host->FindEntry(_path);
        REQUIRE(entry);
        const ArchiveHost::Symlink *symlink = host->ResolvedSymlink(entry->aruid);
        REQUIRE(symlink);
        return *symlink;
    };
    CHECK(symlink("/r/l0").state == ArchiveHost::SymlinkState::Invalid);
    CHECK(symlink("/r/l1").state == ArchiveHost::SymlinkState::Invalid);
    CHECK(symlink("/r/l2").state == ArchiveHost::SymlinkState::Invalid);
    CHECK(symlink("/r/l3").state == ArchiveHost::SymlinkState::Invalid);
    CHECK(symlink("/r/l4").state == ArchiveHost::SymlinkState::Invalid);
    CHECK(symlink("/r/l5").state == ArchiveHost::SymlinkState::Invalid);
}

TEST_CASE(PREFIX "Cyrilic encoding in a file downloaded from GDrive")
{
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x08, 0x08, 0x00, 0x4e, 0x23, 0x33, 0x4d, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x15, 0x00, 0xd1, 0x82, 0xd0, 0xb5, 0xd1, 0x81,
        0xd1, 0x82, 0x2e, 0x74, 0x78, 0x74, 0x75, 0x70, 0x11, 0x00, 0x01, 0xcf, 0xdc, 0xaa, 0x9b, 0xd1, 0x82, 0xd0,
        0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x2e, 0x74, 0x78, 0x74, 0xbb, 0xb0, 0xe8, 0xc2, 0xd6, 0x8b, 0x8d, 0x17, 0x9b,
        0x14, 0x01, 0x50, 0x4b, 0x07, 0x08, 0xc2, 0x06, 0x45, 0xd3, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08, 0x08, 0x08, 0x00, 0x4e, 0x23, 0x33, 0x4d, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x16, 0x00, 0xd1, 0x82, 0xd0, 0xb5, 0xd1, 0x81,
        0xd1, 0x82, 0x32, 0x2e, 0x74, 0x78, 0x74, 0x75, 0x70, 0x12, 0x00, 0x01, 0x78, 0x0c, 0x25, 0x2a, 0xd1, 0x82,
        0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x32, 0x2e, 0x74, 0x78, 0x74, 0xbb, 0xb0, 0xe8, 0xc2, 0xd6, 0x8b, 0x8d,
        0x17, 0x9b, 0x14, 0x01, 0x50, 0x4b, 0x07, 0x08, 0xc2, 0x06, 0x45, 0xd3, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00,
        0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x00, 0x14, 0x00, 0x08, 0x08, 0x08, 0x00, 0x4e, 0x23, 0x33, 0x4d,
        0xc2, 0x06, 0x45, 0xd3, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x15, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd1, 0x82, 0xd0, 0xb5, 0xd1, 0x81,
        0xd1, 0x82, 0x2e, 0x74, 0x78, 0x74, 0x75, 0x70, 0x11, 0x00, 0x01, 0xcf, 0xdc, 0xaa, 0x9b, 0xd1, 0x82, 0xd0,
        0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x2e, 0x74, 0x78, 0x74, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x00, 0x14, 0x00, 0x08,
        0x08, 0x08, 0x00, 0x4e, 0x23, 0x33, 0x4d, 0xc2, 0x06, 0x45, 0xd3, 0x0b, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
        0x00, 0x0d, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00,
        0x00, 0xd1, 0x82, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x32, 0x2e, 0x74, 0x78, 0x74, 0x75, 0x70, 0x12, 0x00,
        0x01, 0x78, 0x0c, 0x25, 0x2a, 0xd1, 0x82, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0x32, 0x2e, 0x74, 0x78, 0x74,
        0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0xa0, 0x00, 0x00, 0x00, 0xb6, 0x00,
        0x00, 0x00, 0x00, 0x00};

    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    const VFSFilePtr file = host->CreateFile("/тест.txt").value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);

    auto d = file->ReadFile();
    REQUIRE(d->size() == 9);
    auto ref = "Тест!";
    REQUIRE(std::memcmp(d->data(), ref, std::strlen(ref)) == 0);
}

TEST_CASE(PREFIX "Encrypted zip archive")
{
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x99, 0x44, 0x45, 0xe4, 0x12, 0x35, 0x0c,
        0x1f, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x66, 0x69, 0x6c, 0x65, 0x31, 0x55,
        0x54, 0x09, 0x00, 0x03, 0x6c, 0xc7, 0x2f, 0x54, 0x02, 0xc7, 0x2f, 0x54, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04,
        0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x8a, 0x8c, 0x24, 0x28, 0x2f, 0x8a, 0xa5, 0x05, 0x1d,
        0xe2, 0xba, 0x7c, 0xfe, 0x6c, 0x4a, 0xd2, 0x52, 0xc3, 0x24, 0xcd, 0x24, 0x5f, 0x4d, 0x2b, 0xcf, 0x03, 0xd7,
        0xc9, 0x6c, 0x93, 0x54, 0x50, 0x4b, 0x07, 0x08, 0xe4, 0x12, 0x35, 0x0c, 0x1f, 0x00, 0x00, 0x00, 0x13, 0x00,
        0x00, 0x00, 0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x09, 0x00, 0x00, 0x00, 0x41, 0x99, 0x44, 0x45, 0xbd, 0xac,
        0x73, 0x0e, 0x1f, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x66, 0x69, 0x6c, 0x65,
        0x32, 0x55, 0x54, 0x09, 0x00, 0x03, 0x79, 0xc7, 0x2f, 0x54, 0x02, 0xc7, 0x2f, 0x54, 0x75, 0x78, 0x0b, 0x00,
        0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x64, 0x0d, 0x6e, 0xbc, 0x82, 0x3a, 0x58,
        0xd9, 0x19, 0xe9, 0xaa, 0xf5, 0x74, 0xa7, 0x3c, 0x66, 0xfa, 0x96, 0x97, 0x39, 0xbe, 0x53, 0x70, 0xd9, 0xd3,
        0x13, 0x9b, 0xe3, 0xb0, 0x88, 0xff, 0x50, 0x4b, 0x07, 0x08, 0xbd, 0xac, 0x73, 0x0e, 0x1f, 0x00, 0x00, 0x00,
        0x13, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x1e, 0x03, 0x0a, 0x00, 0x09, 0x00, 0x00, 0x00, 0x38, 0x99,
        0x44, 0x45, 0xe4, 0x12, 0x35, 0x0c, 0x1f, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x05, 0x00, 0x18, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0x66, 0x69, 0x6c, 0x65,
        0x31, 0x55, 0x54, 0x05, 0x00, 0x03, 0x6c, 0xc7, 0x2f, 0x54, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01,
        0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x1e, 0x03, 0x0a, 0x00, 0x09, 0x00, 0x00,
        0x00, 0x41, 0x99, 0x44, 0x45, 0xbd, 0xac, 0x73, 0x0e, 0x1f, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x05,
        0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x6e, 0x00, 0x00, 0x00, 0x66,
        0x69, 0x6c, 0x65, 0x32, 0x55, 0x54, 0x05, 0x00, 0x03, 0x79, 0xc7, 0x2f, 0x54, 0x75, 0x78, 0x0b, 0x00, 0x01,
        0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00,
        0x02, 0x00, 0x02, 0x00, 0x96, 0x00, 0x00, 0x00, 0xdc, 0x00, 0x00, 0x00, 0x00, 0x00};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));

    const auto passwd = std::string("pass1");
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native, passwd));
    REQUIRE(host->StatTotalFiles() == 2);
    REQUIRE(host->StatTotalRegs() == 2);
    REQUIRE(host->StatTotalDirs() == 0);

    const auto fn = "/file2";
    const VFSFilePtr file = host->CreateFile(fn).value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto d = file->ReadFile();
    REQUIRE(d->size() == 19);
    auto ref = "contents of file2.\0A";
    REQUIRE(memcmp(d->data(), ref, strlen(ref)) == 0);
}

TEST_CASE(PREFIX "Reading xattr from an archive")
{
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x00, 0x4e, 0xa9, 0x4b, 0x58, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55,
        0x54, 0x0d, 0x00, 0x07, 0xc5, 0x37, 0xc9, 0x65, 0xf8, 0x37, 0xc9, 0x65, 0xe7, 0x37, 0xc9, 0x65, 0x75, 0x78,
        0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x07, 0x08, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08,
        0x00, 0x08, 0x00, 0x4e, 0xa9, 0x4b, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x20, 0x00, 0x5f, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x58, 0x2f, 0x2e, 0x5f, 0x66, 0x2e,
        0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xc5, 0x37, 0xc9, 0x65, 0xf8, 0x37, 0xc9, 0x65, 0xfb, 0x37,
        0xc9, 0x65, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x63,
        0x60, 0x15, 0x63, 0x67, 0x60, 0x62, 0x60, 0xf0, 0x4d, 0x4c, 0x56, 0xf0, 0x0f, 0x56, 0x88, 0x50, 0x80, 0x02,
        0x90, 0x18, 0x03, 0x27, 0x10, 0x1b, 0x01, 0x71, 0x3c, 0x10, 0x83, 0xf8, 0x13, 0x19, 0x88, 0x02, 0x8e, 0x21,
        0x21, 0x41, 0x50, 0x26, 0x48, 0x47, 0x0f, 0x10, 0xb3, 0xa2, 0x29, 0x61, 0x44, 0x88, 0xb3, 0x65, 0xa4, 0xe6,
        0xe4, 0xe4, 0x83, 0x04, 0xcb, 0xf3, 0x8b, 0x72, 0x52, 0x00, 0x50, 0x4b, 0x07, 0x08, 0xcf, 0x36, 0x21, 0xb6,
        0x41, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x0a, 0x03, 0x0a, 0x00, 0x08, 0x00,
        0x00, 0x00, 0x4e, 0xa9, 0x4b, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00,
        0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xc5, 0x37, 0xc9, 0x65, 0xf8, 0x37, 0xc9, 0x65,
        0xe7, 0x37, 0xc9, 0x65, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00,
        0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x4e, 0xa9, 0x4b, 0x58, 0xcf,
        0x36, 0x21, 0xb6, 0x41, 0x00, 0x00, 0x00, 0x91, 0x00, 0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x53, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53,
        0x58, 0x2f, 0x2e, 0x5f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xc5, 0x37, 0xc9, 0x65,
        0xf8, 0x37, 0xc9, 0x65, 0xfb, 0x37, 0xc9, 0x65, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00,
        0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x02, 0x00, 0xb1,
        0x00, 0x00, 0x00, 0xf2, 0x00, 0x00, 0x00, 0x00, 0x00};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    char buf[4096];
    const VFSFilePtr file = host->CreateFile("/f.txt").value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    REQUIRE(file->XAttrCount() == 1);
    REQUIRE(file->XAttrGet("hello", buf, sizeof(buf)) == 5);
    REQUIRE(strncmp(buf, "world", 5) == 0);
}

TEST_CASE(PREFIX "Reading com.apple.FinderInfo from an archive")
{
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x08, 0x00, 0x00, 0x00, 0x6d, 0xaa, 0x4b, 0x58, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55,
        0x54, 0x0d, 0x00, 0x07, 0xde, 0x39, 0xc9, 0x65, 0xfb, 0x39, 0xc9, 0x65, 0xef, 0x39, 0xc9, 0x65, 0x75, 0x78,
        0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x07, 0x08, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x08,
        0x00, 0x08, 0x00, 0x6d, 0xaa, 0x4b, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00,
        0x00, 0x10, 0x00, 0x20, 0x00, 0x5f, 0x5f, 0x4d, 0x41, 0x43, 0x4f, 0x53, 0x58, 0x2f, 0x2e, 0x5f, 0x66, 0x2e,
        0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xde, 0x39, 0xc9, 0x65, 0xfb, 0x39, 0xc9, 0x65, 0xfe, 0x39,
        0xc9, 0x65, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x63,
        0x60, 0x15, 0x63, 0x67, 0x60, 0x62, 0x60, 0xf0, 0x4d, 0x4c, 0x56, 0xf0, 0x0f, 0x56, 0x88, 0x50, 0x80, 0x02,
        0x90, 0x18, 0x03, 0x27, 0x10, 0x1b, 0x01, 0xf1, 0x4a, 0x20, 0x06, 0xf1, 0x6f, 0x33, 0x20, 0x03, 0x0e, 0x06,
        0x1c, 0xc0, 0x31, 0x24, 0x24, 0x08, 0xca, 0x04, 0xe9, 0x58, 0x01, 0xc4, 0xc6, 0x68, 0x4a, 0x18, 0x11, 0xe2,
        0x2a, 0xc9, 0xf9, 0xb9, 0x7a, 0x89, 0x05, 0x05, 0x39, 0xa9, 0x7a, 0xb9, 0xa9, 0x25, 0x89, 0x29, 0x89, 0x25,
        0x89, 0x56, 0xf1, 0xd9, 0xbe, 0x2e, 0x9e, 0x25, 0xa9, 0xb9, 0xa1, 0xc5, 0xa9, 0x45, 0x21, 0x89, 0xe9, 0xc5,
        0x0c, 0x0c, 0x49, 0x05, 0x39, 0x99, 0xc5, 0x25, 0x06, 0x06, 0x0b, 0x19, 0xc3, 0x9c, 0x72, 0x4a, 0x53, 0xb9,
        0x4c, 0x38, 0xb8, 0xa0, 0x26, 0x31, 0x42, 0x8d, 0x64, 0x42, 0xb3, 0x42, 0x10, 0x00, 0x50, 0x4b, 0x07, 0x08,
        0xc6, 0xe1, 0xe8, 0x47, 0x7b, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x0a, 0x03,
        0x0a, 0x00, 0x08, 0x00, 0x00, 0x00, 0x6d, 0xaa, 0x4b, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81,
        0x00, 0x00, 0x00, 0x00, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07, 0xde, 0x39, 0xc9, 0x65,
        0xfb, 0x39, 0xc9, 0x65, 0xef, 0x39, 0xc9, 0x65, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00,
        0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x08, 0x00, 0x08, 0x00, 0x6d,
        0xaa, 0x4b, 0x58, 0xc6, 0xe1, 0xe8, 0x47, 0x7b, 0x00, 0x00, 0x00, 0xdb, 0x00, 0x00, 0x00, 0x10, 0x00, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x53, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x4d,
        0x41, 0x43, 0x4f, 0x53, 0x58, 0x2f, 0x2e, 0x5f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x0d, 0x00, 0x07,
        0xde, 0x39, 0xc9, 0x65, 0xfb, 0x39, 0xc9, 0x65, 0xfe, 0x39, 0xc9, 0x65, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04,
        0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x02, 0x00, 0xb1, 0x00, 0x00, 0x00, 0x2c, 0x01, 0x00, 0x00, 0x00, 0x00};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    char buf[4096];
    const VFSFilePtr file = host->CreateFile("/f.txt").value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    REQUIRE(file->XAttrCount() == 2);
    REQUIRE(file->XAttrGet("com.apple.FinderInfo", buf, sizeof(buf)) == 32);
    const uint8_t finfo[32] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
                               0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                               0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    REQUIRE(memcmp(buf, finfo, 32) == 0);
}

TEST_CASE(PREFIX "archive with a slash dir")
{
    //    unzip -lv ./arc.zip:
    //     Length   Method    Size  Cmpr    Date    Time   CRC-32   Name
    //    --------  ------  ------- ---- ---------- ----- --------  ----
    //           0  Defl:N        2   0% 04-29-2017 08:30 00000000  /
    //          13  Stored       13   0% 02-12-2024 21:03 ec4ac3d0  f.txt
    //    --------          -------  ---                            -------
    //          13               15 -15%                            2 files
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x00, 0x08, 0x08, 0x00, 0xd2, 0x43, 0x9d, 0x4a, 0x00, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2f, 0x03, 0x00, 0x50,
        0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0xa8, 0x4c, 0x58, 0xd0, 0xc3, 0x4a, 0xec,
        0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x05, 0x00, 0x1c, 0x00, 0x66, 0x2e, 0x74, 0x78, 0x74,
        0x55, 0x54, 0x09, 0x00, 0x03, 0xa9, 0x87, 0xca, 0x65, 0xab, 0x87, 0xca, 0x65, 0x75, 0x78, 0x0b, 0x00,
        0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c,
        0x20, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x21, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x03, 0x14, 0x00, 0x00, 0x08,
        0x08, 0x00, 0xd2, 0x43, 0x9d, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0xe4, 0x01, 0x00, 0x00,
        0x00, 0x00, 0x2f, 0x50, 0x4b, 0x01, 0x02, 0x1e, 0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x73, 0xa8,
        0x4c, 0x58, 0xd0, 0xc3, 0x4a, 0xec, 0x0d, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x05, 0x00, 0x18,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x21, 0x00, 0x00, 0x00, 0x66, 0x2e,
        0x74, 0x78, 0x74, 0x55, 0x54, 0x05, 0x00, 0x03, 0xa9, 0x87, 0xca, 0x65, 0x75, 0x78, 0x0b, 0x00, 0x01,
        0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x02, 0x00, 0x7a, 0x00, 0x00, 0x00, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));
    REQUIRE(host->StatTotalFiles() == 1);
    REQUIRE(host->StatTotalRegs() == 1);
    REQUIRE(host->StatTotalDirs() == 0); // root doesn't count

    REQUIRE(host->FetchDirectoryListing("/", 0));

    auto fn = "/f.txt";
    const VFSFilePtr file = host->CreateFile(fn).value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto d = file->ReadFile();
    REQUIRE(d->size() == 13);
    auto ref = "Hello, World!";
    REQUIRE(memcmp(d->data(), ref, strlen(ref)) == 0);
}

TEST_CASE(PREFIX "zip archive with a heading slash in a filename")
{
    // This archive is technically invalid (https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT:4.4.17.1),
    // but many tools support these inconsistencies so NC does as well. Unfortunately I don't know how to produce a
    // tiny example of such corrupted archive myself, so here's the full sample sent by a user long time ago...
    // unzip -lv ./arc.zip:
    //  Length   Method    Size  Cmpr    Date    Time   CRC-32   Name
    // --------  ------  ------- ---- ---------- ----- --------  ----
    //    46159  Defl:N    17756  62% 04-20-2017 07:26 35b502db  /The.Expanse.S02E13.Caliban's.War.SVA.srt
    // --------          -------  ---                            -------
    //    46159            17756  62%                            1 file
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x42, 0x3b, 0x94, 0x4a, 0xdb, 0x02, 0xb5, 0x35,
        0x5c, 0x45, 0x00, 0x00, 0x4f, 0xb4, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2f, 0x54, 0x68, 0x65, 0x2e, 0x45,
        0x78, 0x70, 0x61, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x30, 0x32, 0x45, 0x31, 0x33, 0x2e, 0x43, 0x61, 0x6c, 0x69,
        0x62, 0x61, 0x6e, 0x27, 0x73, 0x2e, 0x57, 0x61, 0x72, 0x2e, 0x53, 0x56, 0x41, 0x2e, 0x73, 0x72, 0x74, 0x8d,
        0x7d, 0xdb, 0x92, 0xe3, 0x46, 0x92, 0xe5, 0x7b, 0x99, 0xd5, 0x3f, 0x50, 0xfb, 0xa2, 0x17, 0xaa, 0x8c, 0xb8,
        0x03, 0xf3, 0xb0, 0x6d, 0xa5, 0x4b, 0x4b, 0x39, 0xa3, 0x9b, 0xa9, 0x34, 0x23, 0xeb, 0xa7, 0x35, 0x24, 0x89,
        0xcc, 0xc4, 0x14, 0x49, 0xe4, 0x10, 0x64, 0xa5, 0xb2, 0xbf, 0x7e, 0xfd, 0x1c, 0xf7, 0x70, 0x38, 0x4a, 0xb3,
        0x63, 0x6b, 0xd6, 0xd6, 0x92, 0x98, 0xf0, 0x83, 0x40, 0x84, 0x87, 0x87, 0xdf, 0x23, 0x7b, 0xfb, 0x66, 0xb7,
        0xfb, 0x17, 0xfc, 0xaf, 0xd8, 0x56, 0x6d, 0xb7, 0xf9, 0xea, 0xab, 0xff, 0xbd, 0xb1, 0x1f, 0x2a, 0xf9, 0xa1,
        0x7d, 0xfb, 0xe6, 0xd7, 0xcb, 0xf0, 0x69, 0x9c, 0x6e, 0xf3, 0xf1, 0x75, 0x33, 0x9d, 0x37, 0xbf, 0x3f, 0x0d,
        0x9b, 0xef, 0xfe, 0x7c, 0xee, 0xcf, 0xf3, 0xf0, 0xee, 0xdd, 0xbb, 0xb7, 0x6f, 0xde, 0xbe, 0xc9, 0x1d, 0xa1,
        0xde, 0x76, 0x5d, 0x1e, 0x11, 0xda, 0x6d, 0xd3, 0x65, 0x6f, 0xdf, 0x7c, 0x3f, 0x5d, 0x37, 0xe3, 0xf5, 0x0b,
        0x3c, 0x5c, 0xf8, 0xc3, 0xf8, 0x5b, 0x11, 0x1e, 0xce, 0xb2, 0x6d, 0xd9, 0x95, 0x6f, 0xdf, 0x7c, 0xb5, 0xf9,
        0x79, 0xfa, 0x02, 0xff, 0xf8, 0xfd, 0xa9, 0x17, 0xb2, 0x79, 0x73, 0x16, 0xea, 0xd7, 0xe9, 0x76, 0xd9, 0x7c,
        0x1c, 0x0f, 0x5f, 0xc8, 0x1f, 0xaf, 0x9b, 0xfe, 0xfc, 0x7a, 0x9a, 0x2e, 0x03, 0x01, 0xcb, 0x04, 0x48, 0xfa,
        0x3a, 0x02, 0xe6, 0xdb, 0xb6, 0xab, 0xdf, 0xbe, 0xf9, 0xe3, 0x69, 0x38, 0x03, 0x60, 0xf3, 0x38, 0x9d, 0xcf,
        0xfd, 0x66, 0x7a, 0x96, 0xff, 0xbc, 0x3e, 0x09, 0xf0, 0x61, 0x9a, 0x2e, 0x7f, 0x03, 0x46, 0xe5, 0x18, 0x20,
        0x69, 0x23, 0x46, 0xb9, 0xad, 0x6b, 0x19, 0xf3, 0x1f, 0xc3, 0x66, 0xdf, 0x9f, 0xbf, 0xbc, 0x26, 0x6a, 0x19,
        0x19, 0xa8, 0x37, 0xfd, 0x63, 0x3f, 0x9e, 0x39, 0x0b, 0xb5, 0x63, 0x80, 0xa4, 0x8a, 0x18, 0xcd, 0x76, 0xb7,
        0xdb, 0xbd, 0x7d, 0xf3, 0xfb, 0xd3, 0x34, 0x0f, 0x9b, 0xe7, 0x61, 0x7a, 0x3e, 0x0e, 0x9b, 0x97, 0xf1, 0x78,
        0x94, 0x0f, 0x92, 0xff, 0x93, 0x91, 0x11, 0xa0, 0x71, 0x00, 0x3c, 0x1f, 0xa7, 0x31, 0x6b, 0xb7, 0xbb, 0x5a,
        0xfe, 0xfc, 0xe3, 0x70, 0x95, 0x6f, 0xe0, 0x57, 0xb7, 0xe9, 0xe1, 0x7c, 0xb7, 0xcd, 0x9a, 0x2c, 0x3c, 0x9c,
        0xe7, 0x42, 0x5d, 0xe1, 0x6d, 0xc3, 0xe6, 0xc3, 0x74, 0x3a, 0xf7, 0xa7, 0xfb, 0xdb, 0x71, 0x9c, 0x39, 0x93,
        0xcf, 0xb7, 0xf9, 0x69, 0x3c, 0x3f, 0xbe, 0x7d, 0x33, 0x3d, 0x3c, 0x6c, 0xe5, 0x2b, 0x86, 0xd7, 0x2f, 0x2f,
        0xc3, 0xe6, 0x76, 0x3e, 0x0c, 0x97, 0x97, 0xfe, 0x95, 0xc0, 0x9d, 0x03, 0x03, 0xa7, 0x89, 0xc0, 0xc5, 0xb6,
        0xdd, 0x61, 0x3a, 0x07, 0x10, 0x61, 0x51, 0x1e, 0x27, 0x01, 0xc3, 0x62, 0xbc, 0x3c, 0x0d, 0x97, 0xe1, 0xed,
        0x9b, 0x2b, 0x3e, 0x87, 0x73, 0x73, 0xc5, 0x6b, 0xf0, 0xc6, 0xc3, 0xd0, 0x1f, 0xf8, 0x75, 0xd9, 0xce, 0x81,
        0x81, 0x13, 0xe7, 0x38, 0xaf, 0xb6, 0xbb, 0x32, 0xd3, 0x11, 0xcf, 0xc3, 0x7e, 0x3a, 0x1f, 0x30, 0xb4, 0xd5,
        0xe0, 0x89, 0x90, 0x39, 0x02, 0x08, 0x22, 0xeb, 0xe4, 0xf5, 0xb6, 0x28, 0x85, 0x0d, 0xe7, 0xeb, 0xb8, 0xff,
        0x38, 0x0b, 0xab, 0xcd, 0x9b, 0x27, 0x79, 0xf1, 0x66, 0xba, 0xc9, 0x82, 0x3d, 0x10, 0x6d, 0xbe, 0xf6, 0xd7,
        0x71, 0x3a, 0x13, 0xc8, 0x19, 0x96, 0x74, 0x65, 0x04, 0x6a, 0xb6, 0x55, 0x23, 0x33, 0x3d, 0x5e, 0xbf, 0x9c,
        0x8d, 0x5d, 0x1e, 0x65, 0xd2, 0x8f, 0xe3, 0x75, 0x73, 0x7b, 0xe6, 0xfc, 0x64, 0xce, 0xc0, 0x7c, 0x36, 0xee,
        0x97, 0xbc, 0xdd, 0xd6, 0xa5, 0xb0, 0xe3, 0x6f, 0xc3, 0xf5, 0x76, 0x11, 0x26, 0x99, 0x36, 0xcf, 0xd3, 0x45,
        0x87, 0xee, 0x4c, 0xca, 0x67, 0x22, 0x93, 0x16, 0xbb, 0x6d, 0x5e, 0xca, 0xac, 0x0a, 0x2f, 0x81, 0x45, 0xc9,
        0x16, 0xf7, 0xc3, 0xe6, 0x61, 0xbc, 0x0c, 0x07, 0x79, 0xe7, 0xa4, 0xcc, 0x95, 0x39, 0x87, 0xf2, 0xf9, 0x38,
        0x7b, 0x45, 0xbe, 0x2d, 0xcb, 0x16, 0xb3, 0x27, 0xd3, 0x2d, 0xff, 0xe3, 0x4e, 0x79, 0x18, 0xcf, 0xfd, 0x71,
        0xf3, 0xd2, 0x5f, 0xce, 0xb2, 0x0e, 0x8a, 0xe0, 0xfc, 0x09, 0x82, 0x6a, 0x17, 0x11, 0x8a, 0x6d, 0x9d, 0x35,
        0x86, 0x20, 0xec, 0xfc, 0xe5, 0xd5, 0x3e, 0x7d, 0x90, 0x95, 0x90, 0xd5, 0xe5, 0x62, 0x2a, 0x88, 0xf3, 0x28,
        0x69, 0xe2, 0xc7, 0x17, 0x22, 0x2c, 0x32, 0x19, 0xc6, 0xcf, 0xfd, 0x74, 0x1a, 0xe5, 0xcd, 0xf3, 0xe6, 0x32,
        0x3e, 0x3e, 0x5d, 0xdf, 0x6d, 0xde, 0x0b, 0x08, 0xbe, 0xec, 0xe3, 0x79, 0x7a, 0x91, 0x95, 0x51, 0x1c, 0x67,
        0xdf, 0x32, 0xdf, 0x16, 0x79, 0xe4, 0xb2, 0x52, 0xb8, 0xa3, 0x16, 0x5e, 0xf9, 0x71, 0x9a, 0x64, 0x25, 0x8f,
        0xe3, 0x47, 0xd9, 0x2a, 0x64, 0xb8, 0xfd, 0x71, 0xe8, 0x2f, 0x4a, 0xed, 0x3c, 0x5a, 0xca, 0xc6, 0x28, 0x22,
        0x23, 0x54, 0xbb, 0x6d, 0x89, 0xad, 0xe6, 0x5b, 0x7e, 0xf8, 0x73, 0x3a, 0x0f, 0x97, 0xfe, 0x3a, 0x6c, 0x4e,
        0xaf, 0x6f, 0xdf, 0x3c, 0xf4, 0xa7, 0xf1, 0xf8, 0xba, 0x15, 0x8e, 0x07, 0x97, 0x8d, 0x60, 0x88, 0xfe, 0x28,
        0x3f, 0x50, 0x8a, 0x39, 0x83, 0x12, 0x24, 0xee, 0xbf, 0x2a, 0xdf, 0xd6, 0x3b, 0x61, 0x9a, 0xdb, 0xf9, 0xe1,
        0x32, 0x0c, 0xff, 0x04, 0xd6, 0xa6, 0x9f, 0xe7, 0xe1, 0x3a, 0x2b, 0xa5, 0x33, 0x26, 0x1f, 0x8c, 0xfc, 0x54,
        0x95, 0xdb, 0x7c, 0x27, 0x1c, 0x23, 0x9f, 0x80, 0xad, 0xd1, 0x1f, 0x3f, 0x6e, 0xfa, 0x7b, 0x70, 0xe5, 0x93,
        0x4c, 0xc6, 0x1d, 0x44, 0x8a, 0x30, 0xea, 0xf1, 0x79, 0xf3, 0x71, 0x18, 0x9e, 0x09, 0xe5, 0xac, 0x49, 0xca,
        0x28, 0x45, 0xaa, 0x5a, 0xb0, 0x85, 0x0d, 0xbe, 0xeb, 0x2f, 0xd7, 0x27, 0x59, 0x96, 0xc3, 0xe6, 0xa7, 0xfe,
        0x32, 0x6f, 0x1e, 0x2e, 0xd3, 0x69, 0x73, 0x7f, 0x9c, 0x5e, 0xb8, 0xaf, 0x6f, 0xcf, 0x2a, 0xd9, 0x5e, 0x9e,
        0x26, 0x91, 0x31, 0x8f, 0xd3, 0xe1, 0xd0, 0x9f, 0xce, 0x9b, 0xf9, 0x75, 0xbe, 0x0e, 0x27, 0x95, 0xd5, 0xce,
        0xbe, 0xc4, 0x8b, 0x33, 0x5f, 0x09, 0x6b, 0x36, 0xc2, 0xa8, 0x02, 0x7b, 0x1d, 0x65, 0x60, 0xdf, 0x0e, 0x0f,
        0x83, 0x08, 0xf9, 0xcd, 0x4f, 0xe3, 0x59, 0x76, 0xe0, 0x70, 0xd9, 0xfc, 0xdb, 0x74, 0x99, 0x9f, 0x6e, 0xe7,
        0xe9, 0x13, 0x81, 0x9c, 0xa5, 0x49, 0xb7, 0xb0, 0x74, 0x26, 0xff, 0xdb, 0xe6, 0xd8, 0x44, 0xf3, 0xed, 0xe1,
        0x61, 0x00, 0x1b, 0xf7, 0x9b, 0x87, 0x5e, 0xbe, 0x1d, 0x7b, 0x12, 0xfb, 0xa1, 0xbf, 0x5e, 0xfb, 0xfd, 0xc7,
        0x8d, 0xfc, 0xc7, 0x71, 0x14, 0x58, 0x0e, 0x78, 0xf8, 0x34, 0x38, 0xab, 0xe6, 0xc6, 0xec, 0x86, 0xd4, 0x45,
        0xe8, 0x62, 0x9b, 0x61, 0xb7, 0xfc, 0x72, 0x1e, 0xb0, 0xb1, 0x6f, 0xb2, 0xcf, 0x85, 0xd3, 0x64, 0xa7, 0x1d,
        0x45, 0xb4, 0x2a, 0x71, 0xed, 0xc4, 0x78, 0xb6, 0x8d, 0xc4, 0xb5, 0xec, 0x14, 0xe1, 0x9d, 0x0f, 0xe3, 0xe9,
        0x76, 0xbc, 0xf6, 0xe7, 0x81, 0x67, 0x1a, 0xe5, 0xe0, 0xe6, 0xa7, 0x6f, 0x7e, 0xfb, 0x79, 0xf3, 0x6f, 0xfd,
        0xa5, 0xff, 0x78, 0x3b, 0xe9, 0xa2, 0x36, 0x8e, 0x23, 0x64, 0x55, 0x16, 0x71, 0x9a, 0x6d, 0xd7, 0xca, 0xe7,
        0x1f, 0xc6, 0xf9, 0xb9, 0xbf, 0xee, 0x9f, 0xe4, 0x0b, 0xef, 0x5f, 0x3f, 0x9b, 0x9d, 0xd6, 0xa9, 0xf1, 0x70,
        0x9c, 0x9d, 0x6c, 0xb7, 0x2d, 0xc0, 0xc1, 0x32, 0xe8, 0x6b, 0x2f, 0xdc, 0x7d, 0x18, 0x8e, 0xe3, 0xa7, 0xe1,
        0xf2, 0x8a, 0xef, 0xc1, 0xde, 0x7d, 0xfb, 0xe6, 0xf9, 0x32, 0x5d, 0xa7, 0x93, 0x2c, 0xe0, 0xfe, 0x26, 0x8b,
        0x78, 0x1d, 0xf6, 0x4f, 0xe7, 0xe9, 0x38, 0x3d, 0xbe, 0x12, 0xb8, 0x4b, 0xc0, 0xc0, 0xc9, 0xe3, 0xb0, 0xe4,
        0xfc, 0xab, 0x5a, 0x19, 0x35, 0xf6, 0xde, 0x61, 0x98, 0xaf, 0x97, 0xe9, 0x75, 0x50, 0xd9, 0x5b, 0xec, 0x9c,
        0x28, 0x5b, 0x9d, 0xf1, 0xf2, 0x43, 0xb1, 0xcd, 0x5b, 0xc1, 0xc4, 0x2e, 0xbd, 0xdb, 0x3c, 0xf6, 0x9f, 0x06,
        0x4e, 0xc7, 0x74, 0x91, 0x23, 0x41, 0x69, 0x33, 0xa7, 0x95, 0x47, 0xbb, 0xd5, 0x0b, 0xab, 0x6d, 0x06, 0x36,
        0xf8, 0x47, 0x92, 0x5b, 0xd8, 0xa2, 0xe7, 0x4d, 0xe2, 0xc1, 0xd3, 0x30, 0xeb, 0xfe, 0x28, 0x72, 0x87, 0x00,
        0xc5, 0x6a, 0x32, 0x1a, 0xfc, 0x20, 0x2c, 0x61, 0x42, 0x82, 0x30, 0x90, 0xb8, 0x18, 0xc4, 0xc3, 0x4d, 0xb8,
        0xe4, 0x1e, 0xac, 0x22, 0x73, 0xf5, 0x32, 0x5d, 0x3e, 0xea, 0x80, 0x8a, 0x84, 0x96, 0x97, 0xa2, 0x6e, 0x2c,
        0xbb, 0x2d, 0xc7, 0x91, 0xd5, 0x15, 0x76, 0x90, 0x98, 0x8a, 0xb2, 0xf9, 0x6a, 0xb3, 0xcb, 0xff, 0xcc, 0x44,
        0x46, 0x6c, 0xbe, 0xe9, 0x8f, 0xe3, 0xbd, 0x9c, 0xe1, 0xf3, 0xe6, 0x8f, 0xfe, 0xb2, 0x21, 0x94, 0xf1, 0x70,
        0xfe, 0x2f, 0x45, 0xb6, 0xad, 0xbb, 0x26, 0x40, 0x89, 0x7c, 0x6b, 0xdb, 0x0c, 0x87, 0xdd, 0xf1, 0xb8, 0x15,
        0xb1, 0x25, 0x0c, 0xe6, 0xf2, 0x88, 0xaa, 0xc4, 0xed, 0x15, 0xbc, 0xf7, 0x49, 0x4e, 0xbd, 0x79, 0x3a, 0xc9,
        0xf1, 0xf2, 0x34, 0x52, 0x49, 0xd9, 0x9c, 0x07, 0x61, 0x07, 0x19, 0xef, 0xc3, 0xf8, 0x78, 0x13, 0xa9, 0x25,
        0x7b, 0x5d, 0x47, 0x5d, 0xf9, 0xab, 0x80, 0x9c, 0xc7, 0x57, 0x55, 0xdb, 0xb2, 0x96, 0x3f, 0xff, 0xeb, 0x4d,
        0x0e, 0xe9, 0x13, 0x58, 0xa2, 0xdf, 0x60, 0xfb, 0x6e, 0x37, 0x94, 0x1a, 0x6f, 0xdf, 0x60, 0x3e, 0xa6, 0x33,
        0xa7, 0x64, 0x38, 0x0e, 0x9f, 0xfa, 0xeb, 0x74, 0x21, 0x64, 0xed, 0x90, 0x40, 0x58, 0x8d, 0x5e, 0xa6, 0x15,
        0x1f, 0x87, 0x69, 0x7d, 0x9c, 0x7c, 0x0e, 0x71, 0x32, 0xc8, 0x40, 0x9f, 0x75, 0x44, 0x8d, 0x93, 0xe3, 0xe9,
        0x3a, 0x92, 0xb7, 0xdb, 0x1c, 0x03, 0xbe, 0x33, 0x9d, 0xe7, 0x30, 0xf1, 0x54, 0x57, 0xb2, 0xd6, 0xc9, 0xf0,
        0xd4, 0xea, 0xad, 0xdd, 0xb6, 0x69, 0xa8, 0xe7, 0x88, 0xf0, 0x95, 0xb1, 0x7f, 0x82, 0x04, 0x12, 0x65, 0x6d,
        0x23, 0x0c, 0x7d, 0x7f, 0x34, 0x01, 0x54, 0x74, 0x89, 0x5e, 0x84, 0x77, 0x1d, 0x18, 0x58, 0x7e, 0xe8, 0x70,
        0xa0, 0x8a, 0xb6, 0x38, 0xe0, 0x95, 0x2f, 0x67, 0x55, 0xef, 0x76, 0xe9, 0x79, 0x91, 0x88, 0x59, 0x55, 0x84,
        0xe7, 0xab, 0x6a, 0xdb, 0x55, 0x05, 0x34, 0x45, 0xe1, 0x40, 0x1c, 0x11, 0xf3, 0xd3, 0x84, 0x41, 0x7e, 0xb5,
        0xf9, 0x43, 0x46, 0x4b, 0xc5, 0xae, 0xcc, 0x9c, 0xba, 0xdd, 0x66, 0xdd, 0x2e, 0x52, 0x77, 0xdb, 0x2e, 0x2f,
        0xd2, 0x0a, 0xe3, 0xfb, 0x84, 0x33, 0x64, 0x4b, 0xf7, 0xcf, 0xcf, 0xa2, 0xd6, 0x5c, 0x93, 0x30, 0x2a, 0x8d,
        0x79, 0x0b, 0xe8, 0x86, 0x65, 0xbd, 0x8c, 0xb7, 0xc0, 0x86, 0xe0, 0xf7, 0xfe, 0xf2, 0xb4, 0xdd, 0xdc, 0xa9,
        0x7c, 0x37, 0xee, 0xc0, 0xde, 0x96, 0xd5, 0x3a, 0x41, 0x32, 0xf4, 0xaf, 0x8a, 0x53, 0x38, 0x0e, 0xc8, 0xf2,
        0x88, 0x53, 0x8b, 0xa0, 0xda, 0xd9, 0x74, 0x27, 0xee, 0x07, 0xef, 0x9c, 0x71, 0xd0, 0xc8, 0x44, 0x08, 0xc0,
        0xb7, 0xd3, 0xde, 0xdf, 0xb0, 0xef, 0x2f, 0x94, 0x7e, 0x27, 0x95, 0x78, 0x65, 0x99, 0x90, 0x45, 0x9d, 0x29,
        0xdb, 0x2a, 0x20, 0x8b, 0xb6, 0x51, 0x55, 0x99, 0xee, 0xd0, 0x59, 0x98, 0x55, 0x34, 0x8a, 0x59, 0x69, 0x2a,
        0xa7, 0xc1, 0x23, 0x45, 0xa0, 0x11, 0x05, 0xa3, 0xc9, 0x39, 0x9a, 0xc3, 0xc4, 0xc5, 0x1f, 0xe6, 0xe1, 0x22,
        0x4b, 0xb9, 0x17, 0x49, 0x2e, 0x3c, 0xfe, 0x30, 0x5d, 0x16, 0x66, 0x28, 0xeb, 0x04, 0x23, 0x5c, 0xdd, 0x55,
        0x5d, 0x84, 0xa9, 0xb6, 0x75, 0x25, 0xbc, 0x72, 0xf7, 0xb0, 0x79, 0x7f, 0x1c, 0xfe, 0x94, 0xbd, 0x72, 0x00,
        0x1a, 0x8e, 0x40, 0x19, 0xc6, 0x09, 0x1f, 0xa0, 0x8a, 0xd9, 0x71, 0x38, 0x3c, 0x0e, 0x94, 0x13, 0x65, 0xe3,
        0x68, 0x42, 0x5c, 0xef, 0x22, 0x9a, 0xb0, 0x28, 0x6c, 0x83, 0x17, 0xd1, 0x06, 0xa6, 0xdb, 0xf1, 0x00, 0xde,
        0xba, 0x1f, 0xa0, 0x89, 0x4f, 0x22, 0xfb, 0xe5, 0x78, 0xd7, 0xe1, 0xb4, 0x0e, 0x20, 0xc6, 0x45, 0x1d, 0xbf,
        0xaa, 0x94, 0xaf, 0x82, 0x18, 0xfc, 0x76, 0x34, 0x6d, 0xe4, 0x33, 0x55, 0x95, 0xc7, 0x28, 0x87, 0xd3, 0xdf,
        0x2b, 0xe7, 0x74, 0x09, 0x8b, 0xa4, 0x71, 0xbd, 0xca, 0x52, 0xd5, 0xf1, 0x9f, 0x27, 0xd5, 0x6e, 0x46, 0xb0,
        0xeb, 0x30, 0xe3, 0xf3, 0x4e, 0x72, 0xb6, 0x99, 0xe0, 0xac, 0x76, 0x0e, 0x80, 0xe7, 0xe3, 0xdc, 0x94, 0xcd,
        0xb6, 0xd9, 0x95, 0x98, 0xe2, 0xfe, 0x78, 0x9a, 0x64, 0xd7, 0x5f, 0x2f, 0xfd, 0x61, 0x38, 0xa8, 0xea, 0x86,
        0xd3, 0x80, 0x47, 0x9a, 0xec, 0x3a, 0x53, 0x97, 0xaa, 0xcc, 0xa1, 0x40, 0x59, 0x07, 0xa8, 0x4a, 0x4e, 0xc8,
        0x5d, 0x67, 0xba, 0x1b, 0x46, 0x41, 0xc5, 0x7c, 0x9e, 0x44, 0xa7, 0x57, 0x61, 0x45, 0x3e, 0xec, 0xcf, 0x78,
        0xd9, 0x8b, 0xce, 0x7d, 0x2f, 0xaa, 0xbe, 0x7e, 0xaf, 0x30, 0xd8, 0xf7, 0x30, 0xa5, 0x86, 0x83, 0xce, 0x5f,
        0xe5, 0xbc, 0x0e, 0xd8, 0x2c, 0x2e, 0x40, 0x55, 0x40, 0xe5, 0x4e, 0xe7, 0x04, 0x2d, 0x06, 0xd1, 0xa8, 0xe5,
        0x3f, 0x5e, 0x9e, 0x5e, 0x39, 0xa1, 0x87, 0x51, 0xcf, 0x9a, 0xca, 0xf9, 0x5c, 0xf6, 0x6b, 0x59, 0xae, 0xc6,
        0x5a, 0x6f, 0x77, 0x50, 0x9f, 0xef, 0xae, 0xb2, 0x88, 0x98, 0xad, 0x27, 0xd9, 0x6b, 0xb2, 0x86, 0x8b, 0x0d,
        0x55, 0x39, 0x2b, 0xcb, 0xee, 0xac, 0x02, 0x2b, 0x97, 0xa2, 0x68, 0x88, 0xd8, 0x94, 0x3f, 0xff, 0xeb, 0x78,
        0x32, 0xb3, 0xb3, 0x32, 0x1e, 0x2e, 0x71, 0xd2, 0xb7, 0x79, 0x11, 0x1f, 0x16, 0xfe, 0x81, 0x2a, 0x75, 0x87,
        0x3d, 0x7d, 0x1e, 0xf7, 0x03, 0xe6, 0x13, 0xd2, 0x9a, 0x43, 0x85, 0x38, 0x54, 0x84, 0x3a, 0x21, 0xc8, 0xc1,
        0xd4, 0xec, 0xb2, 0x80, 0x20, 0x7b, 0xb2, 0xc3, 0x49, 0xf3, 0xbb, 0x5a, 0x7a, 0xba, 0xba, 0xf3, 0x95, 0xf6,
        0x8e, 0x88, 0xb4, 0xe3, 0x51, 0x01, 0x1a, 0x07, 0xc0, 0xf3, 0x71, 0xbc, 0x62, 0xb3, 0x55, 0x90, 0xa1, 0xef,
        0x2f, 0xfa, 0xd2, 0x19, 0xa7, 0x81, 0x49, 0x19, 0xac, 0x49, 0x2f, 0x22, 0x66, 0x1e, 0x9e, 0xc5, 0x60, 0x51,
        0x0b, 0xb4, 0x75, 0x24, 0x10, 0x36, 0x01, 0x49, 0x2c, 0xbc, 0x0e, 0x62, 0x06, 0xec, 0x76, 0x27, 0x1f, 0x72,
        0x24, 0xa3, 0x6c, 0x21, 0x1b, 0x0e, 0xc3, 0xa3, 0x28, 0xa4, 0xd0, 0xfa, 0xc7, 0xf3, 0xe6, 0x7e, 0x92, 0x05,
        0x51, 0x61, 0x53, 0x75, 0x09, 0x8d, 0xc4, 0x79, 0x44, 0x93, 0x53, 0x1c, 0x56, 0xdc, 0xd7, 0x37, 0x9e, 0x57,
        0x10, 0x9b, 0xbd, 0x7c, 0xe0, 0x5e, 0x0e, 0x95, 0x77, 0x9b, 0x1f, 0xa6, 0x97, 0x2f, 0xe7, 0x74, 0xda, 0x71,
        0x5c, 0xf5, 0xce, 0x91, 0xa0, 0x90, 0x76, 0x11, 0x49, 0x34, 0xfe, 0xa6, 0xe2, 0x0e, 0xe7, 0xd1, 0x3d, 0x10,
        0x4a, 0x34, 0xbe, 0x33, 0x77, 0x73, 0x9d, 0x39, 0x25, 0x1e, 0x5c, 0x7d, 0x51, 0xb3, 0x6d, 0x1b, 0xc8, 0x86,
        0x2f, 0x0f, 0x22, 0x96, 0x94, 0x7f, 0xb8, 0x3a, 0xa6, 0x28, 0xbe, 0x7d, 0x73, 0xc4, 0x89, 0x25, 0x22, 0x6e,
        0xff, 0x74, 0x9c, 0x2e, 0xd3, 0xf3, 0xd3, 0xab, 0x4d, 0x78, 0x9d, 0x3b, 0x68, 0xb7, 0x2d, 0xda, 0xb8, 0x62,
        0x62, 0xd6, 0x64, 0x2d, 0xd6, 0xfc, 0xcb, 0x93, 0xf0, 0xff, 0x45, 0x14, 0x2a, 0xd5, 0xb4, 0x6d, 0x53, 0x5d,
        0xaf, 0x50, 0x88, 0xc7, 0x8b, 0xe1, 0x14, 0x09, 0x87, 0x64, 0x65, 0xc4, 0x29, 0xc5, 0x90, 0x69, 0x68, 0xf1,
        0xcf, 0x34, 0x68, 0x55, 0x0c, 0xd2, 0x7c, 0x79, 0x01, 0x37, 0x28, 0xd7, 0xea, 0x29, 0xff, 0x64, 0x9b, 0xbd,
        0x2e, 0x1d, 0x0f, 0xe4, 0x71, 0x9a, 0x8a, 0x7a, 0x9b, 0x63, 0x53, 0xc0, 0x6f, 0x01, 0xe1, 0x09, 0x46, 0x50,
        0x1a, 0xe7, 0x5f, 0x3e, 0x12, 0x99, 0x47, 0xc4, 0x5d, 0x5b, 0xa9, 0x66, 0x85, 0x05, 0x52, 0x4b, 0x8a, 0x34,
        0xce, 0xb1, 0x7c, 0xa4, 0x0e, 0x34, 0x22, 0xa6, 0xb2, 0x3c, 0x71, 0xac, 0x0a, 0x35, 0xca, 0xb7, 0xfb, 0xcb,
        0xf4, 0x71, 0x58, 0x2c, 0x61, 0xf9, 0x45, 0x44, 0x9c, 0x6d, 0xa1, 0xda, 0xf9, 0x97, 0xd4, 0x71, 0x08, 0x62,
        0x98, 0x65, 0x60, 0xca, 0x6f, 0x27, 0x3d, 0xd1, 0x04, 0xf0, 0xa3, 0x92, 0xdf, 0x66, 0xfd, 0xf6, 0x7b, 0xac,
        0xd7, 0xc7, 0xf1, 0xa0, 0x7c, 0xe2, 0xfc, 0x2b, 0xd2, 0x2e, 0xaf, 0xe3, 0x66, 0x2c, 0xb1, 0x19, 0x3b, 0x08,
        0x20, 0x05, 0x99, 0x27, 0x7d, 0xb7, 0xf3, 0x68, 0x29, 0x56, 0x78, 0x70, 0xba, 0x94, 0x90, 0x72, 0x55, 0x27,
        0x43, 0xfb, 0x61, 0x10, 0xed, 0x3c, 0xed, 0xb5, 0xc6, 0x39, 0x91, 0x7f, 0x8e, 0x53, 0x2c, 0x8a, 0x43, 0x86,
        0x99, 0xc1, 0xee, 0x98, 0x3e, 0x6e, 0x68, 0xac, 0xf3, 0xf0, 0x9c, 0x87, 0xe3, 0x03, 0x86, 0x2a, 0xe2, 0x75,
        0x9c, 0x36, 0x3d, 0x7c, 0x02, 0x84, 0x72, 0xd6, 0x24, 0x65, 0x7c, 0xb5, 0x08, 0xbe, 0x0e, 0xdb, 0xd6, 0x4e,
        0xf0, 0x5e, 0x8e, 0x0b, 0x31, 0x15, 0x3f, 0x4d, 0xaf, 0xe9, 0xb0, 0x10, 0x85, 0xef, 0x73, 0xaf, 0x0a, 0x60,
        0x79, 0x86, 0x4c, 0x17, 0x72, 0x7e, 0xe3, 0x4c, 0x4a, 0xb4, 0xc8, 0xf9, 0x22, 0x13, 0x0b, 0xbc, 0xbd, 0xd7,
        0x63, 0x23, 0x28, 0x95, 0xc9, 0x19, 0xa3, 0x96, 0xb7, 0xcc, 0xed, 0x61, 0xa2, 0x45, 0x27, 0x70, 0xce, 0xab,
        0xa4, 0x8e, 0x53, 0x0b, 0x1b, 0x0e, 0x9a, 0x43, 0x6f, 0x0c, 0x2e, 0xcb, 0x2a, 0xeb, 0xdd, 0x7f, 0xc4, 0x68,
        0x44, 0xe8, 0x0f, 0x37, 0x31, 0x2c, 0x08, 0xe1, 0xec, 0x49, 0x8a, 0x28, 0x0f, 0x44, 0x2f, 0xea, 0x76, 0x2d,
        0xb4, 0x58, 0xff, 0xc2, 0xcd, 0xf5, 0x65, 0x32, 0xb7, 0xc9, 0x49, 0x8e, 0x5c, 0xec, 0x81, 0x23, 0x16, 0x4e,
        0x14, 0x7b, 0x19, 0xd9, 0x88, 0xe3, 0x05, 0x46, 0xb5, 0xae, 0x8a, 0x33, 0x31, 0x80, 0xc2, 0x91, 0x51, 0xc1,
        0x78, 0x6b, 0xa1, 0xdb, 0x7f, 0x98, 0xb6, 0x7f, 0xf1, 0xe7, 0x60, 0xda, 0xf8, 0xa5, 0xaa, 0xdd, 0xaa, 0xbe,
        0xf3, 0x32, 0xc2, 0xb0, 0x1d, 0x2f, 0x58, 0x31, 0xb1, 0xac, 0x6c, 0x9b, 0x34, 0xc6, 0xf2, 0x02, 0x98, 0x6f,
        0x9b, 0xa0, 0xef, 0xcb, 0x0f, 0x72, 0xc2, 0x40, 0x22, 0xd8, 0x36, 0x91, 0x41, 0xc1, 0x9a, 0x3e, 0x62, 0xec,
        0xa2, 0x74, 0x8e, 0xc7, 0x49, 0x37, 0x4d, 0xd3, 0x38, 0x02, 0x3c, 0x9a, 0x2b, 0x04, 0x48, 0x91, 0x5a, 0x95,
        0xc0, 0x77, 0x70, 0x38, 0xca, 0x67, 0xba, 0x3f, 0xae, 0x75, 0x32, 0x3c, 0xd5, 0x06, 0x32, 0x98, 0x51, 0xb9,
        0x1a, 0x1a, 0x5c, 0xb4, 0xe1, 0xfc, 0xd8, 0x3f, 0x62, 0xd2, 0x27, 0x99, 0x70, 0x3f, 0x53, 0xc3, 0xc1, 0xd6,
        0x74, 0x09, 0x4b, 0xb4, 0xc8, 0x3a, 0x8f, 0x43, 0xc8, 0xe4, 0x23, 0xb0, 0xd1, 0x54, 0xf6, 0x62, 0xa2, 0x7e,
        0x9b, 0xf6, 0x23, 0x37, 0x55, 0xbb, 0x73, 0x2a, 0x31, 0x9c, 0x82, 0xb3, 0xb4, 0xc2, 0x79, 0xd3, 0x74, 0x85,
        0x4a, 0x3b, 0x75, 0xc5, 0x81, 0x6d, 0xc4, 0x9e, 0xe6, 0xeb, 0xda, 0xcc, 0x09, 0xf1, 0x5c, 0x15, 0x09, 0xe5,
        0x60, 0xcd, 0x3b, 0xb5, 0x91, 0x8e, 0x93, 0x08, 0x6d, 0x39, 0x44, 0xe0, 0x33, 0xe3, 0xce, 0x11, 0x84, 0x09,
        0x72, 0x42, 0xd8, 0xe1, 0xe9, 0xd2, 0x3f, 0x9f, 0x87, 0x63, 0x52, 0x8c, 0xc0, 0x19, 0xd3, 0xe5, 0x79, 0x38,
        0x4c, 0x64, 0xf1, 0x36, 0xf7, 0x17, 0x08, 0x5e, 0x91, 0x85, 0x17, 0xe4, 0x99, 0xa8, 0x5e, 0x95, 0xb2, 0x38,
        0xd7, 0x55, 0xbe, 0x0a, 0xf6, 0xf6, 0x08, 0xaf, 0xe7, 0xf3, 0xed, 0xbc, 0xbf, 0x8a, 0x00, 0x9c, 0x37, 0x3d,
        0x5c, 0x0a, 0x3a, 0x39, 0x6d, 0x91, 0xc0, 0x48, 0xdb, 0x44, 0x30, 0xb1, 0xe1, 0xe1, 0xcf, 0xc1, 0x69, 0x35,
        0x3f, 0x01, 0xaa, 0x97, 0x71, 0xdc, 0x1e, 0x9f, 0x16, 0x51, 0xde, 0x96, 0x4e, 0x8d, 0x87, 0xf3, 0x48, 0x5d,
        0xea, 0x66, 0x7e, 0x9f, 0xe4, 0xff, 0xef, 0x3f, 0x7e, 0x43, 0xcf, 0x09, 0xa0, 0xd4, 0xcf, 0x46, 0xd1, 0xba,
        0x81, 0xb7, 0x2a, 0x2d, 0x55, 0x5b, 0x39, 0x5e, 0xb9, 0xda, 0xbd, 0x15, 0xce, 0xad, 0x1d, 0xbc, 0x39, 0x50,
        0xa7, 0x65, 0x33, 0x40, 0x9a, 0xa7, 0x9d, 0xb7, 0xa1, 0x27, 0x80, 0x56, 0xaa, 0x2e, 0x9d, 0x73, 0x2d, 0x89,
        0xe2, 0x0a, 0xc8, 0xc9, 0xd5, 0xe0, 0x04, 0xfe, 0x6a, 0xf3, 0x41, 0x8f, 0x82, 0xaf, 0x44, 0x43, 0x3e, 0x26,
        0x77, 0xd9, 0x8f, 0x03, 0xed, 0x10, 0xd7, 0xfd, 0x5a, 0x67, 0x5e, 0xb1, 0x51, 0x8b, 0x32, 0xf2, 0x80, 0x1c,
        0x5d, 0x1d, 0x74, 0x3f, 0xd8, 0x1f, 0x74, 0x58, 0x52, 0x23, 0xfe, 0x34, 0x9c, 0xaf, 0x66, 0xf7, 0xb7, 0xce,
        0xc1, 0x78, 0x34, 0x8b, 0xab, 0x24, 0xc7, 0x54, 0x03, 0xc3, 0xc1, 0xdf, 0xbc, 0x15, 0x45, 0x9c, 0xba, 0x89,
        0x1a, 0xa0, 0x90, 0x4c, 0x5f, 0xcd, 0x83, 0xb1, 0x93, 0x73, 0x2f, 0x6c, 0xbe, 0x36, 0x8e, 0x41, 0xce, 0x8d,
        0x0a, 0xeb, 0xf7, 0x6d, 0x7f, 0x3a, 0xeb, 0x36, 0x7f, 0x96, 0xd5, 0xa5, 0xb2, 0x43, 0xff, 0xf8, 0x38, 0xbf,
        0x7d, 0xb3, 0x9f, 0x4e, 0xb2, 0xf6, 0xd7, 0xe1, 0xf8, 0x2a, 0x6a, 0xca, 0xf4, 0x0c, 0x77, 0x9c, 0xe8, 0xb8,
        0x44, 0xee, 0x9c, 0xc3, 0x09, 0x14, 0xa7, 0x49, 0x0e, 0xa0, 0xaa, 0xad, 0xec, 0x3c, 0x83, 0x63, 0x32, 0xec,
        0x6d, 0xe1, 0x52, 0xf8, 0xb0, 0x37, 0xce, 0xa5, 0x87, 0xfe, 0xd4, 0x3f, 0x1a, 0xa4, 0xf3, 0xbe, 0x1c, 0x3c,
        0xd5, 0x6a, 0xab, 0xe1, 0xe0, 0x80, 0xc3, 0xe2, 0x8f, 0x24, 0xe8, 0xe8, 0x61, 0x18, 0x67, 0xf2, 0x37, 0x97,
        0xad, 0x73, 0xbe, 0xae, 0x76, 0xa2, 0xb4, 0xc7, 0x19, 0x93, 0x1f, 0x3a, 0x68, 0x43, 0x1f, 0x9e, 0x6c, 0x65,
        0xba, 0x22, 0x3c, 0xdb, 0xd5, 0x91, 0xf1, 0x2a, 0x19, 0x3b, 0x04, 0xd3, 0x0f, 0xa2, 0xac, 0x0d, 0xe7, 0x2f,
        0x36, 0xd4, 0x43, 0x47, 0x35, 0xe1, 0xc5, 0x7a, 0xa3, 0x49, 0x6e, 0xee, 0x76, 0xe7, 0x5e, 0x11, 0xee, 0x55,
        0x5d, 0x47, 0x90, 0x5a, 0x76, 0x96, 0x1d, 0xe8, 0x26, 0x19, 0xf4, 0x58, 0x87, 0x11, 0x04, 0x79, 0xb9, 0x7f,
        0xea, 0xe7, 0x64, 0xa6, 0x76, 0xce, 0xb5, 0x24, 0x8b, 0x13, 0x59, 0x35, 0x32, 0xba, 0x16, 0x72, 0xf8, 0xac,
        0xb3, 0x27, 0x22, 0x7c, 0x4f, 0x96, 0x91, 0x7d, 0x39, 0x5f, 0x61, 0x4a, 0x3d, 0x8d, 0xea, 0xc6, 0xea, 0x85,
        0x17, 0x0e, 0x03, 0xf1, 0x9c, 0x7f, 0x41, 0xde, 0x44, 0xb9, 0x2e, 0xaa, 0x79, 0x83, 0xc3, 0xfb, 0x45, 0xcd,
        0x7c, 0x58, 0x76, 0xc0, 0xda, 0x4f, 0x97, 0x33, 0xbd, 0x7d, 0xf6, 0x9d, 0xef, 0x1f, 0x37, 0xdf, 0x4e, 0x66,
        0xa2, 0x76, 0xce, 0xc4, 0x20, 0x0e, 0xe1, 0x8a, 0x1a, 0xa7, 0x44, 0x53, 0xa8, 0xf8, 0x23, 0x19, 0x17, 0x59,
        0x8c, 0x09, 0x40, 0x0e, 0x90, 0xa6, 0x22, 0x93, 0x45, 0xae, 0x9e, 0x75, 0x79, 0x8c, 0xa1, 0x95, 0xac, 0xdc,
        0x45, 0x1c, 0x6c, 0x86, 0x0a, 0xfa, 0xca, 0x5f, 0x2c, 0xb1, 0xae, 0x73, 0x2a, 0x3c, 0xd4, 0x44, 0x2a, 0x91,
        0xab, 0x4d, 0x65, 0xe6, 0xd3, 0x75, 0x3c, 0x61, 0x66, 0x4d, 0xe1, 0x33, 0x85, 0x74, 0xff, 0x34, 0x89, 0xfd,
        0x60, 0x21, 0x8c, 0x9d, 0x03, 0x81, 0x6e, 0x05, 0x24, 0xb3, 0xde, 0xf0, 0x20, 0x51, 0x42, 0x39, 0xc2, 0x68,
        0x62, 0x26, 0x87, 0xf7, 0x2e, 0x4b, 0xa4, 0xb0, 0xf6, 0xf3, 0x48, 0x9a, 0xc9, 0x04, 0xe7, 0xaa, 0x70, 0x86,
        0x37, 0x0b, 0x80, 0xb0, 0xc9, 0x78, 0xa6, 0x22, 0x22, 0x83, 0xbb, 0x97, 0x23, 0x38, 0x45, 0x52, 0x72, 0xc7,
        0x02, 0x69, 0x17, 0xb1, 0xe4, 0xa4, 0xea, 0x2c, 0xf8, 0x73, 0x10, 0x55, 0x1a, 0xab, 0x02, 0xa9, 0x29, 0xb6,
        0xda, 0x85, 0xc6, 0x0b, 0xec, 0xca, 0x61, 0x7f, 0x79, 0x7d, 0x4e, 0xe3, 0x2a, 0x1c, 0x0b, 0xa4, 0x71, 0x5c,
        0x62, 0x3a, 0x30, 0x7c, 0xa6, 0x12, 0xe9, 0x3f, 0xe1, 0x9d, 0xa2, 0x70, 0xa0, 0xbf, 0x0b, 0x73, 0x65, 0x32,
        0x5e, 0x34, 0xed, 0x95, 0xbf, 0x4b, 0x71, 0xcb, 0x84, 0x4b, 0x98, 0x36, 0xe2, 0x8a, 0x66, 0x09, 0x86, 0xa0,
        0x32, 0xad, 0xbe, 0xfd, 0x5e, 0x0e, 0x05, 0x38, 0xe2, 0x11, 0x2e, 0x3a, 0x92, 0xc5, 0xa1, 0x0a, 0xe0, 0xf0,
        0xb0, 0x51, 0x56, 0x8e, 0x06, 0xe2, 0xf8, 0xc5, 0x22, 0xf4, 0x4b, 0xb0, 0x85, 0x9a, 0x7a, 0xd3, 0x55, 0xf5,
        0x26, 0x0f, 0x5b, 0xc8, 0x2c, 0x9c, 0x1f, 0x87, 0xcb, 0x64, 0x7e, 0x8f, 0x6c, 0x57, 0x3b, 0x52, 0xb1, 0xad,
        0x76, 0x91, 0x83, 0xf2, 0xda, 0x2c, 0x36, 0x58, 0xb5, 0x9f, 0xc5, 0xb8, 0xae, 0x93, 0x28, 0x2a, 0x22, 0xb4,
        0xc0, 0x95, 0xe0, 0x89, 0xfe, 0x4c, 0x9b, 0xd2, 0x30, 0x1b, 0xc7, 0xac, 0x57, 0xb6, 0x5b, 0x0d, 0x59, 0x9f,
        0x35, 0xd9, 0x4a, 0x29, 0xa7, 0x28, 0x13, 0x23, 0x5f, 0x77, 0x72, 0x2f, 0x8a, 0xea, 0xd6, 0xe2, 0x4d, 0x3d,
        0x59, 0x46, 0x75, 0xb7, 0xbd, 0x3c, 0x9b, 0x3e, 0xde, 0x99, 0x9e, 0x68, 0x45, 0x80, 0x2f, 0x76, 0x1a, 0x92,
        0xfb, 0x6a, 0xe3, 0x9f, 0xdf, 0x27, 0xe2, 0xd5, 0xaf, 0x4f, 0x37, 0x51, 0x07, 0x0d, 0xce, 0x77, 0x03, 0xa9,
        0xe3, 0xca, 0x14, 0x62, 0xe4, 0x63, 0x37, 0x80, 0x50, 0xe3, 0x2d, 0xb2, 0x24, 0x70, 0x27, 0x4f, 0xe7, 0xbd,
        0x1e, 0x54, 0x21, 0xf8, 0xaa, 0x68, 0x99, 0x6f, 0x09, 0x12, 0xc7, 0x6f, 0x87, 0x25, 0x54, 0x9a, 0x8a, 0x62,
        0xa1, 0xb4, 0x89, 0x7e, 0x3d, 0x55, 0x0b, 0xde, 0xc5, 0xbf, 0x30, 0x32, 0x72, 0xf5, 0x43, 0x2f, 0xcb, 0x7c,
        0xbb, 0x10, 0xa5, 0x8a, 0xb0, 0x95, 0xc8, 0xa3, 0x56, 0xcd, 0x61, 0x53, 0xfc, 0xce, 0x53, 0x22, 0xf3, 0x9d,
        0x81, 0xa7, 0xda, 0xb8, 0xba, 0xf0, 0x20, 0x41, 0x0b, 0xd3, 0xe8, 0x65, 0x5a, 0x55, 0xb8, 0x0c, 0x19, 0x9b,
        0xde, 0x2a, 0xbd, 0xef, 0x06, 0x3c, 0xde, 0x46, 0x39, 0x85, 0x93, 0x0f, 0x7f, 0xee, 0x9d, 0x3b, 0x74, 0xe4,
        0x88, 0xdc, 0xc0, 0x91, 0x42, 0x20, 0xae, 0x6f, 0x1a, 0x8b, 0xef, 0x00, 0x92, 0xae, 0x3e, 0x41, 0x74, 0x26,
        0xf8, 0xaa, 0xe8, 0x3c, 0x7a, 0x48, 0xd1, 0x64, 0x95, 0x5b, 0x26, 0x35, 0x6c, 0x3c, 0xce, 0xf7, 0x20, 0xa9,
        0xe2, 0xf7, 0x94, 0x19, 0x4e, 0x62, 0x46, 0x96, 0x7c, 0x2c, 0xa2, 0x90, 0xec, 0xc9, 0xa2, 0xdc, 0x85, 0x90,
        0xa6, 0x70, 0xf5, 0x40, 0x36, 0xf7, 0xb2, 0x65, 0x4d, 0xbf, 0xc9, 0x32, 0xdf, 0x02, 0xc4, 0x88, 0x03, 0x2b,
        0xa1, 0x26, 0xb4, 0xaa, 0x15, 0xbc, 0x2c, 0x92, 0x0c, 0xda, 0xc8, 0x4c, 0xd7, 0x34, 0x82, 0x3a, 0x17, 0xbe,
        0x42, 0xd4, 0x76, 0xf0, 0x85, 0xd9, 0x49, 0x4f, 0x37, 0x38, 0xaa, 0x01, 0xee, 0x7b, 0x01, 0x58, 0xf9, 0x6a,
        0xc4, 0x62, 0xbd, 0xc0, 0x10, 0x16, 0x4b, 0x83, 0x1e, 0x41, 0x38, 0x3b, 0x2f, 0x13, 0xdd, 0x70, 0xf4, 0x9f,
        0x3f, 0x53, 0x35, 0x3b, 0xdc, 0x4e, 0xcf, 0x82, 0xaf, 0x60, 0xce, 0xf9, 0xa4, 0x5d, 0x8d, 0x54, 0xa4, 0x68,
        0x45, 0x56, 0x1d, 0xd3, 0x18, 0x0e, 0x17, 0x6c, 0xd0, 0xe7, 0xe3, 0xed, 0xa4, 0xbc, 0x6a, 0x87, 0xaf, 0x22,
        0x39, 0xd3, 0x93, 0x30, 0xb2, 0x69, 0x29, 0x76, 0x0b, 0xfc, 0x38, 0xbf, 0x5e, 0xfa, 0x3f, 0xe1, 0x72, 0x87,
        0xcf, 0x5a, 0x04, 0xe7, 0x3d, 0x43, 0xb8, 0xbe, 0x6d, 0xdf, 0xbe, 0x51, 0xce, 0x9d, 0x18, 0x5c, 0x86, 0xde,
        0xa0, 0xae, 0xa0, 0xe9, 0x64, 0x82, 0x25, 0xf7, 0x8d, 0x40, 0xc0, 0x28, 0xa2, 0xc4, 0x0a, 0xdc, 0x41, 0x73,
        0xb8, 0x9b, 0xcd, 0xd0, 0x11, 0xe3, 0xe4, 0x28, 0x1f, 0xff, 0xf5, 0xdf, 0x94, 0xd2, 0x79, 0x9d, 0x0f, 0xe6,
        0x91, 0xb2, 0x30, 0x03, 0x67, 0xe8, 0x9f, 0xde, 0x6d, 0x7e, 0xa2, 0xf4, 0xc5, 0xfc, 0x93, 0xfc, 0x3d, 0xb5,
        0xcd, 0xf4, 0x7a, 0xe7, 0x7c, 0x39, 0xaf, 0x9b, 0xe0, 0x76, 0x6b, 0xe0, 0x39, 0xcb, 0xe1, 0xe9, 0xfa, 0x3f,
        0xfa, 0xa0, 0xb1, 0x78, 0x03, 0xc3, 0x23, 0xcf, 0xda, 0xf0, 0x20, 0x7c, 0x58, 0xd0, 0x5b, 0xff, 0xfd, 0xf9,
        0xd9, 0xcc, 0x02, 0x33, 0x50, 0x43, 0xe8, 0x35, 0x85, 0xfd, 0xec, 0xe9, 0x15, 0x79, 0x27, 0x3f, 0x74, 0x8c,
        0xbd, 0x5e, 0x86, 0xe5, 0x2c, 0x37, 0xf5, 0x4a, 0xa7, 0xf1, 0x6f, 0x8b, 0x5f, 0x79, 0x86, 0xe3, 0xca, 0xf6,
        0x4a, 0x8a, 0xf8, 0x35, 0x3c, 0x2d, 0xaa, 0x88, 0x0a, 0x31, 0x0d, 0xf3, 0xe8, 0x27, 0xd9, 0xe6, 0xc3, 0x88,
        0xf9, 0x7b, 0xb7, 0x61, 0x8c, 0xd9, 0x26, 0xaf, 0x76, 0x4a, 0x79, 0x30, 0xf8, 0x8c, 0x1b, 0xb8, 0x9d, 0x98,
        0x4f, 0x22, 0xe7, 0x2a, 0x0f, 0xaf, 0x23, 0x3c, 0xad, 0x33, 0xf5, 0x7d, 0x58, 0x38, 0xc2, 0xc3, 0xf7, 0x83,
        0x8c, 0x49, 0x93, 0x0d, 0xc4, 0xc8, 0xbf, 0x8a, 0x05, 0xa0, 0xe6, 0x72, 0x96, 0x82, 0x7f, 0x06, 0x12, 0x67,
        0x33, 0x6f, 0xb7, 0x3b, 0x9c, 0x8a, 0x67, 0x99, 0x12, 0xe8, 0x52, 0xb7, 0xe3, 0x47, 0x4d, 0x35, 0x50, 0xad,
        0x67, 0x31, 0xa9, 0xb6, 0x9b, 0xfe, 0x21, 0x7d, 0x5e, 0xeb, 0x70, 0xa0, 0x8e, 0x9f, 0x87, 0x70, 0x7e, 0xc7,
        0xe8, 0xbd, 0x5a, 0x4a, 0x67, 0x1c, 0xfb, 0xd3, 0x81, 0x3b, 0xf6, 0xd2, 0x2b, 0xaa, 0x4c, 0xde, 0xf3, 0x34,
        0x33, 0x5a, 0x6d, 0x78, 0x5d, 0xc2, 0x13, 0xe9, 0xb8, 0x0b, 0xea, 0x54, 0xc3, 0x50, 0x10, 0x3c, 0x25, 0xff,
        0x06, 0xb1, 0x74, 0x9a, 0x3e, 0x99, 0x98, 0x53, 0x27, 0xd8, 0x90, 0x06, 0x94, 0x02, 0x82, 0xf6, 0x7c, 0x1e,
        0x01, 0xea, 0x6d, 0x5d, 0xf0, 0x3c, 0x4d, 0xa1, 0x55, 0xfa, 0x22, 0x82, 0xd4, 0x06, 0x7d, 0xe6, 0xf4, 0xf4,
        0x40, 0x44, 0xfa, 0x76, 0x5b, 0x68, 0x96, 0x88, 0x7a, 0xea, 0x55, 0x88, 0xcc, 0xb0, 0x4c, 0x64, 0xc6, 0x45,
        0xda, 0x41, 0xed, 0x14, 0x33, 0xd9, 0x74, 0x99, 0x14, 0x1b, 0x6c, 0x54, 0x28, 0x16, 0x01, 0x49, 0x2c, 0x82,
        0x0e, 0xe7, 0x07, 0xcc, 0x1b, 0x84, 0xd7, 0xbe, 0x58, 0xc2, 0x3a, 0x59, 0xe1, 0x5c, 0x2c, 0x62, 0xa6, 0x2d,
        0x9b, 0x48, 0x26, 0xf6, 0x34, 0x04, 0xfd, 0xfb, 0xd3, 0x34, 0x6f, 0xcd, 0xbe, 0x7b, 0x90, 0xfd, 0xf2, 0xf1,
        0x9d, 0x06, 0x69, 0xe4, 0x10, 0x0a, 0x13, 0xe1, 0xec, 0x0c, 0xb2, 0x36, 0xce, 0x64, 0x99, 0xa2, 0xc5, 0xc3,
        0x55, 0x3d, 0x1f, 0xfb, 0xcb, 0x34, 0xcf, 0x4c, 0xcc, 0xa0, 0xa0, 0xa2, 0xb0, 0x25, 0x1b, 0xc1, 0xb7, 0x46,
        0x76, 0x47, 0xcc, 0xdd, 0xb4, 0x5f, 0x18, 0x3f, 0xf6, 0x0a, 0xe7, 0xed, 0x72, 0x1d, 0x48, 0x6e, 0x60, 0x8f,
        0x74, 0x90, 0xc6, 0xbf, 0x4d, 0x8f, 0x43, 0x88, 0xaa, 0x64, 0x85, 0x33, 0x75, 0x05, 0xcf, 0x76, 0x19, 0x48,
        0xaa, 0x4a, 0xbd, 0x05, 0x6e, 0xc2, 0xfc, 0x75, 0x8f, 0xa9, 0x06, 0x64, 0xf3, 0xe4, 0x8c, 0x0c, 0xc2, 0xd5,
        0xf6, 0x10, 0x39, 0xc1, 0x44, 0x8b, 0xbb, 0xe0, 0xe0, 0xb4, 0xd7, 0x3b, 0xbb, 0xf2, 0x99, 0xc8, 0x1d, 0xa2,
        0xbe, 0xb7, 0xb9, 0x72, 0x47, 0xf0, 0x5d, 0x51, 0x7b, 0x99, 0xf7, 0x17, 0x98, 0xc0, 0x7a, 0x04, 0xc2, 0xf1,
        0x66, 0x60, 0xc6, 0xab, 0x2d, 0xe3, 0xf1, 0x01, 0xac, 0x85, 0x12, 0xdd, 0x41, 0x67, 0xfe, 0xfb, 0xfb, 0xbb,
        0x1f, 0x37, 0x1f, 0xde, 0xff, 0xfd, 0xbb, 0xcd, 0x6f, 0xdf, 0x7d, 0xff, 0xef, 0x3f, 0xbe, 0xff, 0xfd, 0x97,
        0xdf, 0x34, 0x69, 0x66, 0xe7, 0xa4, 0xd4, 0xae, 0x23, 0x69, 0xb7, 0xcd, 0xa1, 0x57, 0x19, 0x97, 0x52, 0x25,
        0xfd, 0x88, 0xbd, 0x0c, 0xb7, 0xd5, 0xb0, 0x7f, 0x92, 0x75, 0x39, 0x41, 0x48, 0x5e, 0xd5, 0x1e, 0x81, 0xcc,
        0x16, 0x03, 0x67, 0xb6, 0xf9, 0x4d, 0x51, 0xc1, 0x16, 0x7e, 0x95, 0x3c, 0x8b, 0x63, 0x12, 0xa9, 0xd6, 0x82,
        0x7b, 0xbe, 0xda, 0x38, 0xdb, 0xe1, 0x3f, 0xbe, 0x9f, 0x0e, 0x7a, 0x90, 0xa4, 0x70, 0xa0, 0x3e, 0x19, 0x18,
        0xa6, 0x85, 0xe3, 0x3e, 0x6f, 0x77, 0x9f, 0x5b, 0x97, 0x50, 0x9f, 0xdc, 0xbc, 0xcc, 0x52, 0x14, 0xd0, 0x9e,
        0x5e, 0xbd, 0xb9, 0xd3, 0x3c, 0x9e, 0xbf, 0x8f, 0x96, 0xd8, 0x96, 0xa5, 0xc0, 0x5e, 0x8b, 0x6d, 0x9e, 0x17,
        0xf1, 0x5d, 0xd8, 0x76, 0x70, 0xb2, 0x24, 0x03, 0x13, 0xcc, 0xae, 0xfb, 0x63, 0xc5, 0x14, 0xaa, 0xe6, 0x98,
        0xf1, 0x94, 0xa5, 0xa0, 0x5f, 0x8b, 0x4d, 0x5a, 0x06, 0x1b, 0xb1, 0xe5, 0xe6, 0x83, 0x89, 0xf2, 0x4d, 0xff,
        0x6c, 0x96, 0xaa, 0xa8, 0xcc, 0xf7, 0x47, 0xdb, 0xee, 0x29, 0xcc, 0xd7, 0x42, 0x63, 0x68, 0x8a, 0x2e, 0x10,
        0x8a, 0x8d, 0x5d, 0x96, 0xbb, 0x95, 0x82, 0xfb, 0x3c, 0x9e, 0xe1, 0x1d, 0x7f, 0x1a, 0x4f, 0x90, 0x1e, 0x3d,
        0x12, 0x12, 0xa0, 0x4e, 0xd0, 0xb9, 0x67, 0xd6, 0xaf, 0x4b, 0x5b, 0xc3, 0x6f, 0x1c, 0x1f, 0x70, 0x71, 0x56,
        0x64, 0x8b, 0x94, 0x4d, 0x1d, 0x42, 0xd1, 0xe3, 0x4c, 0x67, 0x5b, 0x0a, 0x6c, 0x3d, 0x7e, 0x75, 0x9c, 0x2c,
        0x9a, 0x93, 0xa5, 0xf0, 0x5f, 0x0b, 0xb7, 0x6e, 0x1e, 0xb4, 0xbf, 0x96, 0x89, 0x39, 0x50, 0xa6, 0x54, 0x28,
        0x2c, 0x39, 0x7c, 0xcf, 0xfd, 0x79, 0x38, 0xbe, 0xdb, 0xfc, 0x21, 0x1b, 0x39, 0x29, 0x3b, 0x70, 0xe1, 0xc1,
        0x0a, 0x36, 0x71, 0xee, 0xe0, 0xce, 0xc7, 0xc4, 0x6a, 0x22, 0x38, 0x23, 0xfa, 0xaa, 0xce, 0x4e, 0x67, 0x3f,
        0xd4, 0x2a, 0x67, 0x5f, 0x31, 0xed, 0xbb, 0x36, 0x4e, 0xb7, 0xd8, 0xe8, 0x39, 0xf5, 0x2c, 0x2c, 0x9b, 0x3e,
        0xec, 0x2c, 0x89, 0xbf, 0xe5, 0xab, 0xb1, 0x37, 0xf2, 0x31, 0xd8, 0x26, 0x98, 0x46, 0xc4, 0xae, 0x8c, 0xc2,
        0x39, 0xb1, 0x12, 0x91, 0x1b, 0x92, 0x3a, 0x3a, 0x3d, 0xf1, 0xfd, 0x6b, 0x2d, 0xca, 0x23, 0xc7, 0x1f, 0x55,
        0x96, 0xd1, 0x26, 0x3d, 0x05, 0xea, 0xec, 0xf1, 0x26, 0xd2, 0xe7, 0xdb, 0x1d, 0x54, 0xa2, 0x7f, 0x84, 0x7c,
        0x06, 0x26, 0x21, 0x68, 0x10, 0x81, 0xe7, 0xbb, 0x4b, 0x8b, 0x14, 0xb3, 0x33, 0xb2, 0xd5, 0x38, 0x4a, 0x75,
        0x52, 0x7e, 0xbf, 0xa6, 0xfd, 0xc2, 0xf4, 0x76, 0x39, 0x44, 0xed, 0xb4, 0x03, 0x9f, 0x9c, 0x5f, 0xe1, 0xbf,
        0x5d, 0xf2, 0x05, 0x53, 0x78, 0xaf, 0x63, 0x28, 0x22, 0x30, 0x45, 0x87, 0x1c, 0xb1, 0x7a, 0x97, 0x6c, 0x3e,
        0xcc, 0x08, 0xb9, 0xfc, 0xc1, 0x24, 0x4e, 0x8a, 0xea, 0x75, 0x0c, 0x2c, 0x04, 0x36, 0xe8, 0xe8, 0xee, 0x07,
        0xb3, 0xfd, 0xd4, 0xbf, 0xde, 0x53, 0x8b, 0x3d, 0x23, 0x73, 0x08, 0x06, 0x22, 0xbc, 0x54, 0xe7, 0x79, 0x44,
        0x58, 0x93, 0xf1, 0x0e, 0x31, 0x49, 0x9e, 0x2e, 0x43, 0x12, 0xc8, 0x29, 0xce, 0xd7, 0x31, 0xe7, 0x60, 0x35,
        0xd7, 0x10, 0x91, 0xf0, 0x62, 0xb9, 0xa9, 0x45, 0x59, 0x24, 0x5a, 0xec, 0xbd, 0x7c, 0xd2, 0x78, 0xea, 0x8f,
        0x86, 0xd0, 0x3a, 0x02, 0x08, 0xe2, 0xd7, 0x88, 0x4c, 0x2d, 0xa0, 0x56, 0xd1, 0x66, 0x1f, 0x3e, 0x8d, 0xaa,
        0xc2, 0x5f, 0xa7, 0x8b, 0x47, 0x6d, 0x5c, 0x7c, 0x29, 0x54, 0xe7, 0x50, 0xa0, 0x74, 0xb1, 0x98, 0xed, 0xb0,
        0x92, 0x35, 0xfe, 0x0c, 0xa1, 0xd3, 0x6f, 0xfe, 0xde, 0x8f, 0xc7, 0xcd, 0x87, 0xfe, 0x61, 0xd8, 0xfc, 0x36,
        0x3c, 0xde, 0x8e, 0xc8, 0x1b, 0x51, 0xb3, 0xc2, 0x82, 0x7a, 0x46, 0xb0, 0x78, 0xb9, 0xf0, 0x43, 0xae, 0x4a,
        0xd3, 0x4a, 0xa2, 0xee, 0xa7, 0xd3, 0xa9, 0x67, 0x2e, 0x20, 0xa3, 0x21, 0x22, 0x1b, 0x8e, 0x72, 0x86, 0x1f,
        0x6e, 0x49, 0x3e, 0x58, 0xa8, 0x2f, 0x91, 0xaf, 0x46, 0x24, 0x4b, 0x05, 0x0d, 0xf6, 0x9b, 0x15, 0xd9, 0xd6,
        0x32, 0xe8, 0x8c, 0x3c, 0x77, 0x72, 0x3c, 0x5d, 0x46, 0xf2, 0x0a, 0x79, 0x39, 0x26, 0x5e, 0xf8, 0x55, 0xb2,
        0xbf, 0xc4, 0x18, 0x3d, 0x1f, 0xc6, 0xfe, 0xf2, 0x2a, 0x4a, 0x39, 0xe7, 0x8b, 0x3c, 0x1e, 0x82, 0xd2, 0x2a,
        0xee, 0x2c, 0xc6, 0x97, 0x50, 0xba, 0x08, 0xdb, 0xa8, 0xf8, 0x7c, 0xbf, 0xb9, 0x9f, 0x64, 0xa1, 0x90, 0x9f,
        0xd2, 0xdf, 0xd3, 0xfd, 0x20, 0xfa, 0xa1, 0x08, 0x2f, 0xc6, 0x7f, 0x2c, 0x87, 0x6a, 0x65, 0x04, 0x00, 0xb6,
        0x74, 0x58, 0xa0, 0x34, 0x01, 0x36, 0xdb, 0x6d, 0x79, 0xdc, 0x8b, 0xfc, 0xdc, 0xf7, 0xb3, 0x9a, 0x49, 0x93,
        0xb3, 0xbe, 0xcd, 0x1c, 0x23, 0x5a, 0xaa, 0x97, 0xd8, 0x38, 0xab, 0x04, 0x48, 0xfa, 0x15, 0x60, 0xae, 0x89,
        0x02, 0x1a, 0x75, 0x7f, 0x19, 0xe7, 0xa7, 0xe4, 0x70, 0xc3, 0x69, 0x7d, 0x16, 0x6b, 0xf4, 0x5e, 0x95, 0x8f,
        0xc5, 0xbb, 0x40, 0x26, 0x4e, 0x06, 0x94, 0x85, 0x0b, 0x13, 0x52, 0x5c, 0x18, 0x68, 0xff, 0x38, 0x9b, 0xef,
        0x87, 0x87, 0x49, 0x2d, 0xba, 0xcb, 0x28, 0x7a, 0xff, 0xc1, 0xcc, 0xc7, 0x15, 0xdb, 0xa9, 0xc0, 0xb1, 0x60,
        0xa1, 0xd1, 0x96, 0x91, 0x6b, 0xe4, 0x18, 0x6d, 0x11, 0x63, 0xba, 0xd3, 0x45, 0x9a, 0x4f, 0xfd, 0xe5, 0xba,
        0x19, 0xce, 0x74, 0xd4, 0x9b, 0xec, 0x10, 0x91, 0xaa, 0x98, 0xb6, 0xe6, 0xad, 0x83, 0x81, 0x76, 0x35, 0xb2,
        0x46, 0x34, 0x48, 0x1e, 0xc1, 0xdf, 0xa8, 0x0b, 0xc2, 0xbc, 0xdb, 0x62, 0xe8, 0xc9, 0xb1, 0x36, 0x3e, 0x0e,
        0x67, 0x4d, 0xf2, 0xa1, 0xdb, 0xdb, 0x14, 0x9f, 0x90, 0x85, 0x20, 0xa7, 0x84, 0x45, 0x37, 0x33, 0x0b, 0x31,
        0x1a, 0x66, 0xb6, 0x1a, 0x71, 0xb7, 0xdd, 0x65, 0x59, 0xca, 0xeb, 0xde, 0xcc, 0xcf, 0x48, 0xb6, 0x43, 0x9a,
        0xa8, 0xce, 0x28, 0x3e, 0x7d, 0x79, 0xdf, 0x9e, 0x2e, 0xd1, 0xac, 0xf1, 0x6d, 0x43, 0xea, 0x22, 0xc0, 0x89,
        0xd9, 0x52, 0xe1, 0x78, 0x15, 0x95, 0x5f, 0x34, 0x39, 0x18, 0x91, 0xc3, 0x35, 0xcc, 0x24, 0x3d, 0x78, 0x9e,
        0x79, 0x95, 0x35, 0xbe, 0x5f, 0x48, 0x17, 0x57, 0x3c, 0xcf, 0xe0, 0xb7, 0x50, 0xf5, 0x19, 0x62, 0xf6, 0xe9,
        0x66, 0x7e, 0xbb, 0x90, 0xaa, 0x12, 0x83, 0xc8, 0x59, 0xe3, 0x9b, 0x87, 0xa4, 0x79, 0xc4, 0x2a, 0xe0, 0x77,
        0xb0, 0x30, 0x2a, 0x12, 0xd6, 0x74, 0x1d, 0x1b, 0xdf, 0x17, 0x7c, 0x60, 0xf5, 0x76, 0x39, 0xa8, 0x60, 0xc1,
        0x7b, 0xd2, 0xc2, 0x30, 0xe8, 0xcb, 0xc7, 0x59, 0x79, 0xb5, 0x71, 0xe6, 0x17, 0x4b, 0xa6, 0xc8, 0xe3, 0xdb,
        0xc4, 0x92, 0xa1, 0xf9, 0x77, 0xa7, 0x79, 0x54, 0x8f, 0x8f, 0xca, 0x8e, 0x66, 0x9c, 0x27, 0x3b, 0x49, 0xce,
        0xda, 0xa7, 0x57, 0xc3, 0x72, 0xbe, 0x2f, 0x72, 0x31, 0x82, 0x56, 0x58, 0xd5, 0xb6, 0xc0, 0xc1, 0x41, 0x5f,
        0x3b, 0x2b, 0x0e, 0x56, 0x39, 0x91, 0x6f, 0xdf, 0x3c, 0xc8, 0xa9, 0x04, 0xf7, 0x03, 0x23, 0xbb, 0xfd, 0x62,
        0x19, 0x35, 0xce, 0xf0, 0xd0, 0x90, 0xba, 0xf8, 0x6d, 0xa2, 0xf3, 0x74, 0xf5, 0x2a, 0x3e, 0x0e, 0xa7, 0xfa,
        0xe5, 0xd5, 0xdd, 0x7b, 0x88, 0x43, 0xea, 0x60, 0x45, 0xf0, 0x33, 0x1f, 0x42, 0x21, 0x9d, 0xed, 0x89, 0x50,
        0x05, 0x48, 0xd1, 0x86, 0x34, 0xee, 0x4c, 0xab, 0x66, 0x89, 0x6d, 0xd1, 0xa0, 0x7c, 0xea, 0x4f, 0xf7, 0xa2,
        0xe0, 0x18, 0x2b, 0x36, 0xce, 0xef, 0x24, 0x6a, 0x23, 0x0a, 0x0c, 0xd7, 0x36, 0x79, 0xa6, 0x4e, 0x94, 0xfb,
        0x30, 0xd6, 0x66, 0xf5, 0x33, 0x24, 0x4b, 0xa9, 0x71, 0x66, 0x96, 0x33, 0xa8, 0x5d, 0x2d, 0x74, 0x05, 0xee,
        0x96, 0xd9, 0xfc, 0x45, 0x8c, 0xbc, 0x61, 0xde, 0x4f, 0x97, 0xab, 0xfa, 0x53, 0x46, 0x7a, 0x94, 0x64, 0x44,
        0xcf, 0xc8, 0x76, 0x4e, 0x39, 0xdc, 0xad, 0xb3, 0x31, 0xe9, 0xe2, 0x1c, 0x31, 0x86, 0x2b, 0xdf, 0xfb, 0x9d,
        0x68, 0x40, 0xe7, 0x17, 0xb5, 0x9d, 0x52, 0x8c, 0x60, 0x0f, 0xc5, 0x08, 0xba, 0x80, 0xcc, 0xdf, 0x16, 0xe1,
        0x42, 0x43, 0x73, 0x5e, 0x26, 0xf1, 0x22, 0x65, 0x35, 0x7b, 0x17, 0x5a, 0xc6, 0x0f, 0x9e, 0xe4, 0xaa, 0x39,
        0x4e, 0x69, 0x9a, 0x87, 0xf3, 0x80, 0xa4, 0x6c, 0x9a, 0x10, 0xfd, 0xe6, 0x9b, 0xa7, 0xcb, 0x38, 0x5f, 0x4f,
        0x22, 0x3e, 0x10, 0x41, 0xd2, 0x4d, 0x0e, 0x7c, 0xe3, 0x6f, 0x83, 0xab, 0x22, 0x7e, 0x89, 0x14, 0x08, 0x5b,
        0xd1, 0xd3, 0x04, 0xfb, 0x94, 0x13, 0x76, 0xf9, 0x02, 0x79, 0x32, 0x08, 0xe8, 0xa9, 0x1a, 0xfa, 0xce, 0x52,
        0x54, 0xfb, 0xcb, 0x99, 0xa9, 0x67, 0x06, 0x5c, 0x38, 0x70, 0x19, 0x7d, 0x0e, 0x99, 0xe6, 0xec, 0xe6, 0x74,
        0xab, 0xfe, 0xd8, 0x9f, 0x1f, 0x6f, 0xa2, 0x6d, 0x6e, 0x37, 0xcf, 0x22, 0x8b, 0x66, 0x75, 0x2c, 0xfd, 0x7a,
        0x19, 0x3f, 0xf5, 0xfb, 0xd7, 0xcd, 0xa7, 0x71, 0x30, 0x1d, 0xc8, 0x62, 0x90, 0x20, 0x6d, 0xa3, 0xc5, 0x94,
        0x31, 0x4d, 0xb7, 0x83, 0x47, 0xfe, 0x03, 0x32, 0xbe, 0xe5, 0x4c, 0x85, 0xf0, 0xbf, 0x5d, 0xc7, 0xe3, 0x78,
        0x95, 0x13, 0x70, 0xbf, 0xc7, 0x2a, 0x33, 0xdf, 0xd0, 0xce, 0x42, 0x8b, 0x3e, 0x82, 0x10, 0x9b, 0x22, 0x8e,
        0x0a, 0x31, 0xe0, 0x42, 0xa3, 0x8f, 0x17, 0xd8, 0xd6, 0x67, 0xd9, 0x4c, 0x77, 0x8b, 0xe3, 0x10, 0xf6, 0x18,
        0xb5, 0x29, 0x03, 0xaa, 0x1d, 0x08, 0x74, 0x71, 0xde, 0xc4, 0x72, 0xc9, 0x0b, 0x2a, 0x1c, 0x62, 0x15, 0xcf,
        0x96, 0xd1, 0x87, 0xc2, 0x94, 0x67, 0xfa, 0x61, 0x8d, 0xbe, 0x71, 0x7a, 0x3c, 0x5e, 0x47, 0x7a, 0x94, 0xa3,
        0xa4, 0x9d, 0x7e, 0x3f, 0x20, 0xce, 0x02, 0xae, 0x38, 0x6b, 0x14, 0x08, 0x36, 0xff, 0x7d, 0x9a, 0xe3, 0xd6,
        0x41, 0xda, 0xe8, 0xa8, 0x90, 0x1f, 0x44, 0xf2, 0xe5, 0x30, 0x34, 0xe9, 0xa8, 0x50, 0x0f, 0xcc, 0xe9, 0xb4,
        0xe9, 0x2f, 0x97, 0x1e, 0xc7, 0x7a, 0x7f, 0xf9, 0xb8, 0x85, 0x72, 0x86, 0x1c, 0x62, 0x99, 0xfe, 0xd9, 0xf3,
        0x68, 0x33, 0x8b, 0x45, 0x1a, 0xc2, 0xe2, 0x7a, 0xc0, 0x0f, 0xa2, 0x7f, 0xf2, 0x14, 0x92, 0xa5, 0x3e, 0xcb,
        0xd1, 0x7b, 0xeb, 0x2f, 0x2a, 0x24, 0x06, 0xe6, 0x57, 0xc3, 0x29, 0x63, 0xf5, 0x03, 0x3b, 0xc7, 0xa8, 0xb7,
        0xbb, 0x32, 0x7e, 0x5b, 0x2e, 0x67, 0x7a, 0xc9, 0xd4, 0xd7, 0x07, 0xe6, 0xd0, 0xf5, 0x74, 0xa1, 0xfa, 0xdb,
        0x2d, 0xb8, 0x98, 0x1e, 0x6c, 0x22, 0xa5, 0xac, 0x7c, 0x59, 0x2f, 0x9e, 0x1c, 0x38, 0xe2, 0x71, 0x84, 0x9c,
        0x19, 0x2b, 0x10, 0xe3, 0xf8, 0x45, 0x3d, 0xa4, 0x9d, 0x33, 0x34, 0x29, 0xe2, 0x0a, 0x8b, 0x08, 0xe5, 0x7e,
        0x32, 0x5f, 0x12, 0x39, 0x7a, 0xc3, 0xf3, 0x3c, 0xa5, 0xee, 0xbc, 0xa4, 0x6c, 0x98, 0xac, 0x73, 0xf6, 0x25,
        0x55, 0x11, 0x61, 0x70, 0x10, 0x68, 0x9e, 0xdd, 0xfc, 0xc4, 0xf5, 0x38, 0xc2, 0x43, 0x75, 0x9b, 0x7d, 0xe3,
        0x59, 0x16, 0xb1, 0xfc, 0xd9, 0x7d, 0x54, 0x9d, 0xb3, 0x30, 0x62, 0xc5, 0x6d, 0x9c, 0x13, 0x91, 0xc6, 0xbb,
        0xb6, 0x5e, 0x22, 0xb1, 0x31, 0x2c, 0xb2, 0xe4, 0x65, 0x67, 0x9d, 0xb3, 0x2e, 0x09, 0x56, 0x1f, 0xd6, 0xc0,
        0x42, 0x79, 0xfb, 0xe6, 0x37, 0x8d, 0x71, 0x43, 0xfd, 0x3f, 0x88, 0x65, 0x81, 0xf0, 0x1e, 0x13, 0x9e, 0xf9,
        0x6d, 0xfb, 0xe3, 0x78, 0xba, 0x37, 0x28, 0x67, 0x5e, 0x50, 0x76, 0x91, 0x6f, 0xca, 0xdd, 0xb6, 0x84, 0xbb,
        0xf0, 0x5f, 0x87, 0x59, 0x3e, 0x48, 0x85, 0x86, 0x16, 0x85, 0xdd, 0x0f, 0xfb, 0xfe, 0x26, 0x5a, 0x17, 0xcd,
        0xb0, 0x23, 0xb6, 0xc1, 0x0f, 0x43, 0x0a, 0x8a, 0x5b, 0x66, 0x30, 0xa0, 0x9d, 0xaf, 0x89, 0x14, 0x57, 0xb0,
        0xc4, 0x8e, 0x93, 0x79, 0xfb, 0xf5, 0x78, 0x9b, 0xb7, 0x96, 0x6e, 0x20, 0x47, 0x01, 0xe2, 0x52, 0x8a, 0x07,
        0x72, 0xe7, 0x68, 0x56, 0x89, 0x94, 0x81, 0x5c, 0xec, 0xc2, 0xa6, 0x60, 0x1c, 0x6f, 0xc9, 0x7c, 0x3e, 0xb0,
        0x86, 0x62, 0xbc, 0x47, 0x82, 0x80, 0xb9, 0xf0, 0x42, 0x58, 0xab, 0x73, 0x5e, 0x26, 0x6d, 0x94, 0x9d, 0x28,
        0xff, 0x68, 0x68, 0x53, 0x8a, 0xbc, 0x78, 0x42, 0xce, 0xdf, 0xc8, 0x34, 0x05, 0x58, 0x2b, 0xf8, 0x27, 0xed,
        0x61, 0xa2, 0xe4, 0x3b, 0xe7, 0xe6, 0x8a, 0x0e, 0x95, 0x88, 0xd2, 0x6c, 0x19, 0x3e, 0xfa, 0x7e, 0xda, 0x78,
        0x42, 0xd3, 0xc5, 0x6d, 0xda, 0x7c, 0xe7, 0xdc, 0x8c, 0x07, 0xb3, 0xb8, 0x97, 0x44, 0x98, 0xe7, 0xb4, 0xbb,
        0x2d, 0xbf, 0x44, 0x38, 0x88, 0xbe, 0x44, 0x8a, 0xef, 0x97, 0xc9, 0xe8, 0x9d, 0x95, 0xf9, 0xf8, 0xb2, 0xe2,
        0x39, 0x0c, 0x8b, 0x06, 0xfb, 0x88, 0xc2, 0xea, 0x99, 0x4e, 0xd1, 0xfe, 0x72, 0x62, 0x42, 0x40, 0x72, 0x91,
        0xcd, 0x1f, 0x47, 0x33, 0xd9, 0x72, 0x8b, 0x42, 0x26, 0xba, 0x26, 0x02, 0xe5, 0x72, 0x46, 0x31, 0x66, 0xff,
        0x6a, 0x0e, 0x45, 0xa6, 0x70, 0x5e, 0xd4, 0xcf, 0xf4, 0x37, 0x25, 0x2f, 0x9d, 0x1c, 0x16, 0x5f, 0x1d, 0xc9,
        0x3b, 0x3d, 0x83, 0xbe, 0x57, 0x7d, 0x4c, 0x2d, 0x18, 0xe4, 0xeb, 0xc3, 0xda, 0xc7, 0xd8, 0x50, 0xc7, 0x33,
        0xdb, 0x28, 0x2a, 0x87, 0xe9, 0x56, 0x47, 0x4d, 0x8e, 0x84, 0x1f, 0x96, 0x49, 0x88, 0xd6, 0xf9, 0x91, 0x09,
        0xdd, 0x5f, 0xa9, 0x33, 0x91, 0x87, 0xa2, 0x67, 0x0c, 0xe5, 0x16, 0x5d, 0x04, 0x81, 0x6c, 0x81, 0x25, 0x57,
        0x09, 0x3f, 0xd4, 0xc2, 0x6d, 0x2d, 0x2a, 0x57, 0x68, 0x59, 0x5a, 0xb1, 0x8a, 0x85, 0x0e, 0xf1, 0xf7, 0x46,
        0xb4, 0x80, 0x48, 0x20, 0xe2, 0x8d, 0x65, 0x01, 0xbf, 0x9c, 0xe5, 0xf4, 0x91, 0x29, 0xdf, 0x2a, 0xdd, 0x36,
        0x55, 0x00, 0xe6, 0x16, 0x17, 0x94, 0x47, 0x8b, 0x3a, 0x56, 0x74, 0x65, 0xcc, 0xc4, 0xcf, 0x33, 0x33, 0xe0,
        0xe9, 0xb6, 0xfd, 0xdb, 0xc6, 0x84, 0xa2, 0xb0, 0xc1, 0x79, 0x10, 0xde, 0x14, 0xa5, 0x69, 0x30, 0x98, 0x2e,
        0xc1, 0x88, 0x66, 0xb2, 0x5b, 0x12, 0xf2, 0xf1, 0x83, 0x58, 0x73, 0x88, 0x6b, 0x00, 0xe6, 0x30, 0xe9, 0x5c,
        0x5b, 0xc0, 0x2f, 0x2b, 0x70, 0x6c, 0xd6, 0x4b, 0x64, 0x0e, 0x3f, 0x54, 0xea, 0xb0, 0x45, 0x28, 0xff, 0x4b,
        0xaa, 0xd1, 0x2f, 0xc8, 0xa1, 0xbc, 0xf4, 0xcf, 0x5c, 0x72, 0xec, 0x7d, 0x85, 0xc8, 0x1c, 0x02, 0x14, 0x2b,
        0x08, 0x99, 0x85, 0xd2, 0xea, 0x41, 0xee, 0x44, 0xa3, 0xba, 0x7a, 0x42, 0x94, 0xaa, 0x92, 0xbd, 0x18, 0x3f,
        0x97, 0x83, 0xa8, 0xeb, 0xe3, 0xd9, 0x86, 0x93, 0x3b, 0x16, 0x48, 0xdb, 0x88, 0xd5, 0x69, 0x09, 0xc7, 0x1d,
        0xce, 0x28, 0x72, 0x8d, 0x26, 0xd8, 0xcb, 0xc8, 0x18, 0xbd, 0x15, 0x99, 0x83, 0x20, 0x19, 0x7d, 0x07, 0x50,
        0xd3, 0xcf, 0x43, 0xaa, 0x15, 0x84, 0x23, 0xd7, 0x78, 0xc2, 0x22, 0x82, 0x09, 0xae, 0x08, 0xf8, 0xe0, 0x09,
        0x78, 0x85, 0x7e, 0x59, 0x8a, 0x0c, 0xff, 0xeb, 0x26, 0xd6, 0x52, 0x52, 0x46, 0x73, 0x8b, 0x00, 0xda, 0xa3,
        0x8b, 0xe7, 0x37, 0x63, 0x0d, 0x40, 0x0b, 0x97, 0xcf, 0x7b, 0x4f, 0xd3, 0x4b, 0x59, 0x80, 0x18, 0x94, 0xf2,
        0xf9, 0x7c, 0x96, 0x89, 0x83, 0x17, 0x0d, 0x93, 0x97, 0xb6, 0x9c, 0x45, 0x04, 0x13, 0xc4, 0x6a, 0x3c, 0xc2,
        0xfb, 0x55, 0xf9, 0x79, 0xac, 0x19, 0x36, 0xac, 0x8a, 0x0c, 0x38, 0x05, 0x0d, 0xa4, 0x76, 0x10, 0xd0, 0xd4,
        0x11, 0xa4, 0xd3, 0x9a, 0x1e, 0x78, 0x85, 0x6f, 0xf7, 0xd7, 0x4d, 0x28, 0x84, 0xd4, 0x0c, 0x00, 0xb1, 0x12,
        0xe5, 0x80, 0xba, 0xe9, 0x56, 0x7a, 0x80, 0x36, 0xc3, 0x85, 0x99, 0x9f, 0x7b, 0xcb, 0x92, 0xc8, 0x2d, 0x04,
        0x98, 0xc0, 0x22, 0x3a, 0x8e, 0x6c, 0x7a, 0xaf, 0x87, 0xa4, 0x37, 0x1c, 0x26, 0x3a, 0x4c, 0x74, 0xb8, 0xff,
        0x75, 0x1b, 0xf7, 0x1f, 0xad, 0xa4, 0xae, 0x4d, 0x20, 0xa0, 0x59, 0x1c, 0xd7, 0xf8, 0x21, 0xdb, 0x56, 0x10,
        0xd3, 0x5f, 0xaa, 0xb8, 0xff, 0xa6, 0x7f, 0x86, 0x2f, 0x51, 0x86, 0x79, 0x1c, 0xf8, 0xc5, 0xfb, 0xcb, 0x4d,
        0x64, 0xf7, 0xc1, 0x06, 0xd3, 0x39, 0x0e, 0xc8, 0x22, 0xaf, 0x89, 0xb1, 0xc3, 0x5c, 0x09, 0x2d, 0x00, 0x49,
        0x6e, 0xf0, 0xe4, 0xef, 0xba, 0xdc, 0xce, 0x3c, 0xc2, 0x2f, 0xfd, 0xf5, 0x29, 0x2d, 0x68, 0xee, 0xbc, 0x4f,
        0xda, 0x26, 0x82, 0x89, 0x22, 0xd1, 0xb1, 0x26, 0x60, 0x2b, 0xb6, 0x8e, 0xb2, 0x1b, 0x07, 0x92, 0xcc, 0x60,
        0x51, 0xa3, 0xf7, 0xc7, 0x41, 0x61, 0x9c, 0xff, 0x49, 0xd5, 0x45, 0x18, 0x91, 0xa3, 0x75, 0xed, 0xf9, 0xa1,
        0x4c, 0xdb, 0xc0, 0x87, 0x31, 0xa5, 0xf3, 0xed, 0x9b, 0xe7, 0xe9, 0x2a, 0xf2, 0x6a, 0xbc, 0x9d, 0x74, 0xd2,
        0x19, 0xd5, 0xb9, 0x3f, 0x26, 0x9d, 0x2f, 0xcf, 0x7d, 0x33, 0x10, 0x27, 0x6e, 0x06, 0x28, 0x09, 0xbb, 0xcc,
        0xe4, 0xf1, 0x7c, 0x63, 0x4c, 0xf8, 0x2c, 0x3c, 0x2f, 0x67, 0xdb, 0xc3, 0x78, 0xbc, 0xc2, 0x01, 0x86, 0x45,
        0x9d, 0x45, 0xe5, 0xba, 0xed, 0x9f, 0x92, 0xbe, 0xa1, 0x6b, 0x91, 0xfb, 0x1e, 0x20, 0x4a, 0xe4, 0x39, 0x64,
        0x4f, 0x23, 0x5a, 0x71, 0xb5, 0x7a, 0xcb, 0x8b, 0xd6, 0xf8, 0xc9, 0xc0, 0xa7, 0x67, 0xdb, 0x41, 0xb9, 0xef,
        0x02, 0x3e, 0xbc, 0x1a, 0x54, 0xb9, 0xad, 0x20, 0x32, 0xff, 0x91, 0xca, 0x43, 0x35, 0xff, 0x70, 0xa9, 0x90,
        0xb4, 0x5a, 0xe9, 0x83, 0xa5, 0x35, 0xe6, 0xb9, 0x73, 0x7f, 0xb1, 0xf6, 0x1a, 0xb0, 0x42, 0xa4, 0x82, 0x28,
        0x43, 0xa8, 0x14, 0xab, 0xf9, 0x78, 0x83, 0x6a, 0x8d, 0x55, 0x35, 0x52, 0xe7, 0x79, 0x38, 0xbf, 0x9b, 0xd5,
        0x30, 0x90, 0x93, 0xd4, 0xc0, 0xc1, 0x7a, 0x96, 0xe9, 0xbd, 0x8e, 0x7b, 0xa3, 0x70, 0x3e, 0xe6, 0x03, 0x71,
        0x99, 0xa0, 0x29, 0x24, 0x57, 0x3f, 0xb5, 0x98, 0x55, 0xd1, 0x33, 0xfc, 0x9a, 0x2f, 0xcc, 0xaf, 0x0a, 0xa9,
        0xd2, 0x4b, 0x06, 0x46, 0x9e, 0x3b, 0x6f, 0x13, 0x27, 0x8f, 0xc0, 0xc5, 0xb6, 0x6e, 0x53, 0xe1, 0x82, 0xa7,
        0x89, 0x4c, 0x97, 0xc7, 0xfe, 0x3c, 0xce, 0x56, 0x98, 0x98, 0x3b, 0x4b, 0xf3, 0xe9, 0x32, 0x92, 0x8b, 0xdd,
        0x5c, 0x32, 0x35, 0x6b, 0x94, 0x45, 0x3c, 0x0d, 0xfd, 0x99, 0xd9, 0xfc, 0x1a, 0xc8, 0x33, 0x17, 0x37, 0x3d,
        0x7b, 0x70, 0x76, 0xd2, 0x42, 0x32, 0xbb, 0x23, 0x2f, 0x9c, 0xb5, 0x81, 0xb1, 0x92, 0x55, 0xa5, 0xa8, 0x60,
        0x70, 0x36, 0x33, 0xba, 0x30, 0x3e, 0x40, 0xa8, 0x8b, 0x02, 0xb9, 0x17, 0x49, 0xf0, 0xf0, 0xaa, 0x09, 0xd1,
        0x1a, 0xee, 0xb4, 0x44, 0xa0, 0xf9, 0x7a, 0x3b, 0xfb, 0xc9, 0x5c, 0x38, 0xab, 0x13, 0x25, 0x8e, 0x15, 0x09,
        0x76, 0xd8, 0x09, 0x38, 0x50, 0xb7, 0xb4, 0x5e, 0x60, 0xe9, 0xd3, 0xa1, 0x83, 0x6f, 0x16, 0x39, 0x33, 0x83,
        0xaf, 0x2e, 0xdc, 0x3d, 0xf3, 0x75, 0x18, 0x8e, 0x26, 0x22, 0x45, 0x1c, 0x3e, 0x4c, 0xa3, 0x89, 0xb2, 0xc2,
        0x59, 0x9e, 0x78, 0x91, 0x37, 0x2b, 0xf8, 0x22, 0x35, 0x46, 0x94, 0x6c, 0x24, 0x6e, 0x6e, 0xf5, 0x80, 0x53,
        0x39, 0xbe, 0xdc, 0x1e, 0x67, 0x16, 0x22, 0xdd, 0xdf, 0x8e, 0xc7, 0xc1, 0xe7, 0xc2, 0xf9, 0x9d, 0x10, 0x2b,
        0xcc, 0x52, 0x7e, 0xc8, 0xd3, 0xc1, 0x8a, 0xa4, 0x68, 0x4f, 0x00, 0xb5, 0x39, 0xd9, 0xa3, 0x7c, 0x41, 0xd4,
        0x4d, 0x4d, 0x2c, 0x5c, 0xf2, 0x4c, 0x64, 0x43, 0x2c, 0xb3, 0xe2, 0x5b, 0x82, 0x78, 0xab, 0x59, 0xa9, 0xb7,
        0x1d, 0xdc, 0xa9, 0x1a, 0xd8, 0xd1, 0xcc, 0x2d, 0xda, 0xee, 0x1e, 0x0a, 0x9e, 0x91, 0xcb, 0xe1, 0xb6, 0x4c,
        0x5e, 0xf8, 0x96, 0x20, 0xe9, 0x6a, 0xb0, 0x62, 0xc6, 0x76, 0xa6, 0xc3, 0xb9, 0xa3, 0x43, 0xd5, 0x9f, 0xdb,
        0x33, 0x12, 0xbb, 0x59, 0x47, 0x2c, 0x16, 0x29, 0x32, 0x71, 0x97, 0x9c, 0xcc, 0xbc, 0xf0, 0xad, 0x42, 0x84,
        0x28, 0xe6, 0xaa, 0x6e, 0x5b, 0x43, 0x05, 0xd6, 0xe6, 0x0c, 0x96, 0x95, 0x68, 0xe5, 0x7d, 0x0c, 0x94, 0xfd,
        0x88, 0x52, 0xe1, 0xf3, 0x3b, 0xfb, 0xa7, 0x6a, 0x18, 0x85, 0x6f, 0x24, 0x64, 0xff, 0x2d, 0x39, 0x57, 0x19,
        0xab, 0x7a, 0x3a, 0x28, 0x39, 0xac, 0xd7, 0xbe, 0x53, 0x0f, 0xef, 0xb3, 0xd8, 0xff, 0x67, 0xd9, 0x85, 0x32,
        0x5e, 0x65, 0x78, 0x8b, 0x47, 0xa6, 0xc7, 0x9b, 0x48, 0x2f, 0xda, 0xe1, 0x4e, 0x83, 0x98, 0xe3, 0x41, 0x73,
        0x83, 0x2f, 0x98, 0x29, 0xd6, 0x1c, 0xc2, 0xa9, 0xa7, 0x56, 0xce, 0xa8, 0xc5, 0xd5, 0x16, 0x8b, 0x4c, 0x74,
        0x79, 0x04, 0x2a, 0xb7, 0x3b, 0x4c, 0xa5, 0x48, 0x9e, 0x64, 0x70, 0xfd, 0x2a, 0x87, 0x9b, 0x8c, 0xe7, 0xc3,
        0x75, 0xf1, 0x2f, 0xe5, 0x16, 0x92, 0xcc, 0x58, 0x62, 0x14, 0x85, 0x59, 0xa9, 0x31, 0xca, 0xcc, 0x32, 0x00,
        0x75, 0x2c, 0xcc, 0xb7, 0x44, 0x0c, 0x51, 0x6c, 0xfd, 0x41, 0x0e, 0xb7, 0xe7, 0x53, 0x72, 0x6b, 0xe4, 0x16,
        0x82, 0x4c, 0x74, 0x45, 0x04, 0x42, 0x75, 0x4c, 0xae, 0x35, 0xce, 0x48, 0xb3, 0xdb, 0x7a, 0xc2, 0x27, 0x3f,
        0x4c, 0x0e, 0x26, 0x45, 0xc8, 0x1d, 0x01, 0x04, 0x65, 0x40, 0x80, 0xcf, 0x01, 0x7f, 0xd6, 0x14, 0x6c, 0xb0,
        0xe1, 0xed, 0x55, 0xd6, 0xea, 0x97, 0x5c, 0xcc, 0x19, 0x0b, 0x04, 0xbc, 0x7d, 0xf3, 0xa9, 0x3f, 0x9a, 0x99,
        0x22, 0x3b, 0x16, 0xd5, 0x36, 0xcf, 0x43, 0xfa, 0xc8, 0x22, 0x21, 0xc3, 0x07, 0xd1, 0xc4, 0x8f, 0x44, 0xed,
        0x62, 0x69, 0xf9, 0x85, 0x9e, 0xe8, 0x2b, 0x1b, 0x92, 0xfe, 0x4d, 0x9c, 0x2a, 0x2f, 0xf2, 0x85, 0x34, 0x99,
        0x6f, 0x3a, 0xe5, 0x16, 0xc3, 0x4c, 0xa4, 0x71, 0xed, 0x44, 0xe3, 0xa5, 0x3a, 0x83, 0x51, 0x6a, 0x83, 0x86,
        0x0b, 0xc2, 0xb5, 0x4b, 0x9c, 0x4a, 0x8f, 0x24, 0x40, 0x5f, 0x86, 0xe3, 0x38, 0x3c, 0x6c, 0x38, 0x64, 0x1b,
        0x63, 0xe5, 0xb8, 0xcd, 0xca, 0x89, 0x59, 0x32, 0x90, 0x0a, 0xdd, 0xea, 0x07, 0xfb, 0x3a, 0x94, 0x4b, 0xaa,
        0xdb, 0x6a, 0xc3, 0x8c, 0x28, 0x11, 0x2b, 0xbe, 0x2d, 0x71, 0xca, 0x9b, 0x8f, 0x96, 0x2f, 0x04, 0x72, 0xed,
        0xc8, 0x00, 0x8a, 0x2b, 0x83, 0xe4, 0x94, 0x6c, 0xf1, 0x99, 0xbf, 0x20, 0x00, 0x49, 0x67, 0xbb, 0x57, 0xd8,
        0xa6, 0x54, 0x26, 0x65, 0x5c, 0x8b, 0x6b, 0x1a, 0x65, 0x50, 0xad, 0x4b, 0xe6, 0x31, 0x42, 0x9d, 0x90, 0x03,
        0x97, 0xab, 0x7b, 0x3c, 0x0c, 0x9a, 0x88, 0xa2, 0xcb, 0x32, 0x3f, 0xdd, 0x12, 0xa3, 0x38, 0xf3, 0x93, 0x24,
        0xf2, 0x2c, 0x52, 0x1f, 0x11, 0x25, 0xfb, 0x3a, 0x85, 0x00, 0x54, 0x6f, 0x44, 0x29, 0xbd, 0xa5, 0x53, 0x22,
        0x5f, 0x33, 0x35, 0x69, 0x29, 0x9d, 0xf9, 0x49, 0x17, 0x67, 0x4c, 0xb4, 0x99, 0xb6, 0xe5, 0xd9, 0x39, 0xf3,
        0xd8, 0xba, 0xbf, 0x5d, 0xe6, 0xeb, 0xb2, 0xa6, 0xe6, 0xa0, 0xbb, 0x17, 0xc8, 0x69, 0xd2, 0xe2, 0xae, 0xbc,
        0xf2, 0x8d, 0x00, 0xe2, 0x6e, 0xf5, 0x69, 0x0d, 0xea, 0xc4, 0x5d, 0x87, 0x79, 0x9e, 0x18, 0x56, 0x80, 0x22,
        0x8b, 0x99, 0x36, 0xb0, 0xd3, 0x28, 0x7a, 0x8c, 0xc5, 0x8f, 0xf2, 0xca, 0x37, 0x03, 0x69, 0x57, 0x53, 0xde,
        0xa9, 0x3c, 0x5c, 0x55, 0xe9, 0xf6, 0xac, 0xc1, 0x7a, 0x85, 0x50, 0xbd, 0xc0, 0x18, 0xc3, 0x04, 0xbc, 0xe8,
        0x9f, 0x5e, 0xd5, 0xde, 0x94, 0x83, 0x4d, 0x45, 0x6d, 0xe5, 0xbb, 0xa4, 0xc8, 0xb6, 0x59, 0x17, 0x79, 0x19,
        0x85, 0xd8, 0x34, 0xb0, 0x78, 0x00, 0x25, 0x3b, 0x03, 0x1e, 0x83, 0x9b, 0x68, 0x44, 0x74, 0x8b, 0xbd, 0xa4,
        0xc0, 0x7d, 0x5e, 0xf9, 0x9e, 0x20, 0x59, 0x9c, 0x3d, 0x38, 0xab, 0x0b, 0x96, 0x21, 0xff, 0x0e, 0xee, 0x17,
        0xac, 0x62, 0x67, 0x9a, 0xcb, 0xdf, 0x58, 0x9c, 0x8c, 0xe4, 0x2d, 0x05, 0xf1, 0xcd, 0x40, 0x9a, 0x2a, 0x82,
        0x34, 0xe8, 0x39, 0x91, 0xbe, 0x73, 0x46, 0x8c, 0x4b, 0x75, 0x6f, 0x6a, 0xdd, 0x37, 0x14, 0xd2, 0xa7, 0x84,
        0xbc, 0xbf, 0x54, 0xc8, 0xe4, 0x95, 0x6f, 0x06, 0xc2, 0x44, 0x51, 0x80, 0xba, 0x2e, 0x08, 0x93, 0x0f, 0xe4,
        0xb3, 0x79, 0xe8, 0x8f, 0x3c, 0xef, 0x86, 0xf3, 0xe3, 0x28, 0x87, 0xe1, 0x45, 0x65, 0x6c, 0xf0, 0x79, 0x6b,
        0xea, 0x92, 0xa2, 0xfa, 0x46, 0x20, 0xc8, 0x0a, 0xb5, 0x40, 0x6f, 0x18, 0xaf, 0xf1, 0x48, 0x29, 0xa7, 0x70,
        0xb3, 0x3c, 0x43, 0x5c, 0xc9, 0xce, 0x15, 0xad, 0xe8, 0x2b, 0x93, 0x10, 0xe3, 0x3f, 0x19, 0x4c, 0x3f, 0xc1,
        0xf7, 0x69, 0xd0, 0xbe, 0x31, 0x88, 0xd4, 0x45, 0x68, 0x58, 0x95, 0x39, 0xbf, 0x56, 0x38, 0x47, 0xcd, 0x31,
        0x96, 0x56, 0xd8, 0xee, 0xf2, 0xf4, 0x79, 0x43, 0xf2, 0xed, 0x41, 0xc2, 0xd5, 0x20, 0x1b, 0x75, 0xc8, 0xc9,
        0x34, 0x22, 0x70, 0x7e, 0xb4, 0x04, 0xf3, 0xfb, 0xf1, 0x51, 0x4b, 0x13, 0x2e, 0x6a, 0x90, 0xb2, 0x15, 0x4e,
        0x4f, 0xbf, 0x0a, 0x4f, 0xc4, 0x45, 0x95, 0xb3, 0xc9, 0xf5, 0x7d, 0x43, 0xc0, 0xc8, 0x41, 0x65, 0xa7, 0xbe,
        0x09, 0x3f, 0xac, 0x2d, 0xf5, 0xe1, 0xa0, 0x35, 0xdb, 0x68, 0x46, 0xe1, 0xdb, 0x84, 0xcf, 0xd6, 0x81, 0x58,
        0x74, 0x8b, 0x5d, 0x96, 0xbc, 0x6a, 0x29, 0xd2, 0x9a, 0x64, 0xea, 0xdb, 0x37, 0xc8, 0x31, 0x7e, 0xb4, 0x36,
        0x41, 0xa2, 0x0b, 0x71, 0xff, 0xf4, 0xb2, 0xe4, 0x26, 0x16, 0x6a, 0xdf, 0x32, 0xa8, 0x35, 0x68, 0x57, 0xc0,
        0xc8, 0x64, 0xaa, 0x52, 0x90, 0x3b, 0xe5, 0xc6, 0xe6, 0xb5, 0xef, 0x04, 0x3e, 0x10, 0x39, 0x18, 0x45, 0x61,
        0x55, 0x69, 0x85, 0xf4, 0x96, 0xff, 0x98, 0x2a, 0x50, 0xac, 0x1b, 0x13, 0x00, 0x7c, 0x0b, 0xf0, 0xf9, 0xd5,
        0x2b, 0x5b, 0x91, 0xed, 0x79, 0x4a, 0xe8, 0x35, 0xd9, 0xfa, 0x30, 0x32, 0x64, 0xac, 0x5e, 0xcc, 0x17, 0x2b,
        0x83, 0xcf, 0x6b, 0xdf, 0x03, 0x24, 0x8a, 0x7b, 0x1d, 0xda, 0x41, 0xe7, 0x7b, 0x3d, 0x25, 0xd6, 0x42, 0x33,
        0xb4, 0xd8, 0x6b, 0x5e, 0x3b, 0xa3, 0xf3, 0xd9, 0x85, 0x98, 0xc5, 0x61, 0x25, 0x66, 0x5b, 0x54, 0xdf, 0xa3,
        0x06, 0xaf, 0x64, 0x2e, 0xb1, 0x45, 0xa8, 0x7f, 0xeb, 0xe2, 0xc3, 0xb6, 0x4e, 0x3d, 0x51, 0xcc, 0xf0, 0x97,
        0xbd, 0x70, 0x7a, 0x5d, 0x42, 0x73, 0x79, 0x8a, 0x98, 0x1a, 0x60, 0x1e, 0xdf, 0x50, 0xc0, 0x80, 0xf4, 0x7a,
        0x0c, 0x98, 0x4f, 0xe8, 0x92, 0x61, 0x93, 0xd3, 0x24, 0xba, 0x0c, 0xe5, 0xe2, 0x75, 0xa0, 0xcb, 0x2a, 0xf4,
        0x47, 0x11, 0x39, 0xf3, 0xdb, 0xd7, 0x77, 0xbf, 0xdf, 0xfd, 0xfc, 0xfd, 0xe6, 0x3f, 0xbe, 0xfb, 0xf9, 0xdf,
        0x3f, 0x88, 0xed, 0xff, 0xf5, 0x2f, 0xff, 0xf1, 0xdd, 0xe6, 0xbb, 0xdf, 0x7e, 0xf9, 0xb0, 0xf9, 0xe6, 0xb7,
        0xf7, 0xbf, 0x7f, 0xf7, 0x9b, 0x02, 0xb5, 0x09, 0x08, 0x0e, 0xa0, 0xe0, 0x84, 0x62, 0x75, 0x54, 0x6d, 0x55,
        0x67, 0xb2, 0xf3, 0x37, 0xfc, 0x07, 0x93, 0xea, 0x4c, 0x6f, 0x4d, 0xe1, 0x4e, 0x7b, 0x32, 0xce, 0x8e, 0x88,
        0xfc, 0x02, 0x5e, 0x6f, 0x3a, 0x60, 0x93, 0x03, 0xee, 0x34, 0x1e, 0x0e, 0x47, 0x77, 0x7a, 0x20, 0x7d, 0xcb,
        0x12, 0x72, 0xf2, 0x14, 0xe9, 0x34, 0xc2, 0x38, 0x0b, 0x08, 0x11, 0x56, 0x8d, 0x6a, 0x00, 0x1e, 0x7c, 0x43,
        0x5a, 0xa5, 0x68, 0x90, 0xb7, 0x8b, 0xa1, 0xb1, 0xcf, 0xd5, 0xed, 0x38, 0x0f, 0xb3, 0xc2, 0x65, 0x0e, 0x57,
        0xc6, 0xdc, 0xd8, 0x8c, 0xd5, 0x51, 0xcc, 0x37, 0x18, 0x55, 0x95, 0xa4, 0x72, 0xdb, 0xcf, 0x5a, 0x68, 0xcb,
        0x26, 0x42, 0xc3, 0x1e, 0xb3, 0xcc, 0xfc, 0xca, 0xef, 0x44, 0xa5, 0xb3, 0xf1, 0xe5, 0x0e, 0xd8, 0xac, 0x12,
        0x0e, 0x2a, 0x3a, 0xd5, 0x53, 0x7d, 0xdb, 0x65, 0x3c, 0x3c, 0xd2, 0x03, 0x75, 0xd3, 0xc0, 0x9c, 0x59, 0x40,
        0x8f, 0x17, 0xa4, 0x33, 0x42, 0xf3, 0x15, 0x21, 0xd5, 0x3f, 0xaa, 0x51, 0x9e, 0xa2, 0xa2, 0x8a, 0xb0, 0x24,
        0x5b, 0xc9, 0x0f, 0x85, 0xf5, 0x0e, 0x90, 0x4f, 0x3b, 0x43, 0xca, 0x9d, 0x90, 0xa5, 0x7f, 0x1a, 0x64, 0xb6,
        0x04, 0x51, 0x45, 0xb5, 0xf6, 0x5c, 0xc2, 0xa9, 0x29, 0xea, 0xc6, 0x39, 0x8d, 0xb2, 0x4c, 0x90, 0xc5, 0xaa,
        0x85, 0x00, 0x7e, 0x10, 0xb1, 0x57, 0x6b, 0xb0, 0x60, 0xd3, 0x5f, 0x4f, 0xa2, 0xaa, 0xca, 0x62, 0x8e, 0xfb,
        0x4d, 0xbf, 0x1f, 0xe1, 0xad, 0xff, 0x34, 0x1c, 0x67, 0x06, 0xf7, 0xad, 0x1d, 0xcb, 0x78, 0x7a, 0x16, 0xe9,
        0x2c, 0xb3, 0x7c, 0xb5, 0xc1, 0x56, 0x8e, 0x0c, 0xa0, 0x36, 0x22, 0xd7, 0xc2, 0xb6, 0xf2, 0xfd, 0x3d, 0xeb,
        0x86, 0xa9, 0x4a, 0xe9, 0x96, 0xa0, 0xa5, 0x76, 0x1d, 0x4e, 0xac, 0xbf, 0xa2, 0xda, 0x36, 0xd3, 0x7f, 0xe3,
        0x82, 0xae, 0x71, 0xd6, 0x07, 0x46, 0xb3, 0x9a, 0x81, 0x0e, 0x59, 0xa2, 0xab, 0x2c, 0x55, 0x75, 0x0f, 0xa5,
        0x68, 0x39, 0x0f, 0x11, 0xf8, 0xf0, 0xc9, 0x44, 0xac, 0x71, 0xd8, 0x2f, 0x06, 0x45, 0xe3, 0x9b, 0x83, 0x40,
        0x65, 0x40, 0x46, 0xff, 0xa7, 0x5d, 0x1b, 0x8b, 0x2e, 0x1e, 0x64, 0xa1, 0x9e, 0x92, 0x52, 0x06, 0xd3, 0x22,
        0xb9, 0xe2, 0x1a, 0xdf, 0x19, 0x20, 0x0a, 0xde, 0xea, 0x0a, 0xb2, 0xbf, 0xcd, 0xb2, 0xa5, 0x07, 0x16, 0xfb,
        0x91, 0x69, 0x04, 0x5b, 0x54, 0xd1, 0x98, 0xc9, 0x3e, 0xcc, 0x48, 0x1e, 0xb1, 0x0e, 0x3f, 0xbe, 0x5f, 0x48,
        0x1f, 0xf7, 0x4b, 0x29, 0x4a, 0x39, 0x5c, 0x8b, 0xaa, 0x9e, 0xa5, 0xb6, 0x1c, 0x7b, 0x74, 0x19, 0xa2, 0x62,
        0x40, 0x2f, 0xca, 0x70, 0x9e, 0xa7, 0x8b, 0x72, 0x78, 0xeb, 0x1b, 0x86, 0x94, 0xab, 0x2f, 0x94, 0x53, 0x03,
        0x7f, 0xb6, 0x3c, 0x08, 0x18, 0xe5, 0x32, 0xe5, 0x0f, 0xb7, 0x23, 0x8e, 0x5c, 0x58, 0x76, 0xf6, 0x79, 0xad,
        0x6f, 0x12, 0x52, 0x44, 0x6e, 0x29, 0x3b, 0x4d, 0x45, 0x7d, 0xaf, 0xc7, 0xad, 0x76, 0xb6, 0xa2, 0x92, 0x93,
        0x32, 0xfd, 0xb5, 0x92, 0xe6, 0xc0, 0x9a, 0x6c, 0xf5, 0x99, 0xa2, 0xab, 0x86, 0xe2, 0xfa, 0x5e, 0x29, 0xbb,
        0x98, 0x7f, 0x2a, 0x3f, 0x54, 0xa2, 0x12, 0xc1, 0x5b, 0x27, 0x13, 0xcd, 0x0d, 0x97, 0xfa, 0xc3, 0x60, 0x0a,
        0xb1, 0x90, 0x07, 0x2f, 0x69, 0xce, 0x5b, 0xdf, 0x1e, 0x24, 0x8a, 0x5b, 0x98, 0x39, 0xaa, 0xbb, 0xa4, 0x0c,
        0x18, 0x4c, 0x6a, 0x22, 0x35, 0x8b, 0x2d, 0x84, 0xc2, 0x56, 0x76, 0x35, 0xd2, 0x24, 0x9b, 0xcf, 0x6a, 0x2f,
        0x58, 0x51, 0x6e, 0x53, 0xe0, 0x1b, 0x06, 0xb6, 0x6c, 0x1e, 0x65, 0x1f, 0x52, 0x9d, 0x60, 0x78, 0x8b, 0x00,
        0xd3, 0xba, 0xcb, 0xb0, 0x69, 0x1e, 0x8e, 0x1a, 0x56, 0xfa, 0x1d, 0xa1, 0xa4, 0xdb, 0x1c, 0x8e, 0xdf, 0xd6,
        0xf7, 0x09, 0xe9, 0x97, 0x65, 0xa9, 0x61, 0x4a, 0x32, 0xfd, 0xf5, 0xfd, 0xab, 0x18, 0x58, 0x3d, 0xfe, 0x6f,
        0xb6, 0xcc, 0xb8, 0x3c, 0x85, 0x4e, 0xed, 0xa1, 0x3c, 0x52, 0xe5, 0x62, 0xff, 0x56, 0x5a, 0x20, 0x21, 0x07,
        0xf4, 0x41, 0xf4, 0x65, 0x06, 0xb0, 0xb0, 0x94, 0xaf, 0x1c, 0x98, 0x72, 0x98, 0x9d, 0xb9, 0x29, 0x88, 0xca,
        0xaa, 0xaf, 0x26, 0x24, 0xa0, 0xb0, 0xdc, 0x8a, 0x55, 0x2e, 0x77, 0x42, 0x3b, 0x9e, 0x99, 0x4c, 0x7c, 0x60,
        0x70, 0x98, 0x62, 0x50, 0xf4, 0xb4, 0xd9, 0x8b, 0xd0, 0xa3, 0x76, 0x65, 0xb8, 0xad, 0xe3, 0x02, 0xa6, 0x08,
        0xb8, 0x70, 0x73, 0x96, 0xac, 0xf6, 0x83, 0xb5, 0x38, 0xdb, 0xa6, 0x3a, 0x68, 0x6d, 0xf4, 0x65, 0xd8, 0xa6,
        0x8a, 0x11, 0x2f, 0xdd, 0x38, 0x0f, 0x7f, 0x5e, 0x83, 0x3f, 0x21, 0xc5, 0x57, 0x59, 0x20, 0x55, 0x57, 0x71,
        0xc8, 0x14, 0xde, 0x3b, 0x55, 0x98, 0xf5, 0xe1, 0x14, 0x48, 0xb5, 0xbf, 0xc5, 0x99, 0x12, 0x29, 0xda, 0xc1,
        0x1f, 0x89, 0x1c, 0xc4, 0x77, 0x9b, 0xf7, 0x1a, 0x0e, 0x00, 0x77, 0xa8, 0xa9, 0x0e, 0x77, 0x14, 0xb8, 0x38,
        0xb6, 0x20, 0xd9, 0x78, 0xeb, 0x06, 0x43, 0xcf, 0x1c, 0xbd, 0x5b, 0x45, 0x01, 0xb5, 0x74, 0x29, 0x2f, 0x42,
        0xb3, 0x07, 0xa3, 0xc8, 0x13, 0x05, 0x62, 0xa0, 0xab, 0xf5, 0x16, 0x41, 0xd9, 0xe4, 0xb5, 0xd7, 0x8a, 0x93,
        0x48, 0x55, 0xfb, 0x14, 0x49, 0xb5, 0x67, 0xda, 0x48, 0x84, 0xd6, 0x05, 0x6d, 0xaa, 0xbf, 0xb8, 0xdb, 0xf4,
        0xd6, 0x44, 0x2d, 0x05, 0x4b, 0xf5, 0x89, 0x62, 0x17, 0x49, 0x64, 0xf3, 0x16, 0xbb, 0xd4, 0x72, 0x67, 0xb4,
        0x2d, 0x91, 0x3a, 0x43, 0xa9, 0x3b, 0x30, 0x3a, 0xbd, 0x15, 0xaf, 0x72, 0x3c, 0x90, 0xc7, 0x79, 0x14, 0x89,
        0xd9, 0xa6, 0x72, 0xea, 0x3b, 0xcb, 0x6f, 0xda, 0x1c, 0xd5, 0xcb, 0xa2, 0xb4, 0xce, 0xad, 0x7c, 0xb4, 0x09,
        0xb4, 0x48, 0x9c, 0xd4, 0x3e, 0x4e, 0xb4, 0x53, 0x29, 0x35, 0x6e, 0x10, 0x41, 0x61, 0x8b, 0x74, 0xce, 0xa2,
        0x7c, 0x7a, 0x45, 0x0e, 0x9f, 0x48, 0x4a, 0xbe, 0x63, 0x60, 0xdf, 0xab, 0x13, 0x19, 0x54, 0x1d, 0xfa, 0x59,
        0x79, 0xde, 0xe3, 0x5f, 0x9d, 0xf3, 0x25, 0x69, 0xbb, 0x08, 0x56, 0x89, 0x65, 0x62, 0x39, 0xa9, 0xf6, 0xb0,
        0x73, 0x1a, 0xff, 0xb6, 0x7a, 0x73, 0x8d, 0x3a, 0x4d, 0x73, 0x83, 0x6a, 0xdc, 0x81, 0xac, 0x93, 0xda, 0xfe,
        0x98, 0x4d, 0x5b, 0xec, 0x9c, 0xff, 0x48, 0xb1, 0x7a, 0x5f, 0xa7, 0x59, 0x64, 0x77, 0x4b, 0xab, 0x20, 0x77,
        0x81, 0x69, 0x25, 0x93, 0x56, 0x76, 0xce, 0x4b, 0x9b, 0x25, 0x36, 0x12, 0xb2, 0x6e, 0x80, 0xc5, 0xce, 0x99,
        0x8f, 0x9a, 0x7b, 0x64, 0x3e, 0x68, 0xee, 0x65, 0x99, 0x96, 0x44, 0xf3, 0x92, 0xe7, 0x61, 0x38, 0x25, 0x68,
        0xcd, 0x21, 0xd2, 0x42, 0x93, 0xb3, 0x9d, 0x5e, 0xc5, 0xce, 0x59, 0x93, 0xe4, 0x75, 0xc4, 0x2b, 0xd0, 0x13,
        0x12, 0xb1, 0x03, 0x3c, 0x0f, 0xd5, 0xf2, 0x28, 0xea, 0xf2, 0x1c, 0xda, 0x7e, 0x14, 0x3b, 0xe7, 0x51, 0x48,
        0xc6, 0xd5, 0xae, 0x44, 0xfb, 0x3d, 0x18, 0xd0, 0x4b, 0xdf, 0x93, 0x3b, 0x66, 0x8d, 0xf9, 0xaa, 0x14, 0x29,
        0x3c, 0xda, 0x40, 0x85, 0x2d, 0x83, 0x36, 0xd7, 0xc0, 0xf9, 0xd4, 0x76, 0x79, 0xe8, 0x97, 0x48, 0x96, 0x55,
        0x7b, 0xc6, 0x72, 0x39, 0xc4, 0x1c, 0xf9, 0x34, 0x52, 0x0f, 0x19, 0xad, 0x9d, 0x5b, 0x8a, 0x93, 0x1a, 0x79,
        0x19, 0xf1, 0x90, 0x15, 0xd6, 0xea, 0xd6, 0xa6, 0xcb, 0xea, 0xf8, 0x9a, 0xf4, 0x8b, 0x22, 0x05, 0x47, 0x1b,
        0x84, 0xc3, 0x8a, 0xe0, 0x06, 0x6c, 0xe0, 0x67, 0xaa, 0x3a, 0x73, 0xde, 0xdb, 0xc3, 0x8d, 0x3f, 0x8c, 0x76,
        0xaa, 0x5d, 0x7c, 0xb8, 0xd9, 0xd6, 0x98, 0x8f, 0x6f, 0x27, 0x46, 0xa6, 0xdd, 0xb0, 0xa3, 0x99, 0x88, 0x26,
        0x8d, 0xd7, 0xf1, 0x88, 0x04, 0xa0, 0x41, 0x7b, 0xab, 0xa6, 0x32, 0xcd, 0x22, 0xc5, 0x4b, 0x59, 0x85, 0x13,
        0x6d, 0x31, 0x56, 0xe1, 0x94, 0x90, 0x6c, 0xdf, 0xdf, 0x5e, 0x45, 0xa2, 0x3f, 0x8f, 0xfb, 0x8f, 0xda, 0xc5,
        0x0e, 0x65, 0xfd, 0x16, 0xd6, 0x2a, 0x52, 0x9c, 0xd4, 0x9e, 0x8e, 0xb3, 0xc8, 0x8e, 0x9a, 0x90, 0x75, 0x57,
        0x75, 0xb7, 0xe1, 0xec, 0xdc, 0x06, 0x43, 0xf2, 0x4b, 0xba, 0x9c, 0x52, 0x33, 0xd1, 0x75, 0x92, 0x19, 0xb1,
        0x53, 0x50, 0xd5, 0xa0, 0xe2, 0x8c, 0xb2, 0x5d, 0x5c, 0x1d, 0x7d, 0x4e, 0xcc, 0x57, 0x84, 0x21, 0xcf, 0xb4,
        0x16, 0xb7, 0x63, 0x74, 0x94, 0x29, 0xb6, 0x6a, 0x84, 0x6d, 0x44, 0xaa, 0x34, 0x2b, 0xfc, 0xce, 0x1c, 0xc9,
        0x48, 0x51, 0x4d, 0x1b, 0x29, 0x85, 0x51, 0xed, 0xa9, 0x26, 0x92, 0x21, 0x88, 0x97, 0xb2, 0x08, 0xbf, 0x9d,
        0xf6, 0x5b, 0xd1, 0x9f, 0xfb, 0x7b, 0xfa, 0x37, 0x2f, 0x7b, 0x36, 0xa2, 0x64, 0x85, 0xbf, 0x15, 0x09, 0x69,
        0x7d, 0x1b, 0x3d, 0x7a, 0xc7, 0xe7, 0x94, 0x6b, 0x55, 0xa4, 0x28, 0xaa, 0xa1, 0x45, 0x78, 0x74, 0xd7, 0xfa,
        0xbc, 0x0c, 0x85, 0xb1, 0x1f, 0x99, 0x26, 0x84, 0xf7, 0xa6, 0x73, 0xc2, 0x70, 0x2e, 0x26, 0x49, 0x9c, 0x7f,
        0xd4, 0x00, 0xe5, 0x6d, 0x32, 0x1c, 0x1f, 0x07, 0x6b, 0xfa, 0xd3, 0xcf, 0xaa, 0x0b, 0x88, 0xda, 0x9f, 0x46,
        0xc5, 0xa0, 0xfd, 0x0c, 0x78, 0xf6, 0x1c, 0xb2, 0x1c, 0xf6, 0x22, 0x73, 0x8e, 0x06, 0x54, 0x11, 0x59, 0x53,
        0x04, 0x19, 0xcb, 0xa5, 0x2c, 0xb9, 0xff, 0xf4, 0xea, 0xa6, 0x6c, 0x91, 0x39, 0x43, 0xf3, 0xa1, 0xd5, 0x88,
        0x2a, 0x31, 0x4f, 0x5b, 0x13, 0x9d, 0xb1, 0xa5, 0xea, 0x9e, 0xea, 0xb2, 0x56, 0x1c, 0xa8, 0xa1, 0x3d, 0x2b,
        0xff, 0x7a, 0xe0, 0xc3, 0x45, 0x73, 0x91, 0xf9, 0x1e, 0x10, 0x8d, 0x30, 0x0f, 0x71, 0xb7, 0x06, 0x32, 0x89,
        0xad, 0xe7, 0x94, 0x61, 0x97, 0x3a, 0x5a, 0xf8, 0x0d, 0xbd, 0x5a, 0x4b, 0x2b, 0x22, 0x0d, 0xcb, 0x99, 0x9f,
        0xa4, 0x71, 0xac, 0xa2, 0xd0, 0x51, 0xb9, 0x57, 0x7f, 0x81, 0xb9, 0xd8, 0xac, 0x0d, 0xcd, 0xed, 0x15, 0x0a,
        0x95, 0x57, 0x7c, 0x1b, 0x96, 0xef, 0x04, 0x92, 0x46, 0x6e, 0xad, 0xd0, 0x82, 0x43, 0x86, 0xfd, 0x81, 0xbd,
        0xc1, 0xee, 0xf5, 0x78, 0xf8, 0xe7, 0x70, 0x99, 0xbe, 0xfa, 0x5e, 0x69, 0x53, 0x08, 0xb5, 0x65, 0xa6, 0x5c,
        0x90, 0x45, 0x2d, 0xa4, 0x02, 0x93, 0xd7, 0x29, 0xf4, 0x91, 0x56, 0x04, 0xc9, 0x81, 0x0c, 0x37, 0xc4, 0x4e,
        0xe0, 0x42, 0xb4, 0xa4, 0x52, 0x03, 0xca, 0x12, 0x10, 0xaa, 0x58, 0x97, 0xce, 0x7e, 0xf8, 0x41, 0xd6, 0x10,
        0x26, 0x6a, 0xaa, 0xe0, 0x31, 0x82, 0xdc, 0x09, 0xf0, 0xf7, 0x2e, 0x12, 0x88, 0x88, 0x01, 0x8b, 0xf3, 0xcd,
        0xa9, 0x9b, 0x0f, 0x5d, 0xba, 0x18, 0xbe, 0x4a, 0x43, 0x03, 0x29, 0x1c, 0x04, 0x34, 0x4d, 0x04, 0x69, 0xb7,
        0x8c, 0xec, 0xdd, 0x3d, 0x6c, 0x96, 0x46, 0x7e, 0xc2, 0x2e, 0x8f, 0x37, 0x1c, 0x57, 0x5a, 0x62, 0x02, 0xb1,
        0x3c, 0x5a, 0x71, 0x10, 0xad, 0xc5, 0x65, 0x52, 0x53, 0x98, 0x54, 0x81, 0x8a, 0xd5, 0xf7, 0x74, 0x88, 0xc2,
        0xa4, 0xfe, 0x80, 0x09, 0x64, 0x69, 0x2e, 0x53, 0xa4, 0xb0, 0xa8, 0x3d, 0x1a, 0x3f, 0x4d, 0x56, 0xa8, 0x62,
        0x8a, 0xaa, 0x3a, 0xc1, 0xc2, 0x7a, 0x32, 0xd1, 0x34, 0xbc, 0xdf, 0x98, 0x99, 0xe5, 0x20, 0x55, 0xb0, 0xfe,
        0x3a, 0x24, 0x5e, 0x76, 0xb0, 0x38, 0x43, 0x45, 0x14, 0x08, 0x1a, 0x27, 0x28, 0xb6, 0x5d, 0xf0, 0xec, 0x77,
        0x6c, 0xb3, 0x83, 0x03, 0xed, 0x07, 0xee, 0xc7, 0xf3, 0xf4, 0x6e, 0xf3, 0x9d, 0x06, 0xc1, 0x2d, 0xac, 0x6c,
        0x6f, 0x6c, 0x1d, 0xa0, 0x5a, 0xa5, 0x6e, 0x74, 0x4c, 0xc0, 0xc4, 0x9e, 0xfc, 0x80, 0xf3, 0x6c, 0x2b, 0x2b,
        0x30, 0x8b, 0x0e, 0xf9, 0x2b, 0xb2, 0x88, 0xb0, 0x32, 0xd6, 0x89, 0xb9, 0xb0, 0x40, 0x68, 0xbe, 0x63, 0xab,
        0xa1, 0x25, 0x18, 0x83, 0x1f, 0x4a, 0xf8, 0x41, 0x53, 0x4e, 0xad, 0x88, 0xda, 0x79, 0x3a, 0xf7, 0xcc, 0xc2,
        0xd2, 0x88, 0xf2, 0x18, 0xd2, 0xb0, 0x0a, 0x8b, 0x7d, 0x26, 0xb2, 0x3a, 0xe2, 0xd4, 0xdb, 0xcc, 0xaa, 0x19,
        0x29, 0x98, 0xb4, 0xb9, 0x6e, 0xcf, 0x60, 0xa2, 0xba, 0x9a, 0x8f, 0x16, 0xd5, 0x2d, 0x2c, 0xd4, 0x99, 0x88,
        0x56, 0xa3, 0x69, 0xb5, 0xcb, 0x84, 0xb5, 0x42, 0xfe, 0x52, 0x63, 0x26, 0xfd, 0xac, 0xb1, 0x76, 0x2b, 0xb5,
        0xc2, 0x7f, 0x9b, 0x21, 0x54, 0x58, 0x54, 0x33, 0x91, 0x36, 0x01, 0x2b, 0xdb, 0x69, 0x93, 0xe9, 0x7f, 0xfc,
        0x4f, 0x38, 0x72, 0x4a, 0xf4, 0xfe, 0x75, 0x45, 0xc2, 0x22, 0x69, 0xfc, 0xba, 0x8c, 0xb5, 0x93, 0xda, 0x9a,
        0x8c, 0x91, 0x9c, 0x3b, 0xab, 0xca, 0x4d, 0xc9, 0x86, 0x32, 0xf7, 0x0f, 0x97, 0x71, 0xb0, 0xc6, 0x13, 0x85,
        0xc5, 0x2d, 0x41, 0xc9, 0x38, 0x75, 0x84, 0xaa, 0x34, 0x98, 0xe3, 0x7d, 0x08, 0x3f, 0x6b, 0x64, 0x81, 0xb4,
        0x1d, 0x03, 0xa9, 0x1c, 0xa4, 0x8a, 0x91, 0x1b, 0xfc, 0x20, 0x46, 0x52, 0x5b, 0x2c, 0x6e, 0x06, 0x65, 0xd1,
        0x27, 0x26, 0x2a, 0x68, 0x2d, 0xbb, 0x1d, 0x7f, 0x07, 0x6d, 0x8a, 0x61, 0x80, 0xb5, 0x03, 0xb2, 0x6d, 0x5a,
        0x04, 0x44, 0x8f, 0xcf, 0x9d, 0x4f, 0x56, 0x0a, 0x2d, 0x59, 0x97, 0xa3, 0x90, 0x3a, 0x51, 0x58, 0x8c, 0x32,
        0x67, 0x1a, 0x7d, 0x10, 0x27, 0x39, 0xb3, 0xe4, 0x3b, 0x76, 0xb2, 0x64, 0x03, 0x4e, 0x0d, 0x72, 0xcb, 0x3c,
        0x8b, 0x40, 0x9a, 0x59, 0xed, 0x6b, 0x00, 0xad, 0x03, 0x14, 0x68, 0x14, 0x13, 0x01, 0x9a, 0xed, 0x0e, 0xcc,
        0xfe, 0x7e, 0xfe, 0x48, 0x37, 0xee, 0x4b, 0x2a, 0xd3, 0x0b, 0x91, 0xd7, 0x39, 0x2c, 0x98, 0xb3, 0x35, 0x08,
        0x8b, 0x15, 0x52, 0xa7, 0x0d, 0x6e, 0xef, 0x2c, 0xd4, 0x73, 0x9c, 0x74, 0x82, 0x91, 0x74, 0x41, 0x58, 0x51,
        0x4a, 0x23, 0x26, 0x98, 0x4d, 0x83, 0x7c, 0x0a, 0x5d, 0x3a, 0xa7, 0x8b, 0x90, 0x69, 0xb2, 0xc8, 0xa3, 0xd5,
        0x4e, 0xd5, 0x48, 0x55, 0x42, 0x53, 0xed, 0x2f, 0x64, 0x18, 0x04, 0x8e, 0x91, 0x3b, 0x8b, 0xcb, 0xd3, 0x21,
        0xe4, 0x98, 0xb3, 0xf3, 0x75, 0xc3, 0x46, 0x5a, 0xea, 0x8a, 0xf0, 0x34, 0x9a, 0x03, 0x94, 0xb4, 0x17, 0x26,
        0x22, 0x0d, 0x0c, 0x93, 0xeb, 0x81, 0x0c, 0x30, 0xe7, 0x71, 0xd2, 0xae, 0xc6, 0x22, 0xb2, 0x15, 0x76, 0x68,
        0x52, 0xe5, 0xb0, 0xe4, 0xa9, 0x43, 0xc4, 0x4f, 0x17, 0x14, 0xc2, 0x9b, 0x4a, 0x57, 0x3a, 0x6f, 0x83, 0x64,
        0xb1, 0x10, 0x73, 0x6d, 0x6f, 0x0d, 0x99, 0xfa, 0x61, 0x4a, 0x5b, 0x6e, 0x95, 0xb6, 0xca, 0x36, 0x0b, 0x5a,
        0x73, 0xf6, 0x37, 0x85, 0x72, 0xde, 0x26, 0x65, 0xdc, 0x26, 0x6c, 0x70, 0x9d, 0x2d, 0x2a, 0x8a, 0xb1, 0xb5,
        0x0d, 0xc1, 0xd9, 0x99, 0x8f, 0x2d, 0x7b, 0x22, 0x83, 0x20, 0xa5, 0x5b, 0x51, 0xc4, 0xff, 0xd7, 0xb7, 0xe3,
        0x71, 0x39, 0x8a, 0x2c, 0xc4, 0x98, 0x1e, 0x29, 0x23, 0x4d, 0xa6, 0xad, 0x11, 0xd1, 0x59, 0xcc, 0x4c, 0x8b,
        0x23, 0xbd, 0x46, 0xec, 0xde, 0x19, 0xeb, 0x49, 0x0c, 0xaa, 0x71, 0x28, 0x50, 0x76, 0x11, 0x2a, 0x37, 0xd1,
        0xbf, 0x94, 0xf6, 0x16, 0x16, 0x4d, 0x4c, 0x7f, 0x6d, 0xe2, 0xe3, 0xe8, 0x5d, 0xc2, 0x08, 0xd4, 0x86, 0xfd,
        0x65, 0x91, 0x1a, 0xd4, 0x23, 0x6b, 0x7f, 0xa3, 0xcb, 0x20, 0x93, 0xce, 0x65, 0x64, 0x74, 0x42, 0x05, 0x0c,
        0x46, 0x27, 0x3a, 0x1a, 0x7c, 0x59, 0x60, 0x42, 0x04, 0x9a, 0x2f, 0x6c, 0xaf, 0xb5, 0x7f, 0x1a, 0xd2, 0xb9,
        0x62, 0x61, 0xc7, 0x9c, 0xb9, 0xd6, 0x55, 0x19, 0xe7, 0x07, 0xbe, 0x5b, 0xec, 0xce, 0x6f, 0xe9, 0x64, 0x43,
        0xd8, 0x72, 0xd1, 0xfe, 0x4e, 0xb2, 0x36, 0xba, 0x30, 0x16, 0x69, 0x4c, 0xcf, 0xaf, 0x00, 0x3a, 0xcd, 0x21,
        0x7f, 0xaf, 0xb5, 0x83, 0xde, 0xba, 0xe7, 0x23, 0xf3, 0x6f, 0xd4, 0xbd, 0xa4, 0xce, 0xe9, 0x64, 0x47, 0x59,
        0xa4, 0x31, 0xd1, 0x76, 0x6b, 0xb0, 0x06, 0x3a, 0x82, 0xde, 0x55, 0x61, 0x8f, 0xe7, 0xe9, 0xf1, 0x12, 0x0d,
        0xd8, 0xb2, 0xf0, 0x38, 0x3a, 0xb1, 0xe2, 0xcc, 0xfc, 0x86, 0x55, 0xe1, 0x2f, 0xe3, 0xf9, 0x20, 0x02, 0x8b,
        0xd9, 0xa0, 0xb4, 0x4a, 0xff, 0xed, 0xd7, 0x1f, 0xb6, 0xb2, 0x64, 0x0c, 0x5c, 0x31, 0x26, 0x2c, 0x3b, 0x54,
        0x4f, 0x2d, 0x8b, 0x24, 0x26, 0x88, 0x36, 0x62, 0x0a, 0x07, 0xc1, 0x1b, 0xf1, 0xfe, 0x00, 0x9b, 0x97, 0x9c,
        0x7a, 0x19, 0xad, 0x6d, 0xb2, 0xc5, 0x0e, 0xd3, 0x53, 0x55, 0x20, 0x83, 0x16, 0x86, 0xb0, 0x0a, 0xfb, 0x4b,
        0x2c, 0x37, 0x00, 0x24, 0xfd, 0x42, 0xf4, 0x26, 0x6d, 0x03, 0xa0, 0xb9, 0x34, 0xa2, 0x86, 0x4c, 0x74, 0x65,
        0xde, 0x90, 0x1c, 0xff, 0x20, 0x0b, 0x7a, 0x7c, 0xb8, 0x25, 0xdf, 0xb3, 0x4d, 0x79, 0x95, 0xde, 0x45, 0xe8,
        0xd5, 0xbb, 0xb0, 0xcf, 0xba, 0x25, 0x1e, 0xcb, 0xbe, 0x7d, 0x56, 0xe2, 0x4c, 0xc1, 0xc1, 0x37, 0xd2, 0x5f,
        0x70, 0x3c, 0x0e, 0xd6, 0x92, 0xab, 0xa8, 0x9c, 0xe1, 0x51, 0x72, 0xb2, 0x68, 0xb2, 0xf8, 0xa1, 0xdb, 0xb6,
        0x3b, 0xab, 0x7e, 0x5c, 0x9c, 0x86, 0xe3, 0x33, 0x74, 0x26, 0xe8, 0x63, 0xcc, 0x86, 0x67, 0xd5, 0x9f, 0xc8,
        0xb5, 0xfd, 0xf0, 0x4c, 0x4f, 0xc4, 0x65, 0x1e, 0x6c, 0x32, 0x9d, 0xfd, 0x89, 0xb3, 0xec, 0xda, 0x1c, 0xfb,
        0x81, 0x91, 0xcf, 0x1f, 0xac, 0xa7, 0x39, 0xa2, 0xe1, 0x17, 0x91, 0x67, 0x2c, 0x18, 0x66, 0x27, 0x64, 0xfb,
        0x58, 0xdb, 0x12, 0x46, 0x51, 0x46, 0x08, 0x14, 0xcd, 0x35, 0xa8, 0x8a, 0x66, 0xeb, 0x62, 0x0b, 0xcd, 0x5e,
        0x2c, 0xf4, 0xf2, 0x25, 0x3d, 0x74, 0x96, 0x30, 0xc7, 0xe1, 0xa1, 0xdb, 0xfd, 0x39, 0xd9, 0x8b, 0x16, 0x37,
        0x04, 0xcc, 0xaa, 0xd4, 0x5b, 0x7e, 0x90, 0x83, 0x78, 0x97, 0x95, 0x9f, 0x17, 0xf1, 0xaf, 0x2a, 0xc5, 0x0b,
        0x8b, 0x1c, 0xa6, 0xa7, 0xe3, 0x97, 0xe1, 0xa2, 0x93, 0xac, 0xfe, 0xeb, 0x94, 0x2d, 0x2e, 0xcc, 0xc2, 0xc2,
        0x83, 0xe9, 0xe1, 0x36, 0x52, 0x17, 0xda, 0x13, 0xfa, 0xfb, 0xe9, 0xb0, 0x61, 0x24, 0x0c, 0x9d, 0x15, 0xac,
        0x91, 0x61, 0xc8, 0x8c, 0xb8, 0x1f, 0xe8, 0x98, 0x0d, 0x4d, 0x79, 0x0a, 0x8b, 0x20, 0xe6, 0x9a, 0x9b, 0xbc,
        0x18, 0xf0, 0xf8, 0x41, 0xa6, 0x0e, 0xab, 0xe8, 0xcd, 0xd1, 0x0a, 0x8b, 0x16, 0xe6, 0x05, 0x36, 0x56, 0xbb,
        0xe4, 0x25, 0xc9, 0x0f, 0xf4, 0xcd, 0xd5, 0x6c, 0xe5, 0xbb, 0xa5, 0xac, 0xb1, 0xae, 0x28, 0xe7, 0xd7, 0xcd,
        0x69, 0x3c, 0xd3, 0x27, 0xb6, 0x7f, 0xc2, 0x5a, 0xcd, 0x9a, 0xf4, 0x64, 0xb5, 0x73, 0x36, 0x2f, 0x65, 0xc2,
        0xa5, 0xa9, 0xdc, 0x44, 0x5c, 0x39, 0x78, 0x21, 0xc1, 0x92, 0x9c, 0x5e, 0xb5, 0x1b, 0x2d, 0x2c, 0x76, 0x98,
        0x33, 0x01, 0x30, 0xd4, 0xa2, 0xe4, 0xcc, 0xef, 0x2b, 0x9a, 0x54, 0xb9, 0xaf, 0x27, 0x2b, 0x65, 0x49, 0x0a,
        0x08, 0x0f, 0x27, 0x7b, 0x77, 0xed, 0x10, 0xa0, 0xc8, 0x03, 0x44, 0xb9, 0xd3, 0xa4, 0x9d, 0xaf, 0x93, 0x37,
        0x82, 0x53, 0xab, 0xc1, 0x6a, 0x44, 0x9b, 0x67, 0xe6, 0xd7, 0x28, 0x4a, 0x93, 0x50, 0xca, 0xf5, 0x29, 0xca,
        0x4e, 0xd1, 0x54, 0x14, 0x53, 0x33, 0x4e, 0xef, 0x93, 0x83, 0x84, 0xe7, 0xbf, 0x66, 0x2c, 0x3f, 0x78, 0xbe,
        0x89, 0x7d, 0x62, 0xeb, 0xc8, 0xe5, 0x4a, 0x6d, 0x2c, 0xb4, 0xb0, 0xbe, 0x48, 0xcd, 0x7a, 0x71, 0x1c, 0x2e,
        0xee, 0x30, 0xd4, 0xd6, 0x0d, 0x7b, 0x1c, 0x32, 0xea, 0xdf, 0xb1, 0x38, 0x62, 0xa2, 0xaa, 0x22, 0x8c, 0x4c,
        0x5d, 0xf6, 0x97, 0x29, 0x96, 0x01, 0x0e, 0x7f, 0x3e, 0x43, 0xbb, 0xf2, 0x24, 0xb5, 0xf1, 0x9f, 0x8c, 0x3e,
        0x14, 0x16, 0x49, 0x4c, 0xa4, 0xab, 0x8f, 0x45, 0xc3, 0x8f, 0x86, 0xa1, 0x3f, 0xe7, 0x3a, 0xcc, 0x79, 0xf2,
        0x97, 0x22, 0x5f, 0x5d, 0xbf, 0xcb, 0xe2, 0x87, 0x89, 0xa6, 0x0b, 0x20, 0xa2, 0x3b, 0x14, 0xae, 0x32, 0x86,
        0x8e, 0x25, 0xee, 0x5f, 0x45, 0xaa, 0x9f, 0xba, 0x10, 0xdd, 0x51, 0x07, 0x05, 0xf7, 0x75, 0x48, 0xd8, 0x79,
        0xc2, 0x26, 0x54, 0xfc, 0x58, 0x34, 0x9c, 0x6f, 0xd9, 0x63, 0x88, 0xad, 0xf9, 0x99, 0xc2, 0xa7, 0x3d, 0x1f,
        0xf5, 0x96, 0x9a, 0x77, 0xa9, 0x23, 0xd6, 0x02, 0xe6, 0x4c, 0x4f, 0xda, 0xb8, 0x00, 0x55, 0xa5, 0x59, 0x94,
        0x77, 0xae, 0x1a, 0x25, 0x8d, 0x06, 0x7e, 0xba, 0xcd, 0xaf, 0xa9, 0xbc, 0x0c, 0x28, 0xce, 0xe2, 0x24, 0x8a,
        0x73, 0x96, 0x22, 0xf5, 0x7f, 0x84, 0xfb, 0x44, 0x1e, 0x52, 0xd8, 0xb6, 0x68, 0x9c, 0xc5, 0xd7, 0x11, 0xfa,
        0x9c, 0x99, 0x7c, 0x35, 0xc4, 0xfa, 0xcf, 0x13, 0x8a, 0x65, 0x5e, 0x54, 0x7a, 0x5a, 0xc4, 0x2f, 0x67, 0x62,
        0x5d, 0xbd, 0x38, 0xf2, 0xf0, 0x43, 0x66, 0xfd, 0x45, 0x61, 0x12, 0x4f, 0xc9, 0xe1, 0x5f, 0x58, 0x24, 0x2f,
        0x67, 0xda, 0xda, 0x2e, 0x9c, 0x0c, 0x25, 0xa5, 0x1c, 0x4e, 0x06, 0x5c, 0xdc, 0x92, 0xdc, 0x4a, 0x16, 0xb2,
        0xd3, 0xbf, 0x16, 0x4b, 0x83, 0x6d, 0xf9, 0x41, 0xe4, 0x92, 0xfa, 0xa6, 0xdd, 0x3f, 0x1b, 0xab, 0x9e, 0x10,
        0x57, 0x4d, 0x65, 0x4f, 0x48, 0xe9, 0x9e, 0xce, 0x72, 0xb2, 0xce, 0x4b, 0x22, 0x5e, 0x61, 0xb1, 0xbb, 0x04,
        0xd4, 0x44, 0x64, 0x1a, 0x71, 0xa1, 0xbb, 0x96, 0xc5, 0x38, 0x1e, 0x86, 0x17, 0xc8, 0x97, 0xdb, 0x75, 0x98,
        0x99, 0xa4, 0xdb, 0x6b, 0x93, 0x2b, 0x39, 0x12, 0x98, 0x61, 0x67, 0xa5, 0x52, 0x6c, 0x71, 0x97, 0x84, 0x98,
        0x85, 0xf5, 0x72, 0x36, 0x08, 0x0f, 0xfe, 0xe5, 0x9c, 0x69, 0x67, 0x2d, 0x5c, 0x82, 0x60, 0x8d, 0xf4, 0xb9,
        0x16, 0xc2, 0xb3, 0xbf, 0x66, 0xf1, 0x73, 0x73, 0x61, 0xae, 0x52, 0x4b, 0x45, 0xaf, 0x16, 0xa4, 0x3c, 0xbd,
        0x5a, 0x7a, 0x1f, 0xb7, 0x12, 0x3c, 0x7c, 0x3c, 0xe7, 0x0e, 0xe3, 0x64, 0x59, 0x52, 0xcc, 0x87, 0x34, 0xe4,
        0x3c, 0x21, 0xc3, 0xba, 0xc8, 0xe2, 0xe7, 0xe6, 0xd5, 0xb6, 0x81, 0x92, 0xf5, 0xed, 0xa4, 0x5e, 0xa6, 0x94,
        0x30, 0x41, 0x56, 0xbd, 0x40, 0xab, 0x4a, 0xa7, 0xb0, 0xc5, 0xf0, 0x40, 0x23, 0x56, 0x65, 0x15, 0x97, 0x1b,
        0x89, 0xdd, 0xe0, 0x2b, 0x3a, 0x2f, 0x0e, 0xa3, 0xc5, 0x8a, 0x92, 0xea, 0xf9, 0x68, 0x22, 0xd4, 0xe2, 0x73,
        0x39, 0x93, 0xa9, 0x42, 0xc9, 0x64, 0xce, 0xac, 0x28, 0x76, 0x49, 0xf0, 0x16, 0x3d, 0x85, 0xc5, 0xde, 0xd2,
        0xdf, 0xe2, 0xdc, 0x15, 0x68, 0xf8, 0x8c, 0x33, 0x3f, 0x39, 0xcb, 0xbd, 0xfb, 0x17, 0xfe, 0x03, 0x95, 0xca,
        0x8a, 0xe0, 0xec, 0x49, 0x82, 0x3a, 0x22, 0x74, 0xda, 0x85, 0x89, 0x45, 0x08, 0xc8, 0x33, 0xc1, 0x7e, 0x17,
        0x5b, 0x7c, 0x8f, 0x14, 0x82, 0x87, 0x81, 0xa1, 0x33, 0x36, 0xf1, 0xd0, 0x88, 0xda, 0xb8, 0x14, 0x10, 0x16,
        0xad, 0xb3, 0x30, 0x62, 0x14, 0x4b, 0x67, 0xcb, 0x9c, 0x8d, 0xa8, 0x3b, 0xea, 0x93, 0x4b, 0xf0, 0x38, 0xd5,
        0x3c, 0x5d, 0xd0, 0x69, 0xfd, 0x9a, 0x32, 0x78, 0x8b, 0xd6, 0x19, 0x1b, 0x34, 0xe5, 0x0a, 0xa4, 0x53, 0xf6,
        0xfb, 0x6e, 0xf1, 0xce, 0xea, 0x5d, 0x18, 0x88, 0xc1, 0xa5, 0x7c, 0x01, 0x7c, 0xe7, 0x37, 0x68, 0x4f, 0x73,
        0xb9, 0xbf, 0x59, 0x1c, 0xaa, 0x68, 0x9d, 0xa5, 0x45, 0xeb, 0x5a, 0x73, 0x0f, 0xbb, 0xef, 0x97, 0xec, 0x79,
        0xc7, 0x47, 0x3b, 0xe7, 0x4b, 0xfe, 0x25, 0xce, 0x0c, 0xfa, 0xfc, 0x80, 0xd1, 0xfe, 0x31, 0xcc, 0xef, 0x36,
        0x5f, 0xdf, 0x9c, 0x37, 0x3b, 0xe7, 0x4d, 0x3e, 0x11, 0xd7, 0x4e, 0x0c, 0x97, 0x92, 0xe5, 0xc3, 0x50, 0xf9,
        0xbd, 0x8a, 0xce, 0x24, 0xbc, 0x7a, 0xac, 0x65, 0xdc, 0xcf, 0xb8, 0x0d, 0xca, 0x9d, 0x46, 0x7a, 0x34, 0x7a,
        0x88, 0xc1, 0x02, 0x6f, 0x39, 0x7b, 0x32, 0x47, 0xf3, 0xb9, 0x82, 0x2f, 0x87, 0x59, 0x5a, 0xbf, 0x29, 0x2b,
        0x6e, 0x2c, 0xd3, 0xe3, 0xd8, 0xcf, 0xde, 0x55, 0x81, 0x09, 0xca, 0x38, 0x49, 0x68, 0x9d, 0x33, 0x54, 0xe8,
        0x16, 0x8b, 0x45, 0xe7, 0x00, 0x84, 0x9a, 0x86, 0x2c, 0x22, 0x23, 0x19, 0xd9, 0x9d, 0x3c, 0x30, 0xef, 0x42,
        0xc4, 0xc4, 0x42, 0x74, 0xb9, 0x26, 0xe4, 0x04, 0xfd, 0x83, 0x2d, 0x98, 0x99, 0xcf, 0xf1, 0xd5, 0xe6, 0x8f,
        0xe4, 0x27, 0xc1, 0xbf, 0xc6, 0x4e, 0x82, 0x85, 0x45, 0xe4, 0xd2, 0xd3, 0x79, 0x24, 0xaf, 0xb7, 0x25, 0x9c,
        0x2a, 0x62, 0x59, 0xde, 0xce, 0x2c, 0xd3, 0x66, 0xb1, 0x07, 0xbd, 0xf2, 0xa8, 0x1d, 0x7a, 0xf1, 0x58, 0x3f,
        0x03, 0x9c, 0xa8, 0xaa, 0x10, 0x96, 0xd4, 0xa3, 0xd5, 0x82, 0x75, 0x09, 0xa5, 0x8a, 0xb0, 0xad, 0x28, 0x03,
        0x16, 0x46, 0xd7, 0x9e, 0xd8, 0x5e, 0x52, 0x80, 0x2c, 0x25, 0xde, 0x0c, 0xa4, 0x5a, 0x9e, 0x1d, 0xbd, 0x76,
        0x7c, 0x24, 0x43, 0xcb, 0x02, 0x79, 0x09, 0x29, 0x8e, 0x18, 0x5d, 0x06, 0x8a, 0x56, 0xfd, 0x3c, 0xc9, 0xa6,
        0x7e, 0x18, 0xff, 0x0c, 0x66, 0xa4, 0x05, 0xee, 0xf0, 0xac, 0x58, 0x69, 0x6d, 0x5c, 0x3f, 0x36, 0xeb, 0x17,
        0xd6, 0xfc, 0xe1, 0x86, 0xd8, 0xd2, 0xed, 0x59, 0x5b, 0x09, 0x18, 0x59, 0x97, 0xc8, 0x90, 0x87, 0x52, 0xc5,
        0x49, 0x2e, 0xaa, 0x2d, 0xbb, 0xee, 0xa5, 0xdb, 0x01, 0x6c, 0xcc, 0x1f, 0x79, 0x79, 0xd6, 0xcb, 0x74, 0x61,
        0x46, 0x0f, 0x2d, 0x15, 0xcc, 0xce, 0x55, 0xa3, 0x6e, 0xa5, 0x05, 0xf4, 0x8c, 0x3e, 0x8f, 0xab, 0x8d, 0xa4,
        0x94, 0xd6, 0xdb, 0x86, 0x8e, 0x29, 0xb8, 0x23, 0x88, 0x7a, 0x5f, 0x87, 0x05, 0xec, 0x72, 0x26, 0x99, 0xd4,
        0xbb, 0x38, 0x96, 0x32, 0xdb, 0x52, 0xa9, 0x49, 0xfb, 0xfa, 0x33, 0x5e, 0xb3, 0x4d, 0x5d, 0xee, 0x9c, 0x89,
        0x51, 0x97, 0x11, 0x8c, 0x43, 0x26, 0x88, 0xe8, 0xa5, 0x7a, 0x50, 0xd4, 0xe1, 0xc3, 0xb9, 0x63, 0x01, 0xeb,
        0x70, 0xb0, 0xb2, 0x65, 0x16, 0x72, 0xbf, 0x53, 0x14, 0x67, 0x58, 0x91, 0x04, 0xd1, 0xdf, 0x56, 0xe9, 0xbe,
        0x2e, 0xdc, 0xad, 0x69, 0x6c, 0xa3, 0x7e, 0x09, 0x2b, 0xa3, 0x7a, 0x4a, 0xc5, 0x99, 0xe5, 0xce, 0x19, 0x98,
        0x64, 0x91, 0x55, 0x78, 0xb3, 0x46, 0xf7, 0xff, 0x37, 0x1a, 0xe7, 0x63, 0x10, 0x55, 0x71, 0x42, 0xa9, 0x23,
        0x64, 0xd0, 0xd9, 0xd5, 0x5d, 0x33, 0xff, 0x37, 0xd4, 0xce, 0xae, 0xb0, 0xdb, 0x56, 0xcb, 0x21, 0xf6, 0xd6,
        0x2e, 0x4f, 0x97, 0xd6, 0x7c, 0x76, 0x47, 0x50, 0xb9, 0x73, 0x5e, 0xe4, 0x63, 0x0b, 0x2f, 0x32, 0xa5, 0xa2,
        0xb2, 0xa4, 0x65, 0xab, 0xfa, 0x78, 0x67, 0x34, 0xc6, 0x82, 0xf6, 0x48, 0x13, 0x69, 0x10, 0x1e, 0xa4, 0x03,
        0xe6, 0xbf, 0xbb, 0x78, 0x44, 0x39, 0xeb, 0xc2, 0xdb, 0x93, 0xec, 0x1e, 0x18, 0x8b, 0xd5, 0x25, 0xd2, 0x22,
        0x62, 0x99, 0x37, 0xef, 0x47, 0x3d, 0xda, 0x94, 0x2e, 0xc9, 0xb1, 0xd2, 0x02, 0x71, 0x39, 0x3b, 0xfc, 0x96,
        0xc1, 0xca, 0xae, 0x21, 0x7e, 0x78, 0x29, 0xc1, 0x8f, 0x43, 0xba, 0x24, 0x4b, 0x07, 0x33, 0xec, 0xe5, 0x60,
        0xe8, 0xb1, 0x9e, 0xe9, 0x12, 0x2b, 0x3a, 0xff, 0x27, 0x03, 0xcc, 0x12, 0x60, 0xc6, 0x4b, 0xe4, 0x02, 0x20,
        0xf4, 0x14, 0xf8, 0x2e, 0x3f, 0xf4, 0xd6, 0x63, 0x66, 0xf1, 0xe8, 0x97, 0x16, 0x8f, 0x4b, 0x4f, 0xb5, 0x91,
        0x0c, 0xe9, 0x84, 0xbb, 0xa5, 0xd3, 0xf0, 0x4f, 0xfd, 0x84, 0xda, 0x37, 0x2d, 0x42, 0xb9, 0xf4, 0x28, 0x9b,
        0xf0, 0x8a, 0x87, 0xd2, 0x02, 0x6f, 0x89, 0x6c, 0xf5, 0xfa, 0x56, 0x5d, 0xdb, 0xe3, 0x99, 0x09, 0x3b, 0x56,
        0x6c, 0xfe, 0x74, 0x33, 0x2f, 0x5d, 0x62, 0x43, 0x0b, 0xbb, 0x25, 0x82, 0x38, 0x12, 0x18, 0x7d, 0x50, 0x21,
        0x7f, 0xc0, 0x87, 0xd3, 0xf5, 0xf1, 0xfe, 0x53, 0x3f, 0xf7, 0x97, 0xfe, 0xc8, 0x56, 0xa4, 0x66, 0x3d, 0x32,
        0x8f, 0x13, 0x7b, 0xdc, 0xf0, 0xaa, 0x84, 0x47, 0xf2, 0x15, 0x5e, 0xa1, 0xb5, 0xf7, 0x48, 0x9d, 0x48, 0xca,
        0x40, 0xb2, 0x6f, 0xd5, 0x05, 0xf8, 0x71, 0x48, 0x45, 0xbc, 0x3e, 0xbf, 0x75, 0x82, 0x13, 0x15, 0x66, 0x17,
        0x74, 0x1a, 0x66, 0x73, 0x94, 0x38, 0xa7, 0x7d, 0x97, 0xf8, 0xf5, 0x5c, 0x3d, 0x72, 0x6c, 0x59, 0x96, 0x3f,
        0x69, 0xfa, 0x27, 0x25, 0x90, 0x01, 0x36, 0x0e, 0x88, 0x60, 0xf9, 0x2e, 0x02, 0x8a, 0x05, 0x93, 0xeb, 0x35,
        0x13, 0x49, 0x71, 0x49, 0xc3, 0x63, 0x14, 0x14, 0xf8, 0xd0, 0x98, 0x6e, 0xb3, 0x3b, 0xeb, 0x0c, 0xd3, 0x59,
        0x9b, 0x10, 0xf1, 0x9b, 0xc5, 0x04, 0x64, 0xd4, 0x08, 0x5a, 0x33, 0xd5, 0xd0, 0x7b, 0x59, 0x88, 0x10, 0x04,
        0xa5, 0x53, 0x6d, 0xb2, 0x24, 0x82, 0x32, 0x73, 0xbe, 0x06, 0x5d, 0x11, 0x07, 0xc7, 0x2e, 0x22, 0xd0, 0xa7,
        0x4f, 0xb8, 0x74, 0x52, 0x54, 0x8b, 0xad, 0x96, 0x5d, 0xc3, 0x39, 0xa7, 0x41, 0x0f, 0x5c, 0x8f, 0x89, 0xda,
        0xbc, 0x07, 0x1c, 0x92, 0xe0, 0x92, 0xa1, 0x47, 0xa5, 0x1f, 0xd6, 0x5d, 0x85, 0x6f, 0xee, 0xcc, 0x4f, 0xb0,
        0xb8, 0x03, 0x99, 0xa1, 0xb1, 0xb3, 0x3e, 0xc5, 0x16, 0x43, 0xa1, 0x8e, 0x7a, 0x33, 0xd7, 0x4f, 0x2a, 0xd1,
        0x2b, 0x73, 0x67, 0x78, 0xd1, 0x8c, 0xf2, 0x66, 0x35, 0x44, 0xd8, 0x00, 0x85, 0xa9, 0xfc, 0x28, 0xcd, 0x40,
        0x6e, 0x30, 0xc5, 0x30, 0x18, 0x3f, 0x6e, 0xc3, 0xdc, 0xd9, 0x9f, 0x34, 0x71, 0x1b, 0xa2, 0xcc, 0x6b, 0x67,
        0xf1, 0x8f, 0xff, 0x07, 0x4c, 0x92, 0x02, 0xb9, 0x33, 0xbf, 0x48, 0xd0, 0xba, 0x59, 0xa1, 0x58, 0x96, 0xf9,
        0x62, 0x8d, 0x91, 0x4d, 0x53, 0x73, 0x2b, 0xb5, 0xac, 0xe1, 0x80, 0x8e, 0x3b, 0xfc, 0x9d, 0x1a, 0x7b, 0x3e,
        0x48, 0xdf, 0x19, 0xaa, 0x40, 0x39, 0xbc, 0xb6, 0x5c, 0x2d, 0xe9, 0x25, 0x13, 0xc3, 0xd8, 0x32, 0xb9, 0x9f,
        0x26, 0x99, 0xfe, 0xc7, 0xb4, 0x92, 0x16, 0xb2, 0xb3, 0x67, 0x83, 0x5c, 0x6e, 0x20, 0xb2, 0xd8, 0xa3, 0xd7,
        0xee, 0x38, 0xc4, 0x19, 0xa9, 0x4d, 0x3a, 0x7c, 0x77, 0x19, 0x44, 0xed, 0x10, 0xa0, 0x68, 0x23, 0x44, 0xa5,
        0x77, 0x78, 0x89, 0x8a, 0xa2, 0xde, 0xdf, 0x70, 0x06, 0xd3, 0x2d, 0x2a, 0x9f, 0xa6, 0xb1, 0xf1, 0x8d, 0x77,
        0x2c, 0x3a, 0xf6, 0xb7, 0xf3, 0xfe, 0xc9, 0xa0, 0x1b, 0x87, 0x06, 0x52, 0x1e, 0xa1, 0x21, 0x06, 0x77, 0x4b,
        0xaa, 0x65, 0xaf, 0x9d, 0x51, 0x10, 0x3d, 0x7a, 0x15, 0x7e, 0xba, 0x6e, 0xad, 0x0b, 0xf5, 0xe3, 0xed, 0xec,
        0x8e, 0x89, 0xd2, 0x42, 0x7d, 0x89, 0x3c, 0xe2, 0xa1, 0x34, 0x3a, 0xb7, 0x22, 0x16, 0x46, 0x58, 0xac, 0x81,
        0x4d, 0xe8, 0x13, 0x83, 0xf9, 0xeb, 0x2f, 0x76, 0x9d, 0x8b, 0x01, 0x76, 0x09, 0x90, 0xf4, 0x4d, 0x04, 0xcc,
        0xb7, 0x6d, 0x4d, 0xff, 0xd6, 0x74, 0xb0, 0xe2, 0x5b, 0x3d, 0xde, 0x53, 0x98, 0xcf, 0x1e, 0x29, 0x22, 0x8d,
        0x1c, 0x0a, 0x18, 0xe3, 0xf7, 0x70, 0x77, 0x9f, 0x06, 0x33, 0x43, 0x4c, 0x16, 0xa7, 0xc0, 0x1e, 0x9b, 0xc1,
        0xb6, 0x65, 0x1c, 0x7c, 0xde, 0x68, 0x07, 0xcb, 0x0f, 0xd7, 0xe9, 0xf9, 0x8b, 0x8d, 0xfe, 0xbf, 0xda, 0x61,
        0xcc, 0x88, 0x80, 0x47, 0x8b, 0x39, 0xa3, 0xea, 0xfa, 0x2d, 0x53, 0x58, 0xcf, 0x08, 0xe3, 0x8a, 0xe5, 0xdd,
        0xb6, 0x62, 0x3a, 0x20, 0x0c, 0xb0, 0xa4, 0x26, 0x5d, 0x9f, 0xd0, 0x46, 0x4e, 0x2f, 0x4a, 0x43, 0x0b, 0x78,
        0x91, 0xcd, 0x56, 0x7f, 0x53, 0xa6, 0xa8, 0x9e, 0x51, 0xc6, 0x8f, 0x41, 0xa1, 0x0b, 0x14, 0x36, 0xad, 0x7b,
        0x48, 0x35, 0xf4, 0xd6, 0xf8, 0x01, 0x01, 0x43, 0x11, 0x09, 0x47, 0x76, 0x36, 0xf4, 0x54, 0x83, 0x32, 0x45,
        0xf6, 0x94, 0xba, 0x8d, 0xec, 0x58, 0xe4, 0xa8, 0xdb, 0xd2, 0x0d, 0x27, 0x74, 0xda, 0xb5, 0xe3, 0xb3, 0x6e,
        0x80, 0x06, 0xe2, 0x3c, 0x4d, 0x9a, 0x2e, 0x82, 0xe0, 0x56, 0xa4, 0xda, 0xb5, 0x41, 0x46, 0x5f, 0x4e, 0xc3,
        0x76, 0xf1, 0x45, 0xe1, 0x4e, 0xa5, 0x83, 0xc1, 0x38, 0x5f, 0xa3, 0x55, 0x52, 0x17, 0xc7, 0xc2, 0x9e, 0xd2,
        0xa5, 0xe5, 0xa2, 0x3c, 0xd9, 0x65, 0x55, 0x49, 0x81, 0x28, 0x9c, 0x69, 0xf9, 0x58, 0x1d, 0xe9, 0x78, 0x9f,
        0xdc, 0x67, 0x0e, 0xd7, 0xbf, 0xf9, 0xb5, 0x81, 0xb7, 0xe7, 0x67, 0x59, 0x24, 0xed, 0xfa, 0xb6, 0xea, 0x76,
        0xcb, 0x2c, 0x16, 0x88, 0x16, 0xcf, 0x5a, 0x2b, 0x0b, 0x67, 0x65, 0x82, 0x46, 0x6e, 0x28, 0x1b, 0x31, 0x4a,
        0xab, 0x64, 0x8f, 0x68, 0x1f, 0x7a, 0x0d, 0x18, 0xa3, 0x04, 0xdf, 0xc8, 0x9d, 0x71, 0xf9, 0x74, 0x64, 0x5c,
        0x88, 0x3a, 0xf0, 0xe8, 0x0f, 0x08, 0xe6, 0x9d, 0x96, 0xab, 0x23, 0xcb, 0xd2, 0x19, 0x97, 0x8f, 0xc4, 0x57,
        0x8a, 0x34, 0xa4, 0x63, 0xd3, 0xea, 0x85, 0xcf, 0xb7, 0x2b, 0xc2, 0xb5, 0x57, 0xc4, 0x61, 0x0e, 0x63, 0x4a,
        0x43, 0x2d, 0x4b, 0xe7, 0x60, 0x3e, 0x1f, 0x5f, 0x0a, 0xdd, 0xd2, 0xf2, 0x03, 0x1c, 0x80, 0xe9, 0x0a, 0x7e,
        0x83, 0x62, 0xe9, 0x4c, 0xcb, 0x67, 0x23, 0xd3, 0x56, 0xd8, 0x47, 0x0d, 0x1d, 0x64, 0xe8, 0xc6, 0xa2, 0x05,
        0xa0, 0x50, 0xe9, 0x94, 0xd0, 0x59, 0x94, 0xcf, 0x45, 0x76, 0x10, 0xf1, 0xdb, 0x62, 0x99, 0xf5, 0xb2, 0xe0,
        0x25, 0x4d, 0x52, 0xeb, 0x10, 0x06, 0xcd, 0x4f, 0x67, 0x87, 0xf1, 0xe1, 0x3c, 0x5c, 0xf4, 0xe6, 0xd3, 0xb2,
        0x74, 0x1e, 0x25, 0xf9, 0x6a, 0x20, 0x35, 0x6e, 0x39, 0xc3, 0xeb, 0x79, 0x5d, 0x8d, 0xd7, 0x25, 0x6c, 0xbd,
        0xcf, 0x9e, 0x96, 0x61, 0x6d, 0x97, 0xc6, 0x69, 0x65, 0xe9, 0xdc, 0x4a, 0xea, 0x32, 0xc2, 0x41, 0x71, 0xd7,
        0xca, 0xe1, 0xf9, 0x86, 0xcb, 0x71, 0x96, 0x42, 0x07, 0x1e, 0x0b, 0x88, 0x44, 0xf7, 0x1b, 0xdc, 0x35, 0x6d,
        0x7f, 0x5f, 0x02, 0xc9, 0x65, 0xe9, 0xdc, 0x4b, 0x94, 0x65, 0x63, 0xb6, 0xf0, 0xa9, 0xb1, 0xbd, 0xfe, 0xdf,
        0x97, 0xd0, 0xcc, 0xcb, 0x60, 0x7d, 0x86, 0xae, 0x9f, 0xf7, 0x38, 0xd3, 0x6d, 0x9e, 0xc2, 0x7b, 0x46, 0xdc,
        0x44, 0xb4, 0x02, 0x19, 0xc5, 0x6c, 0x40, 0x8c, 0xc8, 0xc1, 0x8b, 0x6e, 0x21, 0xb1, 0x67, 0xb5, 0x6f, 0xd1,
        0xdb, 0x37, 0xa9, 0xa2, 0x0b, 0x57, 0x40, 0x6c, 0x51, 0xd9, 0xff, 0xb2, 0xac, 0x69, 0xeb, 0xb0, 0x40, 0x59,
        0x0d, 0x52, 0x04, 0x7e, 0x56, 0x1a, 0x43, 0x3c, 0x4c, 0x47, 0xbd, 0x59, 0xf8, 0x7f, 0xe0, 0xad, 0xce, 0xa1,
        0x40, 0x59, 0x47, 0x28, 0x39, 0x16, 0xe1, 0x73, 0xfa, 0x11, 0x8a, 0x02, 0x1a, 0xc8, 0x0c, 0x33, 0x6b, 0x2f,
        0xd4, 0xd7, 0xfb, 0xd2, 0x5f, 0x0e, 0x68, 0xfe, 0xc5, 0x34, 0xc9, 0xcb, 0xe6, 0x22, 0xa7, 0xd2, 0x6c, 0x3f,
        0x23, 0x70, 0x66, 0x3e, 0xcd, 0x32, 0x85, 0xff, 0x0c, 0xae, 0x0a, 0xf8, 0xd9, 0x4e, 0x6f, 0x88, 0xf1, 0xce,
        0xed, 0xac, 0x79, 0xb8, 0x9d, 0xcf, 0xd1, 0x41, 0x8e, 0x59, 0x5e, 0x44, 0x54, 0x8a, 0xff, 0x19, 0x71, 0x9c,
        0x4f, 0xd8, 0xf9, 0x38, 0x33, 0xd1, 0xbd, 0x84, 0x17, 0x29, 0xba, 0xeb, 0x88, 0x8d, 0x84, 0xf5, 0x86, 0x57,
        0x66, 0xb5, 0x59, 0xe4, 0xa8, 0x4c, 0xd1, 0x41, 0xa3, 0xcd, 0x23, 0x18, 0xfa, 0xd5, 0xd7, 0xde, 0x5e, 0xd0,
        0x54, 0x00, 0x1e, 0x2b, 0xab, 0xd9, 0x4b, 0xc1, 0x40, 0xa3, 0x68, 0x23, 0x84, 0x95, 0x51, 0xde, 0xb1, 0xe2,
        0x7e, 0xb9, 0x7c, 0xc2, 0x1a, 0x67, 0x3c, 0x08, 0xc7, 0x21, 0x50, 0x70, 0xbb, 0xec, 0x3d, 0x69, 0x4b, 0xce,
        0x61, 0x5e, 0xa8, 0x3c, 0x31, 0xb9, 0xf0, 0x49, 0x59, 0x28, 0x05, 0x0e, 0x0d, 0x31, 0xae, 0x75, 0xd6, 0x69,
        0x7b, 0x49, 0xde, 0xaa, 0x19, 0x13, 0x36, 0xe2, 0x45, 0x02, 0x36, 0xd0, 0xca, 0x51, 0x40, 0x14, 0x97, 0x01,
        0x57, 0x0c, 0xe6, 0xaa, 0xec, 0x1c, 0xed, 0x72, 0x80, 0x85, 0xac, 0x4e, 0x64, 0xb9, 0x98, 0x3f, 0x45, 0x7c,
        0x39, 0xd3, 0x24, 0x6a, 0x53, 0x24, 0xe8, 0x00, 0x54, 0xef, 0x3d, 0x2f, 0x99, 0xd2, 0xc2, 0xa1, 0xb2, 0x72,
        0xf6, 0xe7, 0xd3, 0x71, 0x7a, 0x70, 0x16, 0x43, 0x23, 0xed, 0x2f, 0xb8, 0x65, 0x95, 0xde, 0xa8, 0xf3, 0x8d,
        0x8d, 0xea, 0xd1, 0xe8, 0x0d, 0x49, 0x5c, 0xf3, 0xd6, 0x13, 0x51, 0x92, 0x85, 0x5f, 0x39, 0xdf, 0x93, 0x3c,
        0xae, 0x58, 0x8e, 0x04, 0xe2, 0x4c, 0x53, 0x50, 0xed, 0x61, 0xe7, 0x6c, 0x39, 0x13, 0x9b, 0x2a, 0xf2, 0x0a,
        0x3c, 0x9a, 0x65, 0x16, 0xf2, 0x55, 0xcb, 0xda, 0xd9, 0xb4, 0x44, 0x4e, 0x5c, 0xdc, 0x06, 0xb8, 0xbb, 0x00,
        0xb2, 0x0b, 0x5e, 0x2e, 0xbb, 0x91, 0x5d, 0x7d, 0xfe, 0x96, 0xc0, 0xfa, 0x99, 0xaa, 0x60, 0x78, 0xce, 0xa8,
        0x24, 0x5f, 0xe1, 0x41, 0xaf, 0xe6, 0x7d, 0x7a, 0xf3, 0x0b, 0x3e, 0x97, 0x5a, 0x93, 0x9e, 0xed, 0x96, 0xfb,
        0x07, 0x65, 0xd1, 0x3b, 0xc1, 0x95, 0xb5, 0xb3, 0x29, 0x28, 0xc3, 0xd9, 0xde, 0x6a, 0x16, 0x48, 0x65, 0xe7,
        0x22, 0x52, 0x97, 0xe7, 0x70, 0xd9, 0x9f, 0xea, 0xc6, 0xee, 0xcc, 0x4a, 0x8d, 0xcd, 0x2f, 0xd3, 0xf3, 0x12,
        0x8e, 0x2b, 0x6b, 0x67, 0x60, 0x62, 0xc5, 0x49, 0x42, 0x83, 0xac, 0x98, 0xcd, 0x93, 0xd4, 0xf4, 0xe1, 0x38,
        0x87, 0x64, 0x51, 0x1b, 0xa3, 0x33, 0x29, 0xa2, 0x30, 0xc1, 0x8c, 0xb3, 0x7e, 0xc8, 0xf2, 0x09, 0xff, 0xae,
        0xbe, 0x36, 0x1a, 0x0f, 0x87, 0x4b, 0x7f, 0x12, 0x79, 0xbc, 0x47, 0x91, 0xf3, 0xdb, 0x37, 0xa7, 0x71, 0xfe,
        0xcf, 0xdb, 0xe1, 0x71, 0xb0, 0x62, 0xf7, 0x79, 0xbc, 0xde, 0x96, 0x48, 0x41, 0x59, 0x3b, 0xe7, 0x12, 0x69,
        0x05, 0x8d, 0x9e, 0x14, 0xcd, 0x7f, 0x73, 0xcd, 0x62, 0x59, 0x3b, 0xdf, 0xf2, 0xf6, 0xa4, 0x5d, 0x24, 0xb2,
        0x7c, 0x58, 0x64, 0xc3, 0x5d, 0x79, 0x61, 0xdc, 0xf7, 0x3e, 0xd3, 0xce, 0xae, 0xd5, 0x2a, 0xcd, 0x35, 0x67,
        0x0e, 0x1d, 0x6b, 0x36, 0xed, 0xda, 0x4d, 0xee, 0x34, 0xed, 0xda, 0xb7, 0x4f, 0xf7, 0xe1, 0xde, 0x96, 0x40,
        0x52, 0x99, 0x22, 0x79, 0x46, 0x58, 0x44, 0xa4, 0x52, 0x3b, 0xcd, 0x78, 0x61, 0xf1, 0x57, 0x9b, 0xaf, 0xcd,
        0x67, 0xcb, 0x4e, 0xe8, 0x5a, 0xf6, 0xa1, 0x9e, 0x91, 0xa4, 0x1a, 0xa5, 0x88, 0x9e, 0x51, 0x77, 0x11, 0xae,
        0xd6, 0x80, 0xfe, 0xe7, 0xab, 0x94, 0x4c, 0x22, 0x01, 0x7a, 0xfb, 0x46, 0x2f, 0x99, 0x97, 0x73, 0x99, 0x97,
        0xd3, 0x58, 0x25, 0x55, 0x7f, 0x35, 0xde, 0x4f, 0x31, 0x3e, 0x82, 0x85, 0x6b, 0x54, 0xf1, 0x43, 0xab, 0x37,
        0xb0, 0xc5, 0x19, 0xde, 0x2c, 0x4d, 0x6b, 0x97, 0x3e, 0x92, 0x65, 0x8a, 0xf1, 0x19, 0x4d, 0x9c, 0x3b, 0x24,
        0x86, 0x32, 0xb8, 0x3c, 0x6d, 0xad, 0xb2, 0xeb, 0x30, 0xe9, 0x45, 0x1d, 0x7a, 0xdc, 0xb3, 0xc1, 0x95, 0x82,
        0xe4, 0x09, 0x84, 0x34, 0x75, 0x04, 0xc1, 0xad, 0xcb, 0x85, 0x26, 0x61, 0xd1, 0xa4, 0x82, 0x2d, 0xb1, 0xb9,
        0x9b, 0xd9, 0x13, 0x40, 0x0c, 0x8e, 0x27, 0x17, 0x12, 0x29, 0x88, 0x67, 0x34, 0x55, 0x04, 0xa9, 0xb6, 0xbb,
        0x92, 0xe9, 0xf2, 0x93, 0x3d, 0x5b, 0xfa, 0xb3, 0xf8, 0x53, 0x19, 0x9f, 0x45, 0x27, 0x79, 0x8b, 0xd2, 0x9f,
        0x7a, 0xcb, 0xae, 0xe7, 0x4d, 0xca, 0x0b, 0xdb, 0xa7, 0x80, 0x9d, 0x3d, 0xdd, 0x46, 0xf2, 0x16, 0xad, 0xb1,
        0xf4, 0x3e, 0xab, 0x0d, 0x3b, 0x43, 0x2b, 0xb1, 0xb9, 0x4c, 0xf7, 0x97, 0xf1, 0x61, 0xdc, 0xa7, 0xcf, 0xae,
        0x13, 0x4c, 0x9e, 0xad, 0x72, 0x05, 0x3a, 0x8a, 0xdd, 0xb2, 0x55, 0xe1, 0x83, 0x30, 0xad, 0x35, 0x29, 0x19,
        0x2d, 0x6b, 0xb1, 0x4c, 0x01, 0x3d, 0x7d, 0x72, 0x69, 0x22, 0x86, 0x1f, 0x6a, 0xdc, 0x0c, 0xed, 0x6b, 0x67,
        0xab, 0x86, 0xeb, 0x96, 0x5f, 0x75, 0xfb, 0xea, 0x6d, 0xf5, 0xc7, 0xf1, 0x41, 0x6b, 0xe2, 0x70, 0xf5, 0xfb,
        0x99, 0x53, 0xf9, 0x2a, 0x1f, 0x3c, 0xfb, 0x09, 0xde, 0x38, 0x2f, 0x13, 0x31, 0xce, 0x67, 0x81, 0x8e, 0x63,
        0xa5, 0x97, 0xd4, 0xd2, 0x72, 0x14, 0xb1, 0x30, 0x9d, 0xa7, 0x0b, 0xb3, 0x35, 0xc9, 0x64, 0x5b, 0xf6, 0x09,
        0xd7, 0xfb, 0xbc, 0x3c, 0x77, 0xee, 0xd5, 0xf3, 0xfb, 0xed, 0x25, 0xce, 0xe1, 0xc4, 0x8c, 0x53, 0x20, 0xb6,
        0x07, 0x3b, 0x5e, 0x83, 0x7d, 0x46, 0x98, 0x57, 0x47, 0x73, 0xcd, 0x8f, 0x67, 0x35, 0x40, 0x20, 0x3e, 0x53,
        0xa0, 0x4b, 0x27, 0xb4, 0x75, 0x8e, 0x46, 0x9f, 0xa1, 0x3a, 0x2e, 0x2b, 0x1b, 0x12, 0x5a, 0x6b, 0x35, 0x1e,
        0x97, 0xe6, 0xce, 0xd6, 0x61, 0xb4, 0xce, 0xc5, 0x4c, 0x18, 0x8a, 0x0b, 0x2a, 0xc2, 0xb7, 0x29, 0xba, 0xff,
        0xee, 0x42, 0x55, 0xfa, 0x0c, 0x35, 0xf8, 0xf8, 0x74, 0x61, 0x97, 0x50, 0xc5, 0x72, 0x66, 0x06, 0x69, 0x19,
        0xb7, 0x15, 0x2e, 0x8e, 0xc0, 0xf9, 0x33, 0x9e, 0x97, 0xb6, 0x65, 0x28, 0x4d, 0xd4, 0x7c, 0x03, 0xca, 0x94,
        0x8b, 0x29, 0x29, 0xad, 0x73, 0x33, 0x89, 0xa2, 0x24, 0x61, 0x59, 0xa1, 0x27, 0x7e, 0x6b, 0xa3, 0x1d, 0xf6,
        0x86, 0xf1, 0xa6, 0x36, 0x06, 0xe1, 0x4c, 0x4e, 0x8a, 0x38, 0x1b, 0x4c, 0x00, 0x6f, 0xec, 0xee, 0x7a, 0x66,
        0x2d, 0x0c, 0xaf, 0x31, 0x35, 0x40, 0x9d, 0xdc, 0x9e, 0x7f, 0x56, 0xb6, 0xce, 0xf0, 0x6c, 0x62, 0xbb, 0x82,
        0x42, 0x51, 0x46, 0xab, 0x13, 0xcb, 0x78, 0xfd, 0xea, 0x9e, 0x5d, 0x36, 0x3e, 0x10, 0x46, 0x58, 0x1f, 0xf1,
        0x5a, 0x5e, 0x62, 0x3a, 0xaf, 0x0d, 0xd6, 0xf7, 0x02, 0x00, 0x97, 0x46, 0xfa, 0x05, 0x9b, 0x9d, 0x33, 0xff,
        0xfc, 0x8f, 0xc1, 0xef, 0x89, 0x4d, 0xbd, 0x3f, 0x92, 0xde, 0x81, 0x7e, 0x9f, 0xac, 0x96, 0xf5, 0x3b, 0xa2,
        0x4b, 0x8b, 0x17, 0x26, 0xfa, 0x3c, 0x02, 0xa2, 0xf4, 0x1e, 0x71, 0x05, 0xed, 0x62, 0xff, 0xf5, 0x80, 0xdc,
        0x4b, 0xb3, 0x90, 0xb9, 0x94, 0xf3, 0x72, 0x0f, 0x59, 0x9f, 0xca, 0x06, 0x4a, 0x8b, 0x1d, 0x1a, 0xfd, 0x62,
        0xdf, 0x16, 0xcc, 0x3f, 0x66, 0x73, 0x52, 0x76, 0x6b, 0x60, 0x7f, 0xc1, 0x1e, 0x41, 0x97, 0x34, 0xd0, 0xcf,
        0x6f, 0x5b, 0x2a, 0x2d, 0x64, 0x98, 0x28, 0x57, 0x63, 0xc3, 0x35, 0x73, 0x75, 0xca, 0xa1, 0xb4, 0x8e, 0xd4,
        0x5a, 0xc0, 0xfa, 0x79, 0x27, 0x05, 0x1d, 0x96, 0xc5, 0x14, 0x13, 0x69, 0x1b, 0xb1, 0x1a, 0xad, 0xad, 0xf7,
        0xfa, 0xd3, 0x3b, 0xf5, 0x2c, 0x2c, 0x77, 0x37, 0x0d, 0xc7, 0x43, 0x6a, 0xd7, 0x53, 0x5a, 0xa4, 0x31, 0xd1,
        0xad, 0x06, 0x85, 0xeb, 0x76, 0xad, 0x31, 0x8d, 0xed, 0x3c, 0x65, 0xf9, 0x74, 0x67, 0xd5, 0x72, 0x37, 0xf9,
        0x2a, 0xb3, 0xa5, 0xb4, 0xf8, 0x62, 0x82, 0x28, 0x03, 0x66, 0x06, 0x93, 0xd6, 0x6e, 0x26, 0x7f, 0x9a, 0x9e,
        0x91, 0x8d, 0xc8, 0x96, 0xe1, 0x9e, 0xe8, 0xa2, 0xd7, 0x5b, 0x2a, 0x4c, 0x91, 0x60, 0x48, 0x55, 0x45, 0x18,
        0x54, 0xbf, 0xe5, 0x5e, 0xc6, 0x6c, 0x36, 0x28, 0xe3, 0x4c, 0x32, 0x4b, 0xea, 0x25, 0xb3, 0xb4, 0x80, 0xd2,
        0x62, 0x8b, 0x89, 0x6a, 0x35, 0x1a, 0xdc, 0xd8, 0xa4, 0x3e, 0xe2, 0x27, 0x6c, 0xa8, 0xab, 0x5e, 0x0c, 0xaa,
        0x69, 0xeb, 0x7a, 0x5f, 0x10, 0x64, 0x0d, 0xdb, 0xf7, 0x2a, 0x56, 0xe5, 0x58, 0x20, 0x8d, 0xd3, 0x8e, 0x9c,
        0x03, 0x58, 0xc9, 0x30, 0xef, 0xfc, 0x5a, 0x60, 0xce, 0xcb, 0xf5, 0x02, 0x7b, 0x62, 0xf6, 0x6c, 0xa0, 0x54,
        0x53, 0x79, 0xf0, 0xc5, 0xac, 0x1d, 0xb5, 0x13, 0xf5, 0x31, 0xf2, 0x98, 0xc8, 0xf9, 0x96, 0xd7, 0x76, 0xeb,
        0xf9, 0xee, 0xb1, 0x30, 0x4d, 0x6f, 0x86, 0x50, 0xfd, 0x69, 0x18, 0x97, 0xce, 0xf2, 0x5a, 0x4d, 0x8d, 0xe6,
        0x4c, 0xcc, 0x05, 0x4e, 0x37, 0x3a, 0x96, 0x9d, 0x6f, 0x0b, 0x02, 0x36, 0xf1, 0x0d, 0x56, 0x8d, 0xfd, 0xf3,
        0x74, 0x39, 0xf5, 0x5c, 0x8c, 0x93, 0xf6, 0x6a, 0x19, 0x35, 0xcd, 0xd9, 0x8e, 0x92, 0x79, 0x12, 0xb1, 0x93,
        0x8a, 0xe5, 0xcb, 0xce, 0x77, 0x45, 0xbe, 0x2a, 0xc6, 0xc6, 0x0f, 0xb5, 0x3a, 0xb4, 0x3e, 0x68, 0xd3, 0xa1,
        0xeb, 0x70, 0x3e, 0x30, 0xb2, 0xb0, 0x4f, 0x29, 0xd3, 0x65, 0xe7, 0xfb, 0x00, 0x8e, 0xb5, 0x2a, 0x6e, 0x7a,
        0xde, 0x13, 0x9e, 0xc3, 0x48, 0x24, 0xa1, 0x39, 0x99, 0xaa, 0x9d, 0x73, 0x7b, 0xb1, 0xba, 0x25, 0x14, 0x3f,
        0x34, 0xda, 0x2b, 0x01, 0x3e, 0x1f, 0xfa, 0x88, 0xd4, 0x17, 0xa4, 0xd7, 0xb4, 0xef, 0x9c, 0xb9, 0xf9, 0x58,
        0x64, 0xee, 0xa2, 0x45, 0x59, 0x89, 0x1e, 0xb5, 0xaa, 0xe8, 0x68, 0x12, 0xc5, 0x37, 0xfd, 0xb3, 0xbd, 0xd3,
        0x99, 0x98, 0xa5, 0x96, 0x71, 0x51, 0x58, 0x2e, 0xb9, 0x5b, 0xd2, 0x43, 0x78, 0xc1, 0x57, 0xb2, 0x5e, 0xd8,
        0x62, 0xd7, 0xee, 0xbc, 0xdf, 0x39, 0x07, 0x93, 0x24, 0xbe, 0x9f, 0xfe, 0xa8, 0xca, 0xf2, 0xd4, 0xd7, 0x55,
        0x71, 0x46, 0xeb, 0x6c, 0xcb, 0x47, 0xe3, 0x92, 0x89, 0xf2, 0xce, 0x4f, 0x0b, 0x05, 0xfe, 0x2f, 0x0c, 0x4b,
        0x8d, 0x70, 0xc1, 0x1c, 0x66, 0x1a, 0x58, 0xb6, 0x39, 0x56, 0x17, 0x0d, 0xac, 0x3b, 0xdb, 0x57, 0x3b, 0xe7,
        0x66, 0xd6, 0x5f, 0xc6, 0x69, 0x45, 0xdd, 0xb8, 0x5d, 0x85, 0x18, 0x2e, 0x59, 0xae, 0x76, 0xce, 0xa9, 0x7c,
        0x20, 0xae, 0x7b, 0x85, 0xb2, 0x90, 0x9c, 0x05, 0x6b, 0xbc, 0x4e, 0xe1, 0x6e, 0x7d, 0xb5, 0xa6, 0x40, 0x6c,
        0x37, 0x77, 0x6f, 0xdf, 0xf0, 0xb0, 0x78, 0xd1, 0xbb, 0x7e, 0x10, 0x42, 0xd5, 0x70, 0xda, 0xd9, 0x6e, 0x46,
        0xab, 0x76, 0xce, 0xa8, 0x50, 0xe5, 0x17, 0x4b, 0x0a, 0x3f, 0x74, 0x5a, 0xe5, 0x8f, 0x35, 0x66, 0x85, 0x2c,
        0x0b, 0x63, 0xc0, 0x62, 0x57, 0x30, 0xec, 0xed, 0x19, 0xb7, 0x7f, 0x6b, 0x95, 0xa8, 0x42, 0x39, 0x8f, 0x92,
        0x72, 0xf9, 0x3a, 0x26, 0x72, 0xb3, 0xca, 0x5f, 0xd3, 0x3b, 0x2c, 0xef, 0x9e, 0x69, 0x4d, 0x23, 0xcd, 0xff,
        0xcb, 0x23, 0x3c, 0x3a, 0xa9, 0x33, 0x24, 0x4b, 0x23, 0xad, 0xca, 0x53, 0xf3, 0xf0, 0x14, 0xdf, 0xd8, 0xd8,
        0xe0, 0xf2, 0x88, 0x6f, 0x17, 0xd8, 0x68, 0x8e, 0xdc, 0x52, 0x60, 0xca, 0xc5, 0x80, 0x77, 0x27, 0x31, 0x88,
        0x45, 0x30, 0x41, 0x52, 0x21, 0xbd, 0x3a, 0x62, 0x40, 0xfd, 0xca, 0x83, 0xd5, 0x5a, 0x59, 0x74, 0xb2, 0x60,
        0xdf, 0xf2, 0x66, 0xe9, 0x18, 0x52, 0x68, 0xdf, 0xf2, 0xca, 0x8b, 0x7f, 0x7b, 0x33, 0x50, 0xee, 0xed, 0x76,
        0x96, 0xca, 0x02, 0x94, 0xe9, 0xc1, 0x2e, 0x52, 0x9a, 0xbe, 0x75, 0xc7, 0x5e, 0x07, 0xdb, 0xcf, 0x3f, 0x58,
        0xbe, 0xc1, 0x33, 0x0f, 0x79, 0x85, 0x3c, 0xcf, 0xce, 0xd4, 0x1c, 0xb1, 0xb2, 0x88, 0x65, 0xc2, 0x89, 0x73,
        0x90, 0x35, 0x7a, 0x71, 0x28, 0xa2, 0x30, 0xac, 0x7d, 0xbc, 0x9f, 0x0e, 0xaf, 0xdc, 0x25, 0x9f, 0x5f, 0xdd,
        0x5d, 0x59, 0xd4, 0x32, 0x11, 0xad, 0x86, 0x87, 0x34, 0x92, 0xca, 0xef, 0xaa, 0x38, 0xe3, 0xbe, 0x15, 0x5e,
        0x91, 0xd9, 0xa7, 0xcb, 0xd2, 0x5e, 0x10, 0x9e, 0x57, 0x98, 0xca, 0x61, 0x40, 0xd5, 0x04, 0x98, 0x7c, 0x07,
        0x43, 0x2a, 0xc9, 0xc9, 0xfb, 0xc1, 0x5b, 0xf4, 0xf9, 0xca, 0x0c, 0x56, 0x2d, 0x5e, 0x59, 0x8c, 0xb2, 0x60,
        0x87, 0xf2, 0x7c, 0x17, 0xd9, 0x06, 0xed, 0x55, 0x0a, 0xeb, 0x80, 0x79, 0x6f, 0xc6, 0x5f, 0x65, 0x21, 0x48,
        0xfc, 0xb9, 0x82, 0xd1, 0x12, 0x9f, 0x47, 0x7f, 0x27, 0x5c, 0xd0, 0x70, 0x1c, 0xe8, 0xf2, 0xb2, 0xea, 0xa6,
        0xc3, 0xab, 0x95, 0xd9, 0x24, 0xc7, 0x4b, 0x65, 0x21, 0x47, 0x25, 0xe9, 0xca, 0x38, 0x8d, 0xc8, 0x7c, 0xc7,
        0xb6, 0xfa, 0xec, 0xd6, 0xb1, 0x2a, 0x73, 0xee, 0xe3, 0x13, 0x71, 0x98, 0x45, 0xae, 0xb7, 0x65, 0x7c, 0x48,
        0xcd, 0x08, 0xef, 0xb5, 0xd5, 0x63, 0xaa, 0x36, 0xd4, 0x16, 0x52, 0x7a, 0x01, 0x63, 0x4a, 0xeb, 0x38, 0xf5,
        0xd6, 0x18, 0xbc, 0xca, 0x9d, 0x25, 0x8b, 0x42, 0xb6, 0x4d, 0x15, 0x81, 0x2b, 0xed, 0x56, 0xb0, 0x6a, 0x1c,
        0xa4, 0x31, 0x5a, 0x04, 0x55, 0x67, 0xe1, 0x9b, 0x55, 0x09, 0x52, 0x95, 0x3b, 0xc7, 0xe2, 0x82, 0x87, 0x25,
        0xe8, 0x55, 0xb0, 0x55, 0x38, 0xdb, 0x13, 0xc4, 0x6c, 0x22, 0x23, 0x72, 0x66, 0x45, 0x63, 0xe4, 0x36, 0x12,
        0x95, 0xd6, 0x53, 0x67, 0xc9, 0x8b, 0x8d, 0xb9, 0xa8, 0x23, 0x2c, 0x54, 0x04, 0x63, 0x10, 0xdd, 0x36, 0x2c,
        0xe7, 0xcf, 0x72, 0xd5, 0x64, 0x07, 0x3f, 0x14, 0xda, 0x24, 0xda, 0x7d, 0xe7, 0x55, 0xee, 0x6c, 0x88, 0xbf,
        0x05, 0x55, 0x8f, 0x05, 0x05, 0x3b, 0xd6, 0x1c, 0xfe, 0xf5, 0xc5, 0xf3, 0xc0, 0xe8, 0x08, 0x16, 0x73, 0xab,
        0x30, 0xce, 0x86, 0xa4, 0x8a, 0x6c, 0x08, 0x97, 0x0e, 0x0f, 0x9d, 0x90, 0x1a, 0x61, 0x03, 0x75, 0xae, 0xc3,
        0x33, 0xf5, 0xea, 0xdd, 0x68, 0xe0, 0x9f, 0x99, 0x8f, 0x97, 0x1c, 0x4b, 0x7f, 0x49, 0x7f, 0x8c, 0xb7, 0x1d,
        0x57, 0xb9, 0xb3, 0x21, 0x9f, 0x8f, 0x5f, 0x5a, 0x31, 0xfa, 0xbc, 0xf6, 0x66, 0x78, 0x97, 0xcb, 0x70, 0x79,
        0x84, 0xe2, 0x38, 0x2b, 0x92, 0x2c, 0xb2, 0x62, 0x25, 0xe7, 0x20, 0xf6, 0xa2, 0x15, 0x37, 0x3f, 0xa9, 0xb7,
        0x14, 0xae, 0x8c, 0xbf, 0xf8, 0xc3, 0x15, 0xca, 0x59, 0x94, 0x94, 0x71, 0x22, 0xaa, 0x72, 0xcb, 0xcc, 0x6a,
        0xec, 0xdf, 0x74, 0x3d, 0x98, 0x58, 0x09, 0x9b, 0xa7, 0x50, 0x50, 0xaf, 0x87, 0x84, 0x7e, 0x5d, 0xe1, 0x4c,
        0x49, 0xca, 0x28, 0x21, 0x70, 0xee, 0xec, 0xec, 0x58, 0x98, 0x5e, 0x2c, 0x20, 0x98, 0x76, 0x49, 0xe1, 0x0c,
        0xc8, 0xc7, 0xe2, 0x2e, 0xa9, 0xc4, 0x86, 0x67, 0x7c, 0xdb, 0x2c, 0x20, 0xd0, 0xf2, 0x2e, 0x29, 0xb3, 0x01,
        0x0c, 0xc0, 0x99, 0x91, 0xcf, 0xc7, 0xdd, 0x80, 0x64, 0x99, 0x82, 0xdd, 0x35, 0x7f, 0x92, 0xf3, 0x67, 0xd2,
        0x36, 0x07, 0xf0, 0xf3, 0xe8, 0x2d, 0x5e, 0x17, 0xfe, 0xa6, 0x20, 0xce, 0x85, 0xa0, 0x59, 0xf2, 0x0f, 0x0b,
        0x56, 0x31, 0xb0, 0x68, 0xe1, 0x6e, 0xf3, 0xd0, 0x8b, 0x25, 0x73, 0x40, 0x31, 0x86, 0xe8, 0x5f, 0xff, 0x39,
        0xdd, 0x6b, 0x86, 0xca, 0x37, 0x72, 0x18, 0xf5, 0xe7, 0xe7, 0x1e, 0xb7, 0x6c, 0xfb, 0x64, 0x18, 0x9f, 0x1a,
        0x75, 0x17, 0xe1, 0x90, 0x6b, 0xc4, 0x86, 0xd0, 0xf8, 0x1c, 0xdc, 0xa6, 0xb1, 0x8a, 0x82, 0x57, 0x16, 0xf4,
        0xc3, 0x93, 0xcd, 0x76, 0x17, 0xce, 0x2c, 0x76, 0x51, 0x67, 0xf9, 0x0f, 0x36, 0xe4, 0xb3, 0xa6, 0x52, 0x22,
        0x0d, 0x83, 0x85, 0xb5, 0xf7, 0x22, 0x60, 0xa1, 0x7f, 0xea, 0x8f, 0xb3, 0x5d, 0xdf, 0xb1, 0xe4, 0x89, 0x54,
        0x16, 0x05, 0x14, 0x18, 0xdc, 0x36, 0x94, 0x47, 0x5c, 0xdc, 0xa0, 0x5d, 0xd5, 0x9f, 0x97, 0x4f, 0xf4, 0x96,
        0xdc, 0xb5, 0xdc, 0x7e, 0x58, 0x59, 0x44, 0x30, 0x91, 0xb4, 0x11, 0xa3, 0xb5, 0x3e, 0xd7, 0x0f, 0x49, 0xad,
        0x80, 0x07, 0xf6, 0x53, 0x7f, 0xbc, 0xd1, 0x8d, 0x86, 0xfe, 0xa1, 0xa3, 0xcc, 0xb6, 0xa5, 0x46, 0x54, 0x16,
        0xf5, 0x4b, 0x84, 0x75, 0x44, 0xea, 0x50, 0x2e, 0xa6, 0x4d, 0x36, 0x5e, 0xc9, 0xbb, 0xbc, 0xbd, 0x4b, 0x3b,
        0xcc, 0xeb, 0xbd, 0x9b, 0xa3, 0x7f, 0x54, 0xe7, 0x30, 0xa0, 0x8a, 0x03, 0xe2, 0xc5, 0xd6, 0x32, 0x97, 0xdf,
        0xf7, 0xa7, 0xfb, 0xa3, 0x46, 0x0e, 0xc5, 0x94, 0x36, 0x37, 0x21, 0x5b, 0xec, 0x8e, 0x87, 0x94, 0x37, 0xfe,
        0x71, 0x48, 0xa9, 0x85, 0xfa, 0x9d, 0x16, 0x20, 0x4c, 0x28, 0x4d, 0x84, 0xad, 0x74, 0x87, 0xa5, 0xa6, 0x65,
        0x38, 0xc1, 0x79, 0xd2, 0x40, 0x73, 0x52, 0xa7, 0x7f, 0x72, 0x87, 0x9c, 0x42, 0xe6, 0x73, 0x65, 0x21, 0xc3,
        0x84, 0xb0, 0x82, 0xac, 0xb7, 0x4d, 0xd7, 0x2d, 0x6c, 0xae, 0x62, 0x3a, 0x65, 0xb2, 0x2b, 0x75, 0xee, 0xd4,
        0xe0, 0xf1, 0x2c, 0x52, 0x0b, 0xbf, 0xee, 0x42, 0xab, 0x26, 0xde, 0xe0, 0xf0, 0x9f, 0xa2, 0x27, 0xad, 0xb3,
        0x1b, 0x2a, 0x8b, 0x1e, 0x26, 0x8a, 0x22, 0x40, 0x20, 0xf9, 0x18, 0x4b, 0x8b, 0xc2, 0x6c, 0x2f, 0x76, 0xb2,
        0xf6, 0x31, 0xfb, 0xe9, 0x64, 0xd1, 0x1f, 0x83, 0x71, 0xce, 0x46, 0x33, 0xfb, 0x5d, 0xdc, 0x28, 0xa8, 0xe0,
        0xc6, 0x51, 0xfb, 0xf7, 0x74, 0x07, 0xec, 0xe3, 0x78, 0x39, 0x1a, 0x95, 0x33, 0x35, 0x1f, 0x8a, 0xfb, 0x01,
        0x97, 0x78, 0xc2, 0xc7, 0x80, 0xbb, 0xa9, 0xce, 0xa9, 0x4b, 0xc4, 0x29, 0x65, 0xcc, 0x55, 0xa5, 0xb3, 0x2d,
        0x1f, 0x8c, 0x2b, 0x8c, 0xcb, 0xe7, 0x10, 0x46, 0xe1, 0x76, 0x9e, 0xc7, 0x0b, 0xba, 0x54, 0x7f, 0x2e, 0xb4,
        0x4b, 0xe7, 0x58, 0x3e, 0x1d, 0xa7, 0x1d, 0x39, 0x2c, 0x50, 0xc8, 0xd4, 0x4e, 0xc3, 0x5a, 0xed, 0x7b, 0xed,
        0xb7, 0xe6, 0x6b, 0xe6, 0x4c, 0xca, 0x67, 0xe3, 0xa8, 0x79, 0xfb, 0x67, 0x1e, 0xaf, 0x04, 0xd7, 0xab, 0x1a,
        0xe5, 0xe5, 0x90, 0xfb, 0x14, 0x33, 0xa9, 0x67, 0x36, 0x0a, 0xfd, 0xa8, 0x0d, 0xdf, 0x9e, 0x75, 0x6b, 0x8e,
        0x3e, 0x3a, 0x67, 0x5f, 0xe2, 0x95, 0xf1, 0x05, 0xb5, 0xd5, 0xa8, 0xb3, 0x0b, 0x49, 0xe8, 0xc9, 0x53, 0x59,
        0x00, 0xaf, 0x28, 0x78, 0x5b, 0xfd, 0x92, 0x23, 0x5a, 0x14, 0xda, 0x60, 0x35, 0xb7, 0x3b, 0x60, 0xb8, 0x90,
        0xc3, 0xeb, 0x10, 0xfa, 0x37, 0x55, 0x16, 0xae, 0x4b, 0x8f, 0x96, 0x81, 0x16, 0xaa, 0x54, 0x9e, 0x3b, 0x1f,
        0x81, 0x11, 0x4f, 0xaf, 0xb1, 0xea, 0x0d, 0x95, 0xd1, 0xda, 0x96, 0x9e, 0x5d, 0x4c, 0x0d, 0x30, 0x4f, 0x80,
        0xa4, 0x5f, 0x01, 0x16, 0xf2, 0x05, 0xe9, 0x22, 0xbf, 0xcf, 0x4b, 0xe8, 0xc6, 0xb3, 0x42, 0xa9, 0x34, 0xb0,
        0xa8, 0x5d, 0x22, 0xca, 0x23, 0x0a, 0x9a, 0x30, 0xef, 0xac, 0xb9, 0x32, 0xae, 0x37, 0xa4, 0x6b, 0x8a, 0x77,
        0xd9, 0xcc, 0x1f, 0x2d, 0x47, 0x50, 0xfe, 0xfd, 0x49, 0x8c, 0xe1, 0x7f, 0x26, 0x61, 0x6e, 0x11, 0xba, 0x44,
        0xbd, 0x82, 0x6b, 0x35, 0x53, 0xfe, 0xbb, 0xcf, 0xe6, 0xa5, 0x72, 0x0a, 0x54, 0x04, 0x47, 0x0a, 0x51, 0xb1,
        0x58, 0xa7, 0xf4, 0x3e, 0x5d, 0x32, 0xf7, 0x6e, 0xf3, 0xe3, 0xc0, 0xe0, 0xe0, 0x9f, 0xd7, 0x0b, 0x9a, 0xc8,
        0xe9, 0x5d, 0x3b, 0x66, 0x39, 0x57, 0x16, 0xa0, 0x2b, 0x58, 0x15, 0xd5, 0x2e, 0x4d, 0x78, 0x0a, 0x56, 0x27,
        0xb1, 0xa0, 0xe5, 0x0f, 0xf3, 0xb5, 0x8d, 0xf3, 0xd2, 0x23, 0xb8, 0xb2, 0xc8, 0x5c, 0xa1, 0x4d, 0xc8, 0xb3,
        0x38, 0x02, 0xe4, 0x8a, 0xc1, 0x3c, 0x40, 0x6f, 0x8a, 0x54, 0xc5, 0x97, 0xfa, 0x39, 0x7c, 0xa1, 0xc4, 0xad,
        0x13, 0xe3, 0xd9, 0xb8, 0x0a, 0xa8, 0x89, 0x84, 0x1d, 0xf5, 0xcd, 0xf4, 0xac, 0x59, 0x91, 0xef, 0x36, 0x16,
        0xde, 0xa5, 0x13, 0x42, 0x04, 0xe1, 0xea, 0x02, 0x50, 0x96, 0xdd, 0xc1, 0xdf, 0x69, 0x0b, 0xd3, 0x39, 0x30,
        0x70, 0x56, 0xa3, 0xc2, 0x39, 0xd9, 0xaa, 0xa2, 0x6a, 0x77, 0x73, 0xa9, 0x77, 0xc7, 0x2a, 0xba, 0x1f, 0xa6,
        0xdb, 0x91, 0x0a, 0xad, 0x22, 0xd5, 0xce, 0xb5, 0x20, 0x0c, 0x1e, 0x85, 0x82, 0xb7, 0x74, 0x43, 0x6e, 0xcc,
        0x53, 0xb0, 0x48, 0xd3, 0x15, 0x2d, 0xbc, 0x5a, 0x54, 0x8c, 0x19, 0xf6, 0xdf, 0xd5, 0xa9, 0xaa, 0x9d, 0x89,
        0x49, 0xd9, 0x45, 0xa8, 0x7c, 0x4b, 0xb5, 0x9b, 0x1b, 0x80, 0xfd, 0xfe, 0xa1, 0xcb, 0x1b, 0x99, 0xb3, 0x2a,
        0x9e, 0x5a, 0x72, 0x6f, 0x0b, 0x16, 0x17, 0x31, 0xf7, 0x36, 0x94, 0xaa, 0x56, 0xb5, 0xf3, 0x24, 0xff, 0x1a,
        0x3f, 0x9d, 0x05, 0xcd, 0xb9, 0x37, 0xd9, 0x7e, 0x1c, 0x2d, 0x7f, 0x15, 0x6e, 0xeb, 0xad, 0x75, 0x85, 0x32,
        0x57, 0xde, 0xc2, 0x18, 0xb5, 0x33, 0xa5, 0x56, 0x52, 0x47, 0xbc, 0x56, 0xaf, 0xe4, 0xfe, 0x79, 0x7a, 0x91,
        0xd5, 0xb9, 0xf1, 0xbe, 0x7a, 0x24, 0xec, 0xeb, 0xe2, 0x5a, 0xbc, 0xad, 0x28, 0x79, 0xe8, 0x06, 0x33, 0xa2,
        0xc4, 0xd9, 0xc9, 0x84, 0x58, 0x2d, 0x2a, 0xb2, 0xc4, 0x24, 0xde, 0x94, 0xbc, 0xf1, 0xd6, 0x1b, 0x83, 0x89,
        0x74, 0x51, 0xd8, 0x0c, 0xaf, 0x4e, 0x78, 0xb9, 0xc8, 0xfd, 0x25, 0xab, 0xa8, 0x60, 0xeb, 0x61, 0xf6, 0x8c,
        0xd3, 0x0e, 0xbe, 0xa9, 0x1d, 0x26, 0xe2, 0xa9, 0xf3, 0x17, 0x1b, 0xdc, 0xf8, 0x42, 0xd3, 0xc8, 0x60, 0x9a,
        0x04, 0x53, 0x94, 0xb1, 0x1e, 0xa0, 0x60, 0xd3, 0x5c, 0x26, 0xde, 0xfc, 0x31, 0x58, 0x75, 0x18, 0x52, 0xb9,
        0x40, 0xb9, 0x25, 0xef, 0xd9, 0x7c, 0xb4, 0x4e, 0xdf, 0xc4, 0x24, 0x9c, 0x82, 0xc5, 0x28, 0x4c, 0xed, 0xa2,
        0x13, 0xfc, 0xa8, 0x17, 0xcd, 0xc0, 0x59, 0xe6, 0xad, 0xe1, 0x43, 0x60, 0xb7, 0xb2, 0x50, 0x9c, 0x90, 0xa1,
        0xcf, 0x47, 0x19, 0xc7, 0x01, 0x97, 0x49, 0x99, 0x6b, 0x3e, 0x83, 0x3e, 0x6c, 0x91, 0xb5, 0x42, 0x4b, 0x42,
        0x9a, 0xf8, 0xed, 0x2c, 0x30, 0xc3, 0xa0, 0x7b, 0xb6, 0x93, 0xe9, 0x13, 0x1f, 0x58, 0x1c, 0x0d, 0x4f, 0xe0,
        0x76, 0xb7, 0x15, 0x09, 0x6e, 0xb5, 0xa1, 0x5f, 0xce, 0x96, 0xca, 0xc2, 0x65, 0xe9, 0x4f, 0xcb, 0x58, 0x2a,
        0xe8, 0x81, 0xb4, 0x8b, 0x30, 0x16, 0xbb, 0x58, 0x38, 0x29, 0x58, 0x2f, 0xf2, 0x2e, 0xab, 0x2f, 0x52, 0xf5,
        0xc3, 0x02, 0x66, 0x89, 0x6a, 0x05, 0x93, 0x8b, 0xc8, 0xa7, 0xfa, 0xa1, 0x5e, 0x5e, 0x7b, 0x6f, 0xe9, 0x04,
        0x8d, 0x98, 0x26, 0x79, 0x24, 0x68, 0xf5, 0x9a, 0x9c, 0xcf, 0x08, 0xaa, 0x44, 0x80, 0x9e, 0x11, 0xab, 0x37,
        0x20, 0x70, 0x06, 0x9f, 0xc1, 0x37, 0x70, 0xdd, 0x20, 0xe3, 0xe7, 0xdb, 0x69, 0x8f, 0x24, 0xbc, 0x85, 0xb6,
        0x76, 0xda, 0x46, 0xf8, 0xb1, 0x8b, 0xb4, 0x9d, 0x66, 0xa5, 0xa9, 0x84, 0x19, 0x53, 0x08, 0xea, 0xa7, 0x61,
        0xb4, 0xb9, 0x6c, 0x12, 0x29, 0xb2, 0xe2, 0x96, 0x74, 0x5b, 0xfc, 0x80, 0x74, 0x06, 0x99, 0xfe, 0x9f, 0xc4,
        0x32, 0xb4, 0xf7, 0xb4, 0xe9, 0x61, 0x18, 0x69, 0xc1, 0x21, 0xca, 0x9e, 0x90, 0x1d, 0xfc, 0x32, 0xd1, 0x6a,
        0x1f, 0xcf, 0xef, 0x56, 0xa3, 0xec, 0x9c, 0x1a, 0x0f, 0xc7, 0x29, 0x11, 0x3e, 0x61, 0xb2, 0xd2, 0xdf, 0x47,
        0xeb, 0x7e, 0xc2, 0x6d, 0x73, 0xdf, 0x5f, 0xee, 0xc5, 0x30, 0xb2, 0x97, 0x5b, 0xc0, 0xaa, 0x60, 0x43, 0xc0,
        0xd0, 0xad, 0x4c, 0x7e, 0xc8, 0x77, 0xdb, 0x06, 0x63, 0xfb, 0xf5, 0x32, 0x3c, 0x53, 0xdd, 0xe6, 0x0d, 0x74,
        0xe7, 0xd1, 0x6e, 0x3b, 0xa8, 0x2c, 0x64, 0x85, 0x27, 0x91, 0x46, 0x5a, 0x46, 0xd2, 0xd2, 0xea, 0x94, 0x07,
        0x8d, 0xc8, 0xa0, 0x31, 0x16, 0x2a, 0xa7, 0x9f, 0x79, 0x33, 0xca, 0x3c, 0x43, 0x90, 0x7c, 0xf7, 0x93, 0xfc,
        0x37, 0x52, 0xa1, 0x0c, 0x2d, 0x77, 0xb4, 0x32, 0x86, 0x22, 0xf1, 0x43, 0xa5, 0x17, 0x5c, 0xdf, 0x79, 0xec,
        0x6b, 0x08, 0xfd, 0x42, 0xf5, 0xae, 0x7a, 0x03, 0x29, 0x1c, 0xa4, 0x8a, 0x37, 0x1b, 0xe1, 0x07, 0x14, 0xd6,
        0xa1, 0xbd, 0x21, 0xf4, 0xa7, 0x98, 0x81, 0x9d, 0xfa, 0x56, 0x3e, 0x8a, 0xd2, 0x6e, 0x73, 0x52, 0x3a, 0x4a,
        0x83, 0x0e, 0x95, 0x11, 0x05, 0xf7, 0x77, 0x9a, 0xa5, 0x0e, 0x3b, 0x9f, 0xea, 0x2f, 0x9d, 0x55, 0xff, 0x0b,
        0xf4, 0xff, 0x4b, 0xf9, 0xda, 0x82, 0x55, 0xf6, 0x7c, 0x1e, 0x27, 0xb5, 0xd8, 0x69, 0x1d, 0xe6, 0xdd, 0x55,
        0x67, 0xe6, 0x13, 0xee, 0xe7, 0x78, 0x42, 0x9b, 0x5a, 0x2d, 0xd5, 0xd9, 0xcc, 0x7b, 0x39, 0x09, 0xd2, 0x0c,
        0xd7, 0x09, 0x47, 0x74, 0xd0, 0x5d, 0x11, 0x67, 0xb8, 0xb4, 0x70, 0x01, 0x07, 0xb2, 0x8a, 0x7a, 0xd9, 0x10,
        0x1a, 0x27, 0x5d, 0x47, 0x07, 0x98, 0x5e, 0x9d, 0xa9, 0xb5, 0xa9, 0xd3, 0xa9, 0x45, 0x66, 0xd6, 0x2b, 0xc9,
        0x5e, 0xdc, 0x3a, 0x35, 0x1e, 0xae, 0x22, 0x35, 0xae, 0x4b, 0x59, 0x22, 0xaf, 0xe3, 0xe9, 0x79, 0x9a, 0x79,
        0x4f, 0x99, 0x51, 0x76, 0x89, 0xb2, 0x42, 0xdb, 0xfe, 0xb8, 0x8c, 0xa2, 0xfa, 0xd1, 0x1b, 0xef, 0xc9, 0x93,
        0x97, 0xc1, 0x6f, 0x09, 0x32, 0x27, 0x79, 0xe7, 0xdc, 0x88, 0x87, 0xdb, 0x38, 0x71, 0x72, 0x98, 0x30, 0x45,
        0xee, 0x5b, 0x94, 0x47, 0xf3, 0x0a, 0x92, 0x94, 0x73, 0x51, 0x75, 0xce, 0x88, 0x7c, 0x28, 0x7e, 0xab, 0x88,
        0x32, 0xf2, 0xe9, 0x1f, 0x8c, 0x7d, 0xf8, 0x3d, 0xb5, 0xea, 0x68, 0xd3, 0x74, 0xcd, 0x89, 0x77, 0xb6, 0x32,
        0x3e, 0x68, 0xbb, 0xb7, 0x73, 0x56, 0x44, 0x36, 0x46, 0x70, 0x15, 0x31, 0xe7, 0x9a, 0xd7, 0x2f, 0xad, 0xfa,
        0x0b, 0xfd, 0x9e, 0x3a, 0x5f, 0xa1, 0x2b, 0x97, 0x37, 0x3d, 0xa9, 0x52, 0xcc, 0x88, 0xdd, 0xf3, 0xc2, 0x2d,
        0xec, 0x05, 0x93, 0xa3, 0x33, 0x6d, 0x19, 0x31, 0x1d, 0xd4, 0xc0, 0x76, 0x37, 0x66, 0x0a, 0x11, 0xd9, 0x43,
        0x65, 0xa4, 0x6a, 0xb4, 0x54, 0x92, 0xbd, 0xb6, 0x6f, 0xaf, 0x7e, 0xc7, 0x1c, 0x0c, 0xc6, 0x43, 0xbc, 0x18,
        0xb9, 0x4a, 0xb1, 0x21, 0xa3, 0xe9, 0x02, 0x08, 0x7a, 0xf9, 0xc0, 0x41, 0xf3, 0x7e, 0xaf, 0xad, 0xfe, 0xd9,
        0xb7, 0x1f, 0xfe, 0x4c, 0xaa, 0xc3, 0x87, 0xc1, 0xac, 0xa8, 0x14, 0x07, 0x32, 0x82, 0x15, 0x42, 0xb9, 0x65,
        0xcf, 0xa2, 0x64, 0x88, 0x21, 0x90, 0xcc, 0x6b, 0x56, 0x5e, 0xbf, 0x12, 0x2d, 0x9c, 0x1e, 0x59, 0x76, 0x86,
        0x9d, 0xf7, 0x23, 0x9a, 0x1a, 0x6c, 0x37, 0xa9, 0xdd, 0x11, 0x6e, 0x56, 0x34, 0x1d, 0x25, 0x05, 0x81, 0xd8,
        0x94, 0xaf, 0x0a, 0x46, 0x5a, 0xc3, 0xb3, 0x7e, 0xf7, 0x57, 0x77, 0x7f, 0x0a, 0xf3, 0xd8, 0x03, 0x91, 0x02,
        0x55, 0x6a, 0x8d, 0xf9, 0xef, 0x1e, 0x8f, 0xbd, 0xb7, 0x4a, 0xf2, 0xea, 0xe3, 0x2a, 0x85, 0x79, 0x1a, 0xed,
        0x37, 0x90, 0x47, 0xe2, 0x02, 0x39, 0x9c, 0x6f, 0xdf, 0x7c, 0x3d, 0x89, 0xd2, 0x89, 0xd2, 0xca, 0xa5, 0xeb,
        0x2f, 0xfc, 0x5b, 0xd3, 0x74, 0xb2, 0xd2, 0x6d, 0xad, 0x00, 0x26, 0x9f, 0xd6, 0x29, 0x08, 0xd4, 0x30, 0xe6,
        0x54, 0xc6, 0x45, 0x42, 0xcc, 0xa9, 0x64, 0x53, 0xff, 0x0f, 0x37, 0xab, 0x10, 0x74, 0xb7, 0x79, 0x9d, 0x82,
        0x40, 0x9a, 0xc7, 0xbd, 0x5b, 0xd1, 0x75, 0x5b, 0xc6, 0x68, 0xbe, 0xc7, 0x07, 0x78, 0xbf, 0xce, 0xbf, 0xc6,
        0x2d, 0xee, 0x2f, 0x74, 0x78, 0x18, 0x5e, 0xee, 0x78, 0x20, 0xaf, 0x02, 0x1e, 0x0e, 0x1e, 0x04, 0x55, 0x7e,
        0x1a, 0x96, 0x5c, 0x99, 0x7a, 0xe7, 0x2c, 0x89, 0x8e, 0xa5, 0x4b, 0x27, 0xe4, 0x82, 0x89, 0xd6, 0x9d, 0xde,
        0xf8, 0x77, 0xb0, 0x67, 0x9d, 0x11, 0xd9, 0x5a, 0xb4, 0x0e, 0xcf, 0x96, 0xb8, 0x26, 0x44, 0x13, 0xc9, 0x58,
        0xdc, 0xa9, 0x7d, 0x91, 0xbc, 0xc4, 0x93, 0xe9, 0x05, 0xda, 0xcf, 0x70, 0x62, 0x40, 0xb6, 0x3f, 0xb3, 0xd0,
        0x0c, 0x75, 0x1f, 0x86, 0xed, 0xfc, 0x09, 0xa8, 0x2a, 0x8e, 0x03, 0xd6, 0x36, 0x6f, 0xa0, 0x5b, 0x26, 0xcd,
        0x59, 0x11, 0x89, 0x08, 0x55, 0xdc, 0x8e, 0xe8, 0x3d, 0xa4, 0x97, 0x8e, 0xf9, 0x0d, 0x45, 0x29, 0xae, 0x99,
        0xca, 0x33, 0x18, 0xd5, 0x59, 0x3c, 0x0c, 0xf5, 0xce, 0x39, 0x0f, 0x15, 0xb0, 0x5d, 0x9c, 0x32, 0xd1, 0x8c,
        0x3a, 0x28, 0xcf, 0xbc, 0x34, 0xdb, 0xae, 0x2f, 0xa4, 0x94, 0x42, 0x41, 0xcd, 0xca, 0xd1, 0x7c, 0xf0, 0xde,
        0x16, 0xf5, 0xce, 0xf9, 0xb2, 0x5a, 0xdd, 0xea, 0x5d, 0x30, 0x8f, 0x97, 0x99, 0x5d, 0x48, 0x0c, 0x85, 0xf7,
        0x44, 0x53, 0x35, 0x70, 0x4d, 0x46, 0x62, 0x23, 0x63, 0xcb, 0x16, 0xea, 0xce, 0x2e, 0xb0, 0x43, 0xcb, 0xab,
        0x65, 0x77, 0x95, 0x0a, 0x2e, 0x64, 0x39, 0x23, 0x91, 0x05, 0xf3, 0xab, 0x35, 0x25, 0xb3, 0x85, 0x84, 0xee,
        0x54, 0x72, 0x6b, 0xac, 0xf9, 0xea, 0x2d, 0x0f, 0xeb, 0x14, 0xcb, 0x69, 0x11, 0xba, 0x09, 0xb9, 0x1b, 0xf8,
        0xc1, 0xee, 0xac, 0xd2, 0x3e, 0x2c, 0x2f, 0xe9, 0x1e, 0x2a, 0x76, 0x83, 0xdf, 0x5a, 0xf2, 0xc0, 0xfd, 0xb0,
        0x5c, 0x35, 0x6e, 0x80, 0x59, 0x02, 0x64, 0xba, 0xe9, 0x2e, 0x00, 0xf2, 0x86, 0xec, 0x26, 0xdd, 0xec, 0x12,
        0x1c, 0xaf, 0x4c, 0xcb, 0xd4, 0x04, 0xd6, 0x43, 0x68, 0x39, 0xb9, 0x55, 0xc0, 0xdc, 0x01, 0xd7, 0xda, 0x26,
        0xf3, 0x44, 0x77, 0x30, 0x94, 0x87, 0x3f, 0xd9, 0xb5, 0x25, 0x34, 0xab, 0x44, 0x9a, 0xa2, 0xde, 0xd3, 0xad,
        0x18, 0x45, 0xc2, 0x40, 0xf6, 0x52, 0xf0, 0x79, 0x30, 0x69, 0x94, 0x0e, 0xf7, 0xe4, 0x6a, 0xe2, 0x37, 0x5e,
        0x86, 0xd3, 0x40, 0xf3, 0xad, 0x37, 0x36, 0x05, 0x46, 0xe9, 0x18, 0x20, 0xa9, 0x22, 0x46, 0xb5, 0xad, 0xf4,
        0x62, 0x00, 0xb1, 0x7e, 0xbe, 0x13, 0x6d, 0xe1, 0x69, 0x0b, 0xa5, 0x61, 0x4e, 0x25, 0x66, 0x22, 0x33, 0x86,
        0xe3, 0x95, 0x11, 0x2a, 0xbc, 0x22, 0x55, 0x47, 0xd9, 0xd8, 0x2a, 0xc7, 0xa5, 0x92, 0x1f, 0x70, 0x65, 0x67,
        0xd6, 0x85, 0xf6, 0x44, 0xe7, 0x1d, 0xad, 0x69, 0x92, 0x94, 0x7d, 0x65, 0x60, 0xb3, 0x41, 0xd4, 0x09, 0x82,
        0x14, 0x91, 0x3b, 0x50, 0x61, 0x06, 0x59, 0x92, 0x9a, 0x66, 0xf9, 0x41, 0x8e, 0x36, 0xe8, 0xa9, 0x4a, 0xeb,
        0xc1, 0x2e, 0xa2, 0xae, 0x53, 0x58, 0xa8, 0x45, 0xe8, 0xa3, 0x2b, 0xe2, 0x5c, 0x17, 0x10, 0x1b, 0xac, 0xbe,
        0x67, 0x62, 0x1c, 0xa3, 0xf8, 0x9a, 0xe3, 0xf6, 0x09, 0xa1, 0x4b, 0xeb, 0xb1, 0xa2, 0x91, 0x36, 0xad, 0xde,
        0x32, 0xc8, 0x36, 0x41, 0xa2, 0xa7, 0x66, 0x13, 0xa7, 0x9e, 0xc5, 0xf1, 0x8d, 0xba, 0xf8, 0x47, 0xd3, 0x4d,
        0xd0, 0xe4, 0x76, 0xb6, 0x1e, 0x6c, 0x70, 0x4a, 0x72, 0x39, 0xb4, 0x2d, 0x46, 0x1a, 0xed, 0x4b, 0x7f, 0x51,
        0x64, 0xdf, 0x13, 0x04, 0x8a, 0x83, 0x2d, 0xed, 0x30, 0xb7, 0xca, 0xa3, 0xfe, 0xb2, 0xf1, 0x7f, 0xd3, 0x51,
        0xe5, 0xce, 0xf6, 0x7c, 0x34, 0xb2, 0xbd, 0x98, 0x48, 0x6d, 0x96, 0x1a, 0x03, 0xe3, 0x36, 0x0c, 0xb6, 0x71,
        0x63, 0xf0, 0x6d, 0xb9, 0x60, 0xad, 0xce, 0x9d, 0xcd, 0xf9, 0x7c, 0x7c, 0xb9, 0x08, 0x07, 0x7a, 0x4f, 0xde,
        0x9f, 0x37, 0xb7, 0x47, 0x39, 0x74, 0x81, 0xa1, 0x37, 0xf6, 0xdd, 0xa5, 0x3e, 0x0c, 0xba, 0x0a, 0xa3, 0x15,
        0x19, 0xf3, 0x1b, 0x75, 0x65, 0x0d, 0xdc, 0x59, 0xbe, 0xaa, 0x57, 0x19, 0x00, 0x9a, 0xf5, 0x09, 0x5f, 0xec,
        0xef, 0xc3, 0xfe, 0xe9, 0x3c, 0x1d, 0xa7, 0xc7, 0xd7, 0xcd, 0x7e, 0xb8, 0xe0, 0x76, 0xc2, 0x23, 0x5c, 0xb9,
        0x74, 0x52, 0xa5, 0x9d, 0x94, 0x04, 0x4f, 0xee, 0xdc, 0x4f, 0xea, 0x45, 0xbd, 0x60, 0x5f, 0x45, 0x9e, 0x41,
        0xdf, 0xdf, 0xce, 0x72, 0xa6, 0xfd, 0xd6, 0x8f, 0xc7, 0x47, 0xfe, 0xdb, 0xcf, 0x96, 0x04, 0x75, 0x3f, 0x9d,
        0xee, 0x8d, 0xc9, 0x52, 0xa0, 0xc9, 0x88, 0xaa, 0x88, 0x82, 0x3b, 0x36, 0xb5, 0xbb, 0xf0, 0xcb, 0xd0, 0x3f,
        0xdb, 0x75, 0xc8, 0x7a, 0x83, 0x2a, 0x6a, 0xf9, 0x52, 0x83, 0xdb, 0x3a, 0x45, 0x99, 0x98, 0xf7, 0x58, 0x2c,
        0x95, 0x7b, 0x05, 0x93, 0x1b, 0xd9, 0xf2, 0xc0, 0x9a, 0xc3, 0x21, 0x9f, 0x6b, 0x5e, 0xda, 0xd8, 0xad, 0xc5,
        0x05, 0x82, 0x2c, 0xb3, 0x02, 0xd6, 0x0e, 0x88, 0xfb, 0xdc, 0x57, 0x80, 0xb5, 0x6e, 0x6c, 0xbb, 0x63, 0x47,
        0x15, 0x48, 0x7a, 0xee, 0x55, 0xae, 0xa4, 0xd8, 0x93, 0x3d, 0x19, 0xbf, 0x07, 0x7a, 0x03, 0xbc, 0x0f, 0xf7,
        0x37, 0x4b, 0x04, 0x04, 0x77, 0xdf, 0x66, 0x13, 0x2c, 0xfd, 0xf9, 0x35, 0x25, 0x5a, 0xd5, 0x29, 0xf0, 0xc4,
        0xdc, 0xc6, 0x68, 0xbe, 0x75, 0xbc, 0x02, 0xa9, 0xf3, 0xb2, 0x97, 0xa3, 0x86, 0x50, 0xe7, 0x3d, 0x73, 0x0c,
        0x79, 0xe0, 0x4c, 0x9b, 0x07, 0xe3, 0xe4, 0x14, 0x73, 0x32, 0xa2, 0x36, 0xa2, 0x54, 0x68, 0x0d, 0xc0, 0x98,
        0x93, 0xce, 0xe9, 0xa2, 0x0e, 0x23, 0x20, 0xa1, 0x22, 0xf8, 0xd1, 0xc5, 0x79, 0x0a, 0x39, 0x75, 0x10, 0x26,
        0x59, 0x13, 0x97, 0xba, 0xc0, 0x35, 0x08, 0xd5, 0x67, 0x7c, 0xcd, 0x36, 0xfe, 0xff, 0xa5, 0xb9, 0xcc, 0xf0,
        0xaf, 0xe8, 0xd4, 0xa4, 0x00, 0x54, 0x07, 0xf1, 0x51, 0xef, 0xe2, 0x78, 0x8a, 0x5a, 0x7b, 0x92, 0xd8, 0xcd,
        0x4b, 0xe4, 0xdf, 0xfb, 0x41, 0xf3, 0xa9, 0x50, 0x04, 0x68, 0x0e, 0xc7, 0x3a, 0x85, 0xa0, 0x34, 0x4b, 0x31,
        0x8f, 0x13, 0xa3, 0xd7, 0xf4, 0xa5, 0xc2, 0x05, 0xe7, 0xd7, 0x25, 0x00, 0x56, 0xa7, 0xd0, 0x53, 0x07, 0xc3,
        0xb4, 0x0b, 0xe2, 0xba, 0xc3, 0x39, 0x4e, 0xdd, 0xdf, 0x89, 0x5f, 0xc4, 0x28, 0xe2, 0xaa, 0xf8, 0x9a, 0x14,
        0xce, 0xa8, 0x8c, 0xe0, 0xc5, 0x57, 0xa3, 0x0d, 0x36, 0x1c, 0x78, 0x94, 0xd1, 0x3c, 0x75, 0xd2, 0x1e, 0x29,
        0x9c, 0x33, 0x11, 0xab, 0x5b, 0x1a, 0x81, 0x14, 0x9a, 0x46, 0x58, 0x33, 0x87, 0x51, 0x24, 0xfa, 0x8a, 0xc6,
        0x99, 0xaf, 0x42, 0xbc, 0x22, 0x4e, 0x13, 0x1a, 0xf5, 0x75, 0xad, 0xa7, 0xb3, 0x31, 0x6f, 0xcf, 0x2a, 0xe0,
        0xc7, 0x90, 0x92, 0x5c, 0x5b, 0xf8, 0xa8, 0x64, 0xa2, 0x5e, 0xbd, 0x6c, 0x88, 0x92, 0xe9, 0x76, 0x1d, 0xd7,
        0x2b, 0x69, 0x78, 0x22, 0xff, 0xaf, 0x97, 0xe9, 0x55, 0x6d, 0xbf, 0xfe, 0xe4, 0x12, 0xd6, 0x02, 0x47, 0xa5,
        0x66, 0x9c, 0x2d, 0x1b, 0xb3, 0x64, 0xbe, 0x17, 0xbb, 0x6f, 0xde, 0x59, 0xc6, 0x20, 0xee, 0xbc, 0x27, 0x7d,
        0xca, 0x45, 0x1c, 0x53, 0xbe, 0xdf, 0x7c, 0x4b, 0x0b, 0xd7, 0x39, 0x5a, 0x11, 0x7d, 0x61, 0xe5, 0x4e, 0xb7,
        0x28, 0x2b, 0x5a, 0xbd, 0x53, 0x7b, 0x50, 0x6f, 0x2c, 0x42, 0x84, 0xe7, 0x5a, 0x48, 0xd0, 0x40, 0x28, 0x6a,
        0x77, 0xbd, 0x74, 0x50, 0xe2, 0x0d, 0x7c, 0xa2, 0xa3, 0x9c, 0x38, 0x18, 0xcd, 0x67, 0xf8, 0x30, 0x9d, 0xce,
        0xfd, 0xe9, 0xfe, 0x86, 0xae, 0xf3, 0x8a, 0x96, 0x25, 0x34, 0x12, 0x97, 0x11, 0x2d, 0xd7, 0xc6, 0xfc, 0x96,
        0x33, 0x96, 0x92, 0xe0, 0xee, 0x52, 0xd3, 0x54, 0xd7, 0xbd, 0x62, 0xb4, 0xa9, 0xb6, 0x78, 0x11, 0xe8, 0xab,
        0x6d, 0x9d, 0xad, 0x00, 0xd1, 0x0a, 0xb6, 0xd5, 0x4b, 0xdd, 0xb5, 0xfb, 0xa0, 0x5f, 0x87, 0xd7, 0x23, 0x0b,
        0x72, 0x51, 0xe6, 0x46, 0x6b, 0x24, 0x66, 0x90, 0x85, 0x43, 0x76, 0xdb, 0xae, 0x8d, 0x53, 0x85, 0xcd, 0xd6,
        0x79, 0x3a, 0x63, 0xba, 0xf7, 0x82, 0x8b, 0x66, 0xdd, 0xbf, 0xee, 0xd9, 0x2b, 0x34, 0x0d, 0xae, 0x4c, 0x48,
        0xf0, 0xad, 0x2f, 0xb1, 0x3f, 0xfc, 0x00, 0xb9, 0x66, 0xb9, 0x87, 0x61, 0xe2, 0x8f, 0xa9, 0x7d, 0x87, 0x1a,
        0xf3, 0x06, 0x53, 0x39, 0x8c, 0x28, 0xe2, 0x0b, 0x43, 0xe2, 0x87, 0x56, 0x1b, 0xa2, 0xb1, 0x1c, 0xce, 0x9e,
        0xae, 0xd3, 0xd3, 0xb8, 0xa6, 0x7c, 0x17, 0x9f, 0x2e, 0xe1, 0x0a, 0x4c, 0xdd, 0xe3, 0x90, 0xf7, 0xf7, 0xba,
        0x5c, 0xcf, 0x5c, 0x97, 0xce, 0xb3, 0x72, 0xee, 0x86, 0x2b, 0x34, 0xca, 0x9d, 0xfa, 0x91, 0x38, 0x93, 0x8f,
        0xc9, 0x2e, 0x5a, 0x4b, 0x6e, 0x99, 0xc4, 0xbf, 0x43, 0xfa, 0xfd, 0xeb, 0xf4, 0x74, 0x4e, 0x91, 0xe6, 0xda,
        0x82, 0x4a, 0x25, 0xef, 0x99, 0x2f, 0x03, 0x60, 0x66, 0x4d, 0x80, 0xc4, 0x8a, 0x7e, 0x19, 0xe4, 0x83, 0x0f,
        0x22, 0x44, 0x4f, 0xf3, 0xbb, 0xff, 0x0b, 0x50, 0x4b, 0x01, 0x02, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x08,
        0x00, 0x42, 0x3b, 0x94, 0x4a, 0xdb, 0x02, 0xb5, 0x35, 0x5c, 0x45, 0x00, 0x00, 0x4f, 0xb4, 0x00, 0x00, 0x29,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f,
        0x54, 0x68, 0x65, 0x2e, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x30, 0x32, 0x45, 0x31, 0x33,
        0x2e, 0x43, 0x61, 0x6c, 0x69, 0x62, 0x61, 0x6e, 0x27, 0x73, 0x2e, 0x57, 0x61, 0x72, 0x2e, 0x53, 0x56, 0x41,
        0x2e, 0x73, 0x72, 0x74, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x57, 0x00,
        0x00, 0x00, 0xa3, 0x45, 0x00, 0x00, 0x00, 0x00};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));
    REQUIRE(host->StatTotalFiles() == 1);
    REQUIRE(host->StatTotalRegs() == 1);
    REQUIRE(host->StatTotalDirs() == 0);

    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/", 0).value();
        CHECK(listing->Filename(1) == "The.Expanse.S02E13.Caliban's.War.SVA.srt");
    }

    auto fn = "/The.Expanse.S02E13.Caliban's.War.SVA.srt";
    const VFSFilePtr file = host->CreateFile(fn).value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto d = file->ReadFile();
    REQUIRE(d->size() == 46159);
    CHECK(std::string_view{reinterpret_cast<const char *>(d->data()), d->size()}.ends_with("Sweet dreams."));
}

TEST_CASE(PREFIX "lzma support")
{
    const unsigned char arc_tar_xz[] = {
        0xfd, 0x37, 0x7a, 0x58, 0x5a, 0x00, 0x00, 0x04, 0xe6, 0xd6, 0xb4, 0x46, 0x02, 0x00, 0x21, 0x01, 0x16, 0x00,
        0x00, 0x00, 0x74, 0x2f, 0xe5, 0xa3, 0xe0, 0x0f, 0xff, 0x01, 0x46, 0x5d, 0x00, 0x17, 0x17, 0xc5, 0x06, 0x86,
        0x89, 0xe6, 0x64, 0x33, 0x26, 0x61, 0x9c, 0x11, 0x92, 0x8e, 0xf8, 0xf2, 0xae, 0x63, 0xa0, 0x5f, 0x82, 0xd1,
        0x93, 0xe2, 0xd4, 0xce, 0x06, 0x43, 0x19, 0x50, 0x42, 0x2c, 0x41, 0x63, 0xef, 0x16, 0xd5, 0x9a, 0xd6, 0x41,
        0x09, 0x20, 0xc6, 0x8b, 0x55, 0x14, 0xe8, 0x7b, 0xbf, 0x0e, 0x76, 0x35, 0xe4, 0x06, 0x2a, 0xe2, 0x16, 0x0f,
        0x5d, 0xd6, 0x06, 0xf1, 0x7b, 0x98, 0x56, 0x28, 0xef, 0x75, 0x1b, 0xcf, 0xd5, 0xd9, 0x75, 0x4d, 0xc8, 0x9a,
        0x47, 0xd5, 0xde, 0x8d, 0x13, 0xf5, 0x8e, 0x83, 0x0e, 0x35, 0x54, 0x89, 0xa1, 0x84, 0x8c, 0x8e, 0x49, 0x7b,
        0x57, 0x35, 0x25, 0x9d, 0x8d, 0x54, 0x65, 0x98, 0xf0, 0x83, 0x70, 0x05, 0xef, 0xc9, 0x11, 0xdb, 0x3d, 0x13,
        0x0b, 0x3d, 0xa4, 0xee, 0xe0, 0x3f, 0x4c, 0xcd, 0x0c, 0x2f, 0x97, 0xbe, 0x51, 0x3f, 0xd6, 0x59, 0xb3, 0xf1,
        0x3f, 0xcb, 0x3f, 0x3c, 0x56, 0x02, 0x77, 0x63, 0x47, 0x36, 0x22, 0x52, 0x19, 0x47, 0xe0, 0x34, 0x6d, 0xc5,
        0x0c, 0x21, 0xe4, 0xea, 0x58, 0xc2, 0x66, 0xb6, 0x94, 0x07, 0xc4, 0x17, 0xf6, 0x9d, 0xa6, 0x02, 0xe6, 0x51,
        0x0a, 0xc2, 0x80, 0xef, 0x39, 0x91, 0x18, 0x7d, 0x37, 0xb3, 0x01, 0x77, 0x3e, 0xb1, 0xfd, 0x55, 0x6f, 0x27,
        0xe8, 0xb9, 0x2a, 0x7a, 0x56, 0x9f, 0xa5, 0x60, 0x48, 0x18, 0xb1, 0x16, 0x83, 0x38, 0x38, 0x43, 0x68, 0x23,
        0xdf, 0xf2, 0x59, 0xd2, 0x8f, 0x3b, 0x88, 0x9c, 0x79, 0xcf, 0x0d, 0xf2, 0x3d, 0x76, 0x82, 0x8e, 0xbf, 0x1b,
        0xfe, 0x22, 0xc4, 0xe7, 0x8c, 0x5e, 0x99, 0x98, 0x05, 0xc1, 0x44, 0xae, 0xb7, 0xef, 0x08, 0x5a, 0x18, 0xe3,
        0x9c, 0xc1, 0x20, 0x0b, 0xd5, 0x81, 0xbb, 0xd0, 0x83, 0x05, 0x5a, 0xf0, 0xc5, 0x6d, 0x53, 0xdd, 0x08, 0x22,
        0x83, 0x53, 0x09, 0x92, 0x56, 0xd7, 0x12, 0x25, 0x83, 0x44, 0x0c, 0x23, 0x55, 0x4c, 0x12, 0xf0, 0x1b, 0x39,
        0xd2, 0x3b, 0x4f, 0x26, 0x75, 0x2d, 0xc2, 0x9b, 0xd3, 0x59, 0xd1, 0x3c, 0x64, 0x77, 0x61, 0xf2, 0x6b, 0x06,
        0xe4, 0x25, 0x0c, 0x64, 0x05, 0xc8, 0x61, 0x2d, 0xb2, 0x8f, 0x62, 0xe3, 0xe2, 0xa5, 0xac, 0xfc, 0xf9, 0x93,
        0xbe, 0x9c, 0x2c, 0x9f, 0x76, 0xe5, 0xda, 0x7d, 0xae, 0x91, 0x5e, 0xaf, 0xc0, 0x04, 0x00, 0x00, 0x00, 0x00,
        0x0b, 0xec, 0xd8, 0xf4, 0x31, 0xc7, 0xe1, 0x6f, 0x00, 0x01, 0xe2, 0x02, 0x80, 0x20, 0x00, 0x00, 0xef, 0xcd,
        0x0d, 0x37, 0xb1, 0xc4, 0x67, 0xfb, 0x02, 0x00, 0x00, 0x00, 0x00, 0x04, 0x59, 0x5a};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_xz";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_tar_xz), std::size(arc_tar_xz)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));
    REQUIRE(host->StatTotalFiles() == 1);
    REQUIRE(host->StatTotalRegs() == 1);
    REQUIRE(host->StatTotalDirs() == 0); // root doesn't count

    REQUIRE(host->FetchDirectoryListing("/", 0));

    auto fn = "/Hello.txt";
    const VFSFilePtr file = host->CreateFile(fn).value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto d = file->ReadFile();
    REQUIRE(d->size() == 5);
    auto ref = "World";
    REQUIRE(memcmp(d->data(), ref, strlen(ref)) == 0);
}

TEST_CASE(PREFIX "zip with GB18030-2020 support")
{
    // This archive was made by Windows7 with a "Chinese (Simplified, PRC)" language.
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x83, 0x51, 0x58, 0x56, 0xcc, 0x2a,
        0x9d, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0xce, 0xac, 0xbb, 0xf9,
        0xb0, 0xd9, 0xbf, 0xc6, 0xca, 0xc7, 0xca, 0xb2, 0xc3, 0xb4, 0x2f, 0xd2, 0xd4, 0xbc, 0xb0, 0xbe, 0xdf,
        0xd3, 0xd0, 0xb0, 0xd9, 0xbf, 0xc6, 0xc8, 0xab, 0xca, 0xe9, 0xd6, 0xae, 0xd2, 0xe2, 0xb5, 0xc4, 0x2e,
        0x74, 0x78, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x21, 0x50, 0x4b, 0x01, 0x02, 0x14, 0x00, 0x14, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x78, 0x83, 0x51, 0x58, 0x56, 0xcc, 0x2a, 0x9d, 0x06, 0x00, 0x00, 0x00, 0x06,
        0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xce, 0xac, 0xbb, 0xf9, 0xb0, 0xd9, 0xbf, 0xc6, 0xca, 0xc7, 0xca, 0xb2, 0xc3,
        0xb4, 0x2f, 0xd2, 0xd4, 0xbc, 0xb0, 0xbe, 0xdf, 0xd3, 0xd0, 0xb0, 0xd9, 0xbf, 0xc6, 0xc8, 0xab, 0xca,
        0xe9, 0xd6, 0xae, 0xd2, 0xe2, 0xb5, 0xc4, 0x2e, 0x74, 0x78, 0x74, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x57, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    REQUIRE(host->FetchDirectoryListing("/", 0));
    REQUIRE(host->FetchDirectoryListing("/维基百科是什么", 0));

    auto fn = "/维基百科是什么/以及具有百科全书之意的.txt";
    const VFSFilePtr file = host->CreateFile(fn).value();
    REQUIRE(file->Open(VFSFlags::OF_Read) == 0);
    auto d = file->ReadFile();
    CHECK(std::string_view{reinterpret_cast<const char *>(d.value().data()), d.value().size()} == "Hello!");
}

TEST_CASE(PREFIX "synthetic directories semantics")
{
    // mkdir dir
    // echo hello > dir/file.txt
    // zip -rD arc.zip dir
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x9b, 0xab, 0x58, 0x20, 0x30, 0x3a, 0x36,
        0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x1c, 0x00, 0x64, 0x69, 0x72, 0x2f, 0x66, 0x69,
        0x6c, 0x65, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x09, 0x00, 0x03, 0xf2, 0xb7, 0x3f, 0x66, 0xf4, 0xb7, 0x3f,
        0x66, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x68, 0x65,
        0x6c, 0x6c, 0x6f, 0x0a, 0x50, 0x4b, 0x01, 0x02, 0x1e, 0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x9b,
        0xab, 0x58, 0x20, 0x30, 0x3a, 0x36, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x18, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0x64, 0x69, 0x72, 0x2f,
        0x66, 0x69, 0x6c, 0x65, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x05, 0x00, 0x03, 0xf2, 0xb7, 0x3f, 0x66, 0x75,
        0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x52, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00, 0x00, 0x00, 0x00};

    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    struct stat zip_stat;
    REQUIRE(stat(path.c_str(), &zip_stat) == 0);
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    VFSStat st;
    REQUIRE(host->Stat("/dir", st, 0) == 0);
    CHECK(st.mode == (S_IFDIR | S_IRUSR | S_IXUSR | S_IWUSR | S_IRGRP | S_IXGRP | S_IROTH | S_IXOTH));
    CHECK(st.ctime == zip_stat.st_ctimespec);
    CHECK(st.mtime == zip_stat.st_mtimespec);
    CHECK(st.btime == zip_stat.st_birthtimespec);
    CHECK(st.uid == zip_stat.st_uid);
    CHECK(st.gid == zip_stat.st_gid);

    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "dir");
    }

    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/dir", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "file.txt");
    }

    CheckFileIs(*host, "/dir/file.txt", "hello\n");
}

TEST_CASE(PREFIX "synthetic directories semantics, nested case")
{
    // mkdir -p a/c/g
    // mkdir -p a/d/h
    // mkdir -p b/e/i
    // mkdir -p b/f/j
    // echo acg > a/c/g/f.txt
    // echo adh > a/d/h/f.txt
    // echo bei > b/e/i/f.txt
    // echo bfj > b/f/j/f.txt
    // zip -rD arc.zip a b
    const unsigned char arc_zip[] = {
        0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac, 0xab, 0x58, 0x7d, 0x2e, 0x26, 0x22,
        0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x1c, 0x00, 0x61, 0x2f, 0x63, 0x2f, 0x67, 0x2f,
        0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x09, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x44, 0xd6, 0x3f, 0x66,
        0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x61, 0x63, 0x67,
        0x0a, 0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac, 0xab, 0x58, 0x37, 0x24, 0xf1,
        0xa0, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x1c, 0x00, 0x61, 0x2f, 0x64, 0x2f, 0x68,
        0x2f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x09, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x44, 0xd6, 0x3f,
        0x66, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x61, 0x64,
        0x68, 0x0a, 0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac, 0xab, 0x58, 0x35, 0x3d,
        0xf6, 0x83, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x1c, 0x00, 0x62, 0x2f, 0x66, 0x2f,
        0x6a, 0x2f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x09, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x44, 0xd6,
        0x3f, 0x66, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x62,
        0x66, 0x6a, 0x0a, 0x50, 0x4b, 0x03, 0x04, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac, 0xab, 0x58, 0xaf,
        0xd0, 0x9d, 0xaa, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x1c, 0x00, 0x62, 0x2f, 0x65,
        0x2f, 0x69, 0x2f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x09, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x44,
        0xd6, 0x3f, 0x66, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00,
        0x62, 0x65, 0x69, 0x0a, 0x50, 0x4b, 0x01, 0x02, 0x1e, 0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac,
        0xab, 0x58, 0x7d, 0x2e, 0x26, 0x22, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x18, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0x61, 0x2f, 0x63, 0x2f,
        0x67, 0x2f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x05, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x75, 0x78,
        0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x1e,
        0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac, 0xab, 0x58, 0x37, 0x24, 0xf1, 0xa0, 0x04, 0x00, 0x00,
        0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4,
        0x81, 0x49, 0x00, 0x00, 0x00, 0x61, 0x2f, 0x64, 0x2f, 0x68, 0x2f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54,
        0x05, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04,
        0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x1e, 0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac,
        0xab, 0x58, 0x35, 0x3d, 0xf6, 0x83, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x18, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x92, 0x00, 0x00, 0x00, 0x62, 0x2f, 0x66, 0x2f,
        0x6a, 0x2f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54, 0x05, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x75, 0x78,
        0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04, 0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x01, 0x02, 0x1e,
        0x03, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0xac, 0xab, 0x58, 0xaf, 0xd0, 0x9d, 0xaa, 0x04, 0x00, 0x00,
        0x00, 0x04, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4,
        0x81, 0xdb, 0x00, 0x00, 0x00, 0x62, 0x2f, 0x65, 0x2f, 0x69, 0x2f, 0x66, 0x2e, 0x74, 0x78, 0x74, 0x55, 0x54,
        0x05, 0x00, 0x03, 0x44, 0xd6, 0x3f, 0x66, 0x75, 0x78, 0x0b, 0x00, 0x01, 0x04, 0xf5, 0x01, 0x00, 0x00, 0x04,
        0x14, 0x00, 0x00, 0x00, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x44, 0x01,
        0x00, 0x00, 0x24, 0x01, 0x00, 0x00, 0x00, 0x00};

    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_zip";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_zip), std::size(arc_zip)}));
    struct stat zip_stat;
    REQUIRE(stat(path.c_str(), &zip_stat) == 0);
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));

    for( auto p : {"/a", "/b", "/a/c", "/a/d", "/b/e", "/b/f", "/a/c/g", "/a/d/h", "/b/e/i", "/b/f/j"} ) {
        VFSStat st;
        REQUIRE(host->Stat(p, st, 0) == 0);
        CHECK(st.mode == (S_IFDIR | S_IRUSR | S_IXUSR | S_IWUSR | S_IRGRP | S_IXGRP | S_IROTH | S_IXOTH));
        CHECK(st.ctime == zip_stat.st_ctimespec);
        CHECK(st.mtime == zip_stat.st_mtimespec);
        CHECK(st.btime == zip_stat.st_birthtimespec);
        CHECK(st.uid == zip_stat.st_uid);
        CHECK(st.gid == zip_stat.st_gid);
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 2);
        REQUIRE(listing->Filename(0) == "a");
        REQUIRE(listing->Filename(1) == "b");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/a", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 2);
        REQUIRE(listing->Filename(0) == "c");
        REQUIRE(listing->Filename(1) == "d");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/a/c", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "g");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/a/c/g", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "f.txt");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/a/d", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "h");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/a/d/h", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "f.txt");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/b", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 2);
        REQUIRE(listing->Filename(0) == "f");
        REQUIRE(listing->Filename(1) == "e");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/b/e", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "i");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/b/e/i", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "f.txt");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/b/f", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "j");
    }
    {
        const VFSListingPtr listing = host->FetchDirectoryListing("/b/f/j", VFSFlags::F_NoDotDot).value();
        REQUIRE(listing->Count() == 1);
        REQUIRE(listing->Filename(0) == "f.txt");
    }
    CheckFileIs(*host, "/a/c/g/f.txt", "acg\n");
    CheckFileIs(*host, "/a/d/h/f.txt", "adh\n");
    CheckFileIs(*host, "/b/e/i/f.txt", "bei\n");
    CheckFileIs(*host, "/b/f/j/f.txt", "bfj\n");
}

TEST_CASE(PREFIX "synthetic directories can be correctly resolved")
{
    // In a Linux box: "tar -czf - /etc/rc0.d/"
    // % tar -tvf ./arc.tar.gz
    // drwxr-xr-x  0 root   root        0 30 Dec 18:03 etc/rc0.d/
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01cryptdisks-early -> ../init.d/cryptdisks-early
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01open-iscsi -> ../init.d/open-iscsi
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01iscsid -> ../init.d/iscsid
    // lrwxrwxrwx  0 root   root        0 30 Dec 18:03 etc/rc0.d/K01docker -> ../init.d/docker
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01plymouth -> ../init.d/plymouth
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01unattended-upgrades -> ../init.d/unattended-upgrades
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01open-vm-tools -> ../init.d/open-vm-tools
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01uuidd -> ../init.d/uuidd
    // lrwxrwxrwx  0 root   root        0 10 Jul  2024 etc/rc0.d/K01cryptdisks -> ../init.d/cryptdisks
    unsigned char arc_tar_gz[] = {
        0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xed, 0x97, 0x4d, 0x6e, 0x83, 0x30, 0x10, 0x46,
        0xe7, 0x28, 0x5c, 0x80, 0xc4, 0x03, 0xfe, 0x39, 0x44, 0x4f, 0x81, 0xb0, 0xd5, 0xa2, 0x24, 0x18, 0x19, 0x13,
        0x29, 0xb7, 0xaf, 0x61, 0xd1, 0x9a, 0xa6, 0x6d, 0x6a, 0xc9, 0x5e, 0xb4, 0x9d, 0xb7, 0x31, 0x12, 0x48, 0xf3,
        0x89, 0xc7, 0xe0, 0xb1, 0xf1, 0xfd, 0xd1, 0xf5, 0xec, 0xa0, 0x8f, 0x50, 0x0c, 0x16, 0x50, 0x42, 0x6c, 0x6b,
        0xe0, 0xe3, 0xba, 0x5d, 0x23, 0x57, 0x2d, 0x17, 0x92, 0x21, 0x97, 0xc0, 0x10, 0x1b, 0xae, 0xa0, 0x12, 0xe5,
        0x22, 0xbd, 0xb3, 0xcc, 0xbe, 0x73, 0x55, 0x05, 0xce, 0x5a, 0xff, 0xdd, 0x73, 0x8f, 0xee, 0xff, 0x52, 0xcc,
        0x9b, 0xff, 0x27, 0x86, 0xbd, 0xbb, 0x4d, 0x5e, 0x0f, 0xf3, 0x69, 0xae, 0x4d, 0xe7, 0xce, 0xb7, 0x4c, 0x35,
        0x36, 0xff, 0x4a, 0x3d, 0xf0, 0x2f, 0x79, 0xcb, 0x39, 0x67, 0x32, 0xf8, 0x6f, 0x50, 0x22, 0x42, 0xd5, 0x1c,
        0x0e, 0xc7, 0x61, 0x1c, 0x7c, 0x08, 0x57, 0x28, 0x19, 0x90, 0xff, 0xd8, 0xbf, 0x9d, 0xcc, 0x58, 0x0f, 0x73,
        0x3f, 0x0f, 0x59, 0x6b, 0xa4, 0xf8, 0x47, 0xd6, 0x86, 0xfe, 0x57, 0xc8, 0xf6, 0xfe, 0x0b, 0x25, 0x03, 0xf2,
        0x1f, 0xfb, 0xdf, 0x5e, 0xb0, 0xce, 0x5e, 0x23, 0xdd, 0xbf, 0x10, 0xd8, 0xee, 0xfc, 0x17, 0x4a, 0x06, 0xe4,
        0x3f, 0xf6, 0xaf, 0x6d, 0x7f, 0x32, 0x2e, 0x7b, 0x8d, 0x9f, 0xf9, 0x8f, 0xf7, 0x7f, 0x21, 0x18, 0xdf, 0xf9,
        0x2f, 0x94, 0x0c, 0xc8, 0x7f, 0xec, 0x7f, 0x3a, 0xdf, 0x2e, 0x76, 0xf1, 0x2f, 0x99, 0x6b, 0x24, 0xf5, 0x3f,
        0xae, 0xfd, 0x2f, 0x45, 0xd3, 0xec, 0xfc, 0x17, 0x4a, 0x06, 0xe4, 0x3f, 0xf6, 0xbf, 0x8c, 0x9d, 0xf7, 0x66,
        0xd4, 0x46, 0xd7, 0xcb, 0xf4, 0xec, 0x3a, 0x6d, 0xe6, 0x1c, 0x35, 0xd2, 0xfe, 0xff, 0x3c, 0xcc, 0x7f, 0x8d,
        0x0c, 0x63, 0x60, 0xec, 0xbf, 0x50, 0x32, 0x20, 0xff, 0x77, 0xf3, 0xdf, 0xf5, 0x52, 0x7b, 0x6b, 0xcf, 0xb9,
        0xde, 0x2f, 0xa4, 0xfa, 0x5f, 0xe7, 0xff, 0xf0, 0x05, 0xb0, 0xfb, 0xf9, 0x2f, 0x7f, 0x32, 0x20, 0xff, 0xbb,
        0xfe, 0x5f, 0x06, 0x5d, 0x60, 0xc8, 0x4a, 0xf1, 0x1f, 0xce, 0x7e, 0xeb, 0xfe, 0x1f, 0xbe, 0x80, 0x7d, 0xff,
        0x97, 0x49, 0x06, 0xe4, 0xff, 0xf3, 0xf3, 0x7f, 0xd6, 0x1a, 0x49, 0xfe, 0xd7, 0xf3, 0x3f, 0xaa, 0x56, 0x8a,
        0x2f, 0xce, 0xff, 0x59, 0x93, 0xc1, 0xbf, 0xf7, 0x4f, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41, 0x10, 0x04, 0x41,
        0x10, 0x04, 0x41, 0x10, 0xc4, 0xdf, 0xe5, 0x15, 0xa0, 0xb9, 0xb8, 0x94, 0x00, 0x28, 0x00, 0x00};
    const TestDir dir;
    const auto path = std::filesystem::path(dir.directory) / "arc_tar_gz";
    REQUIRE(nc::base::WriteAtomically(path, {reinterpret_cast<const std::byte *>(arc_tar_gz), std::size(arc_tar_gz)}));
    std::shared_ptr<ArchiveHost> host;
    REQUIRE_NOTHROW(host = std::make_shared<ArchiveHost>(path.c_str(), TestEnv().vfs_native));
    auto readsym = [&](const std::string_view _path) -> std::string { return host->ReadSymlink(_path).value(); };
    REQUIRE(host->IsDirectory("/etc", VFSFlags::None));
    REQUIRE(host->IsDirectory("/etc/rc0.d", VFSFlags::None));
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01cryptdisks-early", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01cryptdisks-early") == "../init.d/cryptdisks-early");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01open-iscsi", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01open-iscsi") == "../init.d/open-iscsi");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01iscsid", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01iscsid") == "../init.d/iscsid");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01docker", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01docker") == "../init.d/docker");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01plymouth", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01plymouth") == "../init.d/plymouth");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01unattended-upgrades", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01unattended-upgrades") == "../init.d/unattended-upgrades");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01open-vm-tools", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01open-vm-tools") == "../init.d/open-vm-tools");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01uuidd", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01uuidd") == "../init.d/uuidd");
    REQUIRE(host->IsSymlink("/etc/rc0.d/K01cryptdisks", VFSFlags::F_NoFollow));
    REQUIRE(readsym("/etc/rc0.d/K01cryptdisks") == "../init.d/cryptdisks");
}
